cset: moving following pidspec: 31841
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.418673784 seconds)
loading group "string"... done (took 0.507837761 seconds)
loading group "linalg"... done (took 8.476130328 seconds)
loading group "parallel"... done (took 0.171181588 seconds)
loading group "find"... done (took 3.021811778 seconds)
loading group "tuple"... done (took 1.992517745 seconds)
loading group "dates"... done (took 1.461761786 seconds)
loading group "micro"... done (took 0.195438105 seconds)
loading group "io"... done (took 0.537052019 seconds)
loading group "scalar"... done (took 51.058511009 seconds)
loading group "sparse"... done (took 13.489716497 seconds)
loading group "broadcast"... done (took 1.269149009 seconds)
loading group "union"... done (took 9.5477213 seconds)
loading group "simd"... done (took 3.168283588 seconds)
loading group "random"... done (took 11.716191489 seconds)
loading group "problem"... done (took 2.184174485 seconds)
loading group "array"... done (took 24.628283246 seconds)
loading group "misc"... done (took 1.099960823 seconds)
loading group "sort"... done (took 3.677860934 seconds)
loading group "collection"... done (took 18.993993903 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.595943889 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128462782 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201875783 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.278784455 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229126773 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165917271 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143319747 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240701605 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.520148162 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.199219281 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137528888 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418105066 seconds)
done (took 5.982179705 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249694911 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240213747 seconds)
    (2/2) benchmarking "String"...
    done (took 0.163421835 seconds)
  done (took 1.069384714 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077365973 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157699157 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107595918 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09650026 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094454572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108746748 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092822484 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108204662 seconds)
  done (took 1.436053844 seconds)
done (took 3.502042291 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492967411 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.853704178 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.481136947 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142420864 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31133319 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293011653 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265752368 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198979669 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09271929 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089161448 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174679927 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.390310486 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.381756739 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.933698521 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089698757 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093772049 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129956664 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.750600715 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079460164 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.120639244 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.488586345 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.189116518 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113457609 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105429291 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185892989 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132741794 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158324836 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102019107 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667939662 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131205231 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.17745587 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096661806 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157214849 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184226315 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192684099 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11061381 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671318777 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199746248 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097996441 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101114335 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679104926 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116537508 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.181513595 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103338595 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088227487 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178736571 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098638786 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093351953 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094531852 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085972458 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161904637 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.445942133 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104531336 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168266831 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093224564 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687278376 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097077054 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27362224 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131767819 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096332388 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089605963 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087909947 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162798031 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094795602 seconds)
  done (took 19.749104263 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14501517 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163847675 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078053909 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154933846 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122313402 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080944574 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102343088 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078554272 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125262611 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180070614 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137794516 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152145056 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091840299 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090339841 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12765682 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248469651 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111062411 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123708974 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08991136 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090459952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141066565 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096655551 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108224424 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092494269 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170174033 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202117943 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108165241 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122146396 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091593063 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096629021 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142187941 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145365556 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092051395 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090485842 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187346541 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109996157 seconds)
  done (took 5.17547249 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.218227656 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104646386 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.223432925 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195867971 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131862507 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181438536 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148837783 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267641151 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.203132846 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180071114 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113519732 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113682354 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079862297 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080426035 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095180752 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.448661024 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149126448 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189157916 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1615217 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11075362 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082726366 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362717992 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105307093 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083819412 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109585348 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063235187 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.200375544 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093432004 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.132902063 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084176399 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119344141 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132056364 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193553523 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126776693 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138215481 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093051239 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102184661 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.208079389 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118243598 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.121157774 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101816659 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078694853 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134890702 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117723579 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132578987 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091961863 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.151448491 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221123185 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12353379 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085996422 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126160664 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.020025643 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196328362 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126947263 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085936299 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294229981 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.125633434 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0991188 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.106394536 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.780610852 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129461549 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082658453 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081576933 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116828753 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081696907 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.43396145 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120833017 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.032188355 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085133309 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158300904 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095532575 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117157571 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085702098 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10187863 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.108400162 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08493574 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096799087 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08572977 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079654358 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105177349 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112127067 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100228289 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081466456 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147037719 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114161591 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107523485 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124042555 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091743443 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087810576 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132411427 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084971884 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098754222 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091024146 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164250838 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096255515 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.128202664 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096543595 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144763256 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086647188 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.233778341 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085226806 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125281679 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102642496 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125521805 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099804467 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080698005 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101434351 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079188295 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080279343 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160244382 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087577312 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081214294 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.1044823 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093351591 seconds)
  done (took 28.106369525 seconds)
done (took 53.699060135 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430360255 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081280414 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079668117 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.098133617 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081003035 seconds)
  done (took 1.514768807 seconds)
done (took 2.236568199 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317280977 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187529996 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103661351 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184135988 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08946203 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190167482 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177431042 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094926759 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201094476 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083764151 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1827294 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084257799 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103175235 seconds)
  done (took 2.743023226 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102551281 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110417196 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118608605 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103511307 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085182911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101779354 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119792724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11228378 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103838481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113091033 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086142006 seconds)
  done (took 1.875461509 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099615383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105714167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101577304 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117347839 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086316796 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100710075 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117586751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108629016 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098514775 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112749829 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085569882 seconds)
  done (took 1.854595721 seconds)
done (took 7.191211805 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.066895854 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.083308436 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165342787 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208944525 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345203314 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234990529 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.553998764 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150874632 seconds)
  done (took 13.675813846 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.122125329 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.152541197 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092756579 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090910751 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090118428 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107611482 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094176234 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093211462 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108544852 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095561373 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090295362 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10582945 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09309742 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094390554 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10864827 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095693725 seconds)
  done (took 2.417190255 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142817609 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138982731 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097369561 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097536551 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11126418 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.09863533 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100357767 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113529973 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09381186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095024835 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117134448 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098959308 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096002846 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108251292 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10009079 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11719405 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109560713 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098814903 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11633044 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114768285 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099948851 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095093491 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112916949 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099523152 seconds)
  done (took 3.379388646 seconds)
done (took 20.195444392 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146906559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100699245 seconds)
  done (took 0.970342354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138698629 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154151825 seconds)
  done (took 1.020365985 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11136551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09049448 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136216763 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103135 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090450903 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106901353 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116553137 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105687541 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09130414 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092103631 seconds)
  done (took 1.776171945 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094933892 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094574296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121719956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136356197 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115056238 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09393087 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094364316 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092337945 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113785914 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090738553 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095865441 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126455437 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095574661 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12437103 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095047848 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095969608 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114592676 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094680072 seconds)
  done (took 2.623661771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091297954 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091952952 seconds)
  done (took 0.915191294 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093249352 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090045116 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092022328 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108407522 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090239633 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089562248 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105422509 seconds)
  done (took 1.400579466 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.602942555 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.257684405 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.352161826 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10793659 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142801077 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346927577 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145414916 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103718003 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10220279 seconds)
  done (took 2.92890928 seconds)
done (took 12.364997239 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092202195 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218751877 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.600900107 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114754312 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090052073 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156880028 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.283990024 seconds)
done (took 2.297474779 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3370797 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141361665 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079658855 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090916148 seconds)
  done (took 1.381798843 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082122624 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098070276 seconds)
  done (took 0.921794865 seconds)
done (took 3.044714656 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089767824 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089553189 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087556739 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10479762 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088113126 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087863081 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136749444 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088159614 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087713633 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106567506 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.088602706 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.088600474 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087615544 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105632778 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088987876 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087202183 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104707039 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088383525 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088184716 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087402349 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103480878 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088673932 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087937023 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.104401278 seconds)
  done (took 3.04086874 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107963144 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090288274 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107378029 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093499209 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09374826 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108664333 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093094011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090203432 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10894452 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091076447 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092567156 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109117378 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092267782 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093640461 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1057999 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095258121 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093136243 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106467276 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091875453 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093136029 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10713444 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091573957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093790755 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0914911 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109376462 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092223969 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089800308 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106991321 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09323375 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092396442 seconds)
  done (took 3.66700414 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098273415 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087223204 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088127084 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112868372 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086608551 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089292625 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101412902 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088122113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090627711 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087645666 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106980428 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08901986 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085592695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107619234 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091469785 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091130214 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112911348 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0880033 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08681635 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089712309 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109337418 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088085556 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089294286 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106373389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089603035 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086815281 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088137775 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105773961 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089654387 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089552921 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108148416 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092448984 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088517914 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115741457 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093573482 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08838715 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093300131 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103265058 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090695971 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086067224 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10260293 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089258587 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086310246 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111972563 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090262031 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089664954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085763097 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106476574 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090127436 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092103928 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.101305499 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087627641 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091512934 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090365365 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108014511 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087118805 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090086324 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102911804 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09066938 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088862668 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103303994 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086551349 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09414778 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089969601 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119870016 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095798469 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086102429 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.107220461 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090388807 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094988219 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108711133 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100232947 seconds)
  done (took 7.58891107 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102434057 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098146258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089278029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108230661 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090356367 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089739754 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111246392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090663242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091176341 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114272235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090320835 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090409213 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107920865 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091749812 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090827128 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0911962 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113237256 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090723296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089527406 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108568453 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090964993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094736452 seconds)
  done (took 2.887369116 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234158584 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096297788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136837624 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119103318 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107436774 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119613579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09507976 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095427896 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111078215 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098767247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102092864 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112046656 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108259895 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114602936 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099898527 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100270164 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110753694 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101377288 seconds)
  done (took 2.814989343 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103363954 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092507462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128272902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092981104 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091645843 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094010102 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114769448 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11217741 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108205385 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092752216 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098090977 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107798902 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093911971 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092309491 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092771787 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109685825 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092676167 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091929401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115154934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097503774 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113051002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099988747 seconds)
  done (took 2.989535546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104544902 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092212307 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125026707 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095493737 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091013805 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107787551 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097364702 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091817665 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114195175 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.091794908 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092294276 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090367589 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123317775 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092502437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096764175 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109637173 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093132224 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092823827 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109291595 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091529614 seconds)
  done (took 2.75929028 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168502662 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123611755 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107936593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115473168 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123409529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108443886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114770265 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124564016 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109329103 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135061742 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108849385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107672137 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133178327 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113723112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123974251 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117139159 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114607254 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132536522 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108671504 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123785078 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119066536 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10739569 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131241068 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107306612 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12206492 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109028591 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107100155 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12939866 seconds)
  done (took 4.105236031 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091043252 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090299374 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08989516 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106671961 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090140634 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089565486 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08956387 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108448042 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090987455 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089510766 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108664657 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091638617 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089962884 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09030157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107948719 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090442385 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090411368 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106868629 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091502214 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090411214 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09025772 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108411495 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091176759 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090119865 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108333726 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09147671 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091137785 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089500982 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108108873 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09103162 seconds)
  done (took 3.6112947 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102671637 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100981865 seconds)
  done (took 0.965394676 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098100462 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104744478 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091342424 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108854054 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097720553 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090776454 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116078467 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097711003 seconds)
  done (took 1.567545092 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140542572 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160562718 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095556535 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102316046 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160704626 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151077155 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131669171 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095681018 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107400949 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08500085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152960976 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084373339 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091701231 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106866269 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092746617 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09700807 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109249981 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100953536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097373431 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092988297 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115002184 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096251059 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111011773 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101734411 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086175742 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110913748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096704861 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102048879 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105710818 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093508015 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089699421 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109737096 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09479398 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095448902 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091518192 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160323092 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098439095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106082067 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092945067 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095678196 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141937092 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092159065 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091735818 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108123629 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094469674 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094928879 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113428856 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092714114 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083527964 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104278216 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092540437 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086933238 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.108420657 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094018632 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09273488 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115494044 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096009896 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088975007 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104665243 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088504886 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090411763 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087058047 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112289466 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096505719 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110558639 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093548575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091272732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09069075 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.112000533 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093504886 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090669598 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125844035 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09364352 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095495629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114260247 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093844924 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088676403 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115016912 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091349275 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091008915 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115084283 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120907699 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093342126 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106776583 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087342274 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097462112 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111565311 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096407403 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085022116 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118329342 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09521718 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093032934 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.1022245 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09136267 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087670249 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.111400787 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086044412 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093291232 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090221189 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.114207321 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096508255 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090145489 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111528202 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096927378 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096505747 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109446119 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.135541779 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107110828 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087940393 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093513457 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113322796 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086829669 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091536229 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091493965 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108635048 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087886841 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096006345 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110589012 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093763559 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09477458 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112702643 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095156671 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09472335 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109576323 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09001839 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095350915 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1168311 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095814726 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093530354 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.11119636 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093943318 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092197398 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112976439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090868725 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098041257 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107141309 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093296496 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093763895 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096918136 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11064017 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088494986 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090530602 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112639389 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092474454 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095080985 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112072483 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087832544 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084228117 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111494257 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089027236 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093216414 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118139116 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089541482 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094461076 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10693038 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10217656 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089886875 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.115849841 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095586817 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098152535 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11573984 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085877672 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090101112 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093301245 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11485378 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089554486 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094001094 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.110993763 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099379578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085086872 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113492736 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085996413 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090077326 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115128074 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094993327 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094810047 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106293688 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133923489 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10356389 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1142094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09307941 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091924774 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113994339 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093775345 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095443363 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115476036 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098840791 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091076761 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090011904 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116515834 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089103182 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094699709 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109911945 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093853799 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085145209 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.111629957 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086164747 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096206248 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113417466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097915067 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097395751 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112391645 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093639134 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101136904 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106770272 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098042461 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084986209 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097371838 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121991808 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098523827 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098005454 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111806607 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090471523 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092081944 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119887431 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095159936 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092184659 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112603101 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087333683 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086015125 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115469796 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096690873 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097858771 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09290657 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113158098 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095391582 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108039119 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087221697 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097001863 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0951565 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107416739 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093782604 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089824827 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108531197 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100404153 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08509348 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108054083 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09470837 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096943436 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.112085928 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093731964 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096037362 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.117224477 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097905967 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094554498 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10847188 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10175922 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091086455 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.110737115 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090439917 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105384657 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085014259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.113708212 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09348904 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089607236 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107664689 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097452337 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098170677 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115929468 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092321449 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09646027 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116765764 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098427171 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090525868 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115691804 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090028958 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085452494 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106856075 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086750686 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096362594 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088182084 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115867575 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091420398 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090615277 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117157995 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095429573 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089897931 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116871867 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104525383 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104672363 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088332388 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091105781 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110512336 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092245442 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090277189 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093917509 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112692665 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098062109 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094986395 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108247031 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09381743 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09802906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108116012 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099916742 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.097597622 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117924072 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089862893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096455681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108624956 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097356487 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086374888 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.10971386 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093419414 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093114347 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109139558 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09334273 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089457603 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085338154 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107949445 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100320344 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092051746 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.11607705 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094020284 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09072273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.109720664 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089765602 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098581085 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110689271 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100856874 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09300165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105492678 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087683954 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097771016 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109997808 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09927738 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088924148 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096994087 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118294565 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097029683 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092871801 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119332458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101519703 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098635985 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117255676 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087474707 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090395639 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11688118 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09406381 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09544181 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.113235638 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088898962 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094969122 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.117412336 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095799669 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091263612 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104489167 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095822915 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099346323 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095898541 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.115373389 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09544265 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093988242 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106891666 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09762847 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097622076 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112159332 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099942436 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092982058 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115706681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091699828 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098380867 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112477743 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089416547 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087377475 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089537645 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.117750452 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088157173 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096908437 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116856316 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091838377 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091383356 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114882677 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091818953 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09636117 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115771516 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09213913 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102856038 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111773486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093110292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098656067 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097612058 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10619205 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092485455 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092165245 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118315661 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.0929971 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097741214 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112793166 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101188522 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095932656 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116044262 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099873126 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098723552 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105807717 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101237246 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097329857 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095838916 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111526992 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091978203 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08855981 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111043377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100367197 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090183071 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120314875 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099965962 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090669134 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11032055 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098993396 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092294277 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118077103 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091155406 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095224985 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105573794 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096138087 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092530153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117866965 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091060193 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088863978 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116007377 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099816141 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098307443 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096455741 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120112673 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088662103 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086657389 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114705571 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091495109 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102522288 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115152204 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093522972 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092770942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113603436 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09582187 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099490588 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106548478 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091553799 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095007314 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112819384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094640425 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088557953 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.115323878 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094153113 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095319603 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110272445 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089847916 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093344462 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100224495 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112879006 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089462209 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090036157 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119565536 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094962991 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090222864 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107496914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100585201 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095184293 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118435627 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091851327 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09428552 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110420219 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097877012 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102080839 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111938404 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094826444 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092150085 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118775497 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099071962 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087052681 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109351533 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105453802 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100329814 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113880784 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097872665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094443881 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10042764 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120985948 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100146708 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090459761 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108128418 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093522602 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087802878 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.115501403 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100191932 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092151512 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110347828 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099835814 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098551383 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.115140969 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098567135 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088157629 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099813235 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110237028 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098678941 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087936005 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108118006 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096818471 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098961228 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11250768 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09558852 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095604006 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.115799984 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090710048 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092709268 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117507926 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099628653 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099848232 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094091316 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112913636 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098032522 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103575095 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.115623264 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094519282 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101620025 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.120306849 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096674219 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093899855 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119336922 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100661227 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09608225 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121739276 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094110045 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093001795 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.12150326 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103043495 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103467169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113204705 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089922777 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098970584 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111434981 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091415069 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098131183 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119594302 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102581057 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094992059 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110762657 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105987336 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1004868 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113782745 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095276924 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091975693 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098908151 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113539611 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099738814 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091192768 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120858949 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10295157 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099688898 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123268921 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090691335 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100050191 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117863368 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104373629 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096011271 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108128656 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090867745 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098305662 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119575081 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10326675 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099785079 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098155335 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119083808 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096935104 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094545452 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112074297 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102123956 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100207871 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.115795323 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098242075 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093809316 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115324809 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097962735 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100382811 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119461366 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097420712 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105655837 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100995982 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113587187 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092937615 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094936026 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118533922 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095787088 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09916786 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111702087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.0916581 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100251091 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.1211054 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096390607 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103092267 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121084645 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095121922 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096765104 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121396876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102380569 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097285239 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096535077 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.1182104 seconds)
  done (took 61.087269172 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143796616 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103998723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117182269 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097688534 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115566977 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11890633 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097456203 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098127563 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117891113 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10730937 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096948957 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116113001 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112800824 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138044839 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116781906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106304821 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116911906 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099497757 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097514031 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117284539 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113567552 seconds)
  done (took 3.163597704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115656749 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110360581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128722793 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111767336 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103740959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129546669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109389395 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129925131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112405253 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104603869 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131696757 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108429448 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12744761 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106864811 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10541609 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126262627 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112751587 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124385508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11118436 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108789958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127814769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109323315 seconds)
  done (took 3.37218739 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128805847 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100566693 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095896581 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117058445 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101149619 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096131919 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118842909 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098938957 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105271448 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111559324 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089633024 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094122199 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095261978 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.1163549 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092926976 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098248342 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124363719 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101534043 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102333011 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11657182 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091063701 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098224039 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09856307 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108480833 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103482547 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102407143 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117320571 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101503789 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088577005 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.119880166 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099286712 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092053771 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088173876 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108927598 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089644438 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.099861007 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118380482 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100563648 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098223322 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087992686 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118954358 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103169462 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088812228 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.11728872 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099276668 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092004233 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10029072 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119294617 seconds)
  done (took 5.775280185 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127044364 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161872722 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101529431 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136132184 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134054629 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108369285 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.122172646 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136061689 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100168223 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122533574 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113931867 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133453078 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.341512368 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10548737 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124131342 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104977926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103730757 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121045119 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107794101 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102180402 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127057461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104753888 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110463608 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13165168 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10528567 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100379265 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121586096 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105589534 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129499604 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108691426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103806485 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12561378 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112171682 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102452933 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121307367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102649774 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111820224 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122735605 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103529988 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099981549 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123241727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105874243 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102431946 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133750478 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102607434 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.122265504 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104001925 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100402055 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130405167 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103566413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107336187 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134020872 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104450714 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101488514 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125876979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113216373 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124012842 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103205931 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103378566 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130030772 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1008147 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103630157 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13169129 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102456269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10638718 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132129401 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103541549 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10370843 seconds)
  done (took 8.948572118 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132432176 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105525881 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133182764 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114467973 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104285994 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126406681 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105172315 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125182648 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10651556 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110339222 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125082263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197046927 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123966653 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110304113 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104428618 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127664657 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105887289 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104713242 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127800313 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105734294 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125437333 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115097894 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104796295 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133984239 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117268693 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121973196 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107157174 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104977877 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134006227 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107561303 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116556141 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126886745 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107899149 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132470493 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118389005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105205694 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121179869 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106521922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10510238 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127579208 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104148024 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113073543 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12610216 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101778583 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105799181 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12611405 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113631247 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136549771 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111270066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109545732 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125926835 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113156085 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125129985 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106691529 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112405187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140465528 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113627143 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133336452 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106423858 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113364753 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133998753 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11929502 seconds)
  done (took 8.155446094 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099449728 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098529098 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098003363 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117974024 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09989232 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09836236 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118308103 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100672947 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098753732 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098692547 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119463161 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099618373 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09806922 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118556491 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10086134 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0987341 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098146783 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118771723 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100776146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098930713 seconds)
  done (took 2.911064494 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.1092483 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117315361 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120731713 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108464725 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101719135 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127151087 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102692162 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100894789 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122008422 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103957727 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109291358 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129263032 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103334184 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105670586 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130439213 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108147297 seconds)
  done (took 2.630613251 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120220582 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117141395 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185491613 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104181366 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122782844 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109134958 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101508868 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123454269 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101376796 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107250102 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105328423 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126290451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101116295 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102354148 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12381861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104956083 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100637761 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126723518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103513108 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187884436 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105654503 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103272584 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123320539 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10537078 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102073134 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127310746 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108950599 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100488687 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124790566 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103859785 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102877725 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129590056 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102042626 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106027371 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12254723 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104017975 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101379464 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101787729 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125392797 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103151356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103408892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123444806 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102174012 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104582235 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122164278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103113638 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100136071 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127171022 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103070053 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103796918 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122308242 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111113083 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105984066 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130105052 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11069054 seconds)
  done (took 7.08607773 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11435446 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103158198 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133012505 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101808802 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102761032 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103523713 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124344051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103989825 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102456704 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122475655 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104455868 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103258449 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123792427 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103849191 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102295886 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124130891 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102406017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102374183 seconds)
  done (took 2.815318423 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108229502 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100995762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105105758 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123292528 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10252165 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101105541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12238266 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10258123 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100652333 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123412647 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102956798 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102057813 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100508979 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12305556 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102329078 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102060731 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122751766 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101428801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100843927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122472449 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104982854 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100222342 seconds)
  done (took 3.216237862 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114519184 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181125069 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107567168 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.190825759 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09839882 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096477307 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128553808 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099099568 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112495557 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119291861 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097776084 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097241865 seconds)
  done (took 2.283076709 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129842278 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13798652 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122658892 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10301883 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110687245 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128048206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1065497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106140857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136803284 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117859871 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126414622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115376182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112559269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135995563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110069367 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131189314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107318817 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1058325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123775597 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12287338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105679305 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135379176 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106098532 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126744435 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107470801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114990413 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135885296 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118172144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127188993 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116892577 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110740484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128055814 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115416753 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138190418 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105079516 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114673899 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128453763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121926738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110361946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137219006 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10336261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132364516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11579742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110901805 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136654277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107544946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132538384 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110113417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106352076 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149062468 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112358517 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135674961 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112229088 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114099764 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137449281 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127901445 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13984828 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115041108 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131742047 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119817579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115229883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133306084 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115246783 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140635567 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113012273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134322344 seconds)
  done (took 8.844650067 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145025477 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104973172 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127926652 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118315307 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135476569 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107584318 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107874741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128570282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108933054 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103735859 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171182686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107608621 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135282481 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116497756 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107258519 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129218397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107441862 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115229969 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125721838 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127835085 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128062774 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116141105 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114692872 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137625538 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118991431 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132020555 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107409589 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108033524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128829592 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107963242 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133075362 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109389493 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115876955 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125537625 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117272735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107719118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128353551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113033483 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107338662 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13344341 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11484996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143587359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108137522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107759669 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14110522 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107702968 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128077224 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105748262 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108684043 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12558326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120247389 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11785923 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141895691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115554205 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129555873 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109369528 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108573214 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129457552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107368544 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111995206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137395518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108273724 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149815398 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108157119 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107746744 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138162282 seconds)
  done (took 8.802806534 seconds)
done (took 165.830768473 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147489965 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184108343 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144164515 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178131937 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094305154 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128346336 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146949429 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147379644 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093712426 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115932713 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093978251 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095130384 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183109428 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094041062 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092905713 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116226019 seconds)
  done (took 2.902789365 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191114715 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304782598 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107834112 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119122996 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099468985 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098298869 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118494963 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100803538 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098526223 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127112508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099795772 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094068871 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125835561 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096157145 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098819864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119466133 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107589301 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09743979 seconds)
  done (took 3.058415446 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120531504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141420393 seconds)
  done (took 1.120678515 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128107798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211076127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280228001 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168002348 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119558421 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138509976 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146615605 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131869681 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186737005 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133489218 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111887243 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096132102 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145945444 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104230215 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136443919 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098279534 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126452645 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135626867 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113516822 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10133766 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143467162 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102626314 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103524716 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134885983 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177925055 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13358698 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103090049 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101417065 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123305841 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112360558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.126697745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116280825 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111145419 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17703879 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123241524 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153375025 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128049311 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101281848 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111689542 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121633866 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102675637 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102291212 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134022462 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097381437 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101119111 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128733989 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103174082 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.121832208 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107883226 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105768261 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128511286 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105653204 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173312846 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10685283 seconds)
  done (took 7.794583666 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855096354 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141209198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099522678 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.998414442 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148466423 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113594622 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850021888 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144544527 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25302575 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.877091846 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11502084 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134243373 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23710672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255435869 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284533319 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356643572 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.716793457 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114252898 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128579479 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161489038 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10785369 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147988651 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120171706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515198699 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100416708 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120320603 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10874092 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112246118 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174740764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100003599 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127215818 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195406615 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270055161 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203691052 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12405384 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099579345 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098673436 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18361642 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270404683 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215806074 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195489431 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097406921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124934445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111658703 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118455799 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119653141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15557858 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189483271 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19044692 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103575499 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135335164 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110938591 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130918888 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154560704 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119142705 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356199523 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358063466 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098570689 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130554444 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114586696 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264593453 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123562276 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232738835 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126938431 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211824168 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121400379 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.84734193 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160673269 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121542504 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10760859 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126762472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107505422 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107858478 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188907579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.474775874 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136375174 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103354808 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121436747 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228983965 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102269499 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100371851 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179391714 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100940297 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129439668 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114955494 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133781295 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16722008 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269545092 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132815109 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111066284 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106169287 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135605119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102467356 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23286901 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225038132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172358716 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209465869 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131942999 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179259815 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160648402 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130059939 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185457042 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109113428 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116283941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130655605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22027104 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154211557 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105998296 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105776342 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130069782 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137895972 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104251406 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133162087 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186472246 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.549661958 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161402849 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118957599 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106666773 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109907488 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17904141 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10786341 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260880423 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1331838 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183308633 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110068124 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097615925 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130447279 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158638107 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133712379 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109389861 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12964215 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110607375 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277304188 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220078968 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113145837 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247528898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.200264636 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108766413 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190774862 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12979769 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16554375 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133132629 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10976444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102802622 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833021644 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137040691 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10865018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128060446 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183556817 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122141769 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104713662 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100656085 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097873268 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827981052 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127238129 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099228091 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103144954 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130453712 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109976892 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129030998 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10711615 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176375709 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242000271 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11380472 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129961264 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101758316 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17830403 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102851615 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101253531 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123414378 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102901832 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108294317 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12829156 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103840377 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191679196 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173890403 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227991841 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.649234773 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101185684 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100552999 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261567949 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101894824 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321645856 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128623833 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233185841 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161695617 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122217299 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355502587 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18660781 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183695869 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125841777 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166873838 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121243903 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111010603 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178361817 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100905725 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129527945 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154856705 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137539658 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11405057 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275465508 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123906613 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230434368 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.120896609 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164409862 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125543041 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108830057 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321904743 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123776513 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119990323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177462864 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105073863 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123461363 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.613209784 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126555857 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112393079 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129840488 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231898277 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180238992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110880429 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109762006 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137564104 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.175198013 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20852577 seconds)
  done (took 47.582349659 seconds)
done (took 63.312976076 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263390726 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174908846 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.278545064 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173480253 seconds)
  done (took 1.844551174 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239445492 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155289203 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.199099526 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.119386602 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.203590942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.120502595 seconds)
  done (took 1.919682639 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.172190925 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16540407 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143365728 seconds)
  done (took 1.362880057 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197802267 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214342895 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320691014 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254696637 seconds)
  done (took 1.956560118 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258400806 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115289457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123709563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.204087897 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.215643382 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.196679536 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121735978 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168132145 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12927689 seconds)
  done (took 2.456206356 seconds)
done (took 10.42612058 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.291405906 seconds)
    (2/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.38369525 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.344195757 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.252190663 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.140004336 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.137990615 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106009905 seconds)
    (8/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.214851797 seconds)
    (9/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.249690105 seconds)
    (10/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.291139498 seconds)
    (11/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116530173 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.192648902 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.176959507 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.189010099 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.278528068 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106717934 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.219398492 seconds)
    (18/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.145967716 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109834792 seconds)
    (20/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.33607524 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.204653748 seconds)
    (22/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.127076487 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.158138104 seconds)
    (24/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213856506 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116021401 seconds)
    (26/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208946101 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127833492 seconds)
    (28/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.170551687 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.247605119 seconds)
    (30/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.290032913 seconds)
    (31/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.121970206 seconds)
    (32/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.128664366 seconds)
    (33/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076201747 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108971656 seconds)
    (35/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.081914182 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.245372527 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116859098 seconds)
    (38/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.192808788 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099860845 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.095880796 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.26779467 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18064826 seconds)
    (43/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107700551 seconds)
    (44/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.130254263 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10203782 seconds)
    (46/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152131056 seconds)
    (47/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.149414444 seconds)
    (48/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.094689744 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.183066172 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110642673 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075524086 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.154306973 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.190119357 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.163509861 seconds)
    (55/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.164213921 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.191745317 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.275211984 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.181587782 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124913303 seconds)
    (60/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07661019 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.116878109 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.178572618 seconds)
    (63/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.126030161 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114198551 seconds)
    (65/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084223698 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127128031 seconds)
    (67/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102314065 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10003177 seconds)
    (69/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.099666111 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077350747 seconds)
    (71/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156304318 seconds)
    (72/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.164246508 seconds)
    (73/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.183420458 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082396369 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146649102 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083422471 seconds)
    (77/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111286661 seconds)
    (78/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147227494 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116634248 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082252173 seconds)
    (81/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.192646593 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100645233 seconds)
    (83/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126523581 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.100560132 seconds)
    (85/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.124789993 seconds)
    (86/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.177866537 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081601387 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14606825 seconds)
    (89/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.15552261 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124639362 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100146885 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.1054388 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.145647729 seconds)
    (94/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080362138 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105394904 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09858409 seconds)
    (97/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193145885 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109985337 seconds)
    (99/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141153639 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.15078211 seconds)
    (101/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.170550851 seconds)
    (102/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.137954909 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.143314404 seconds)
    (104/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077506899 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082600407 seconds)
    (106/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133788533 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103123259 seconds)
    (108/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.135780701 seconds)
    (109/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078247218 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.106515894 seconds)
    (111/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128032445 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102873588 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081603808 seconds)
    (114/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102965183 seconds)
    (115/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109651663 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077459006 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098431251 seconds)
    (118/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.199218972 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108917493 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079164415 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133884951 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077741047 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109209891 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101398935 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.214612816 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10199105 seconds)
    (127/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.100124001 seconds)
    (128/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.137017668 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.079955035 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083449723 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123948588 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077152687 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13639234 seconds)
    (134/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.082673247 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08270188 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.127607395 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103197798 seconds)
    (138/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.081887132 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.103803318 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084384246 seconds)
    (141/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076962844 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121983256 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.14871417 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110260864 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076648453 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110876259 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126218537 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08039514 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110820884 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125121742 seconds)
    (151/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078824029 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083003815 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110103007 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08283571 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.10312371 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077699549 seconds)
    (157/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077968924 seconds)
    (158/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.07939143 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082101133 seconds)
    (160/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.102719015 seconds)
    (161/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077282653 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.138900678 seconds)
    (163/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.081913696 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125543998 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112974833 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10012661 seconds)
    (167/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.078238804 seconds)
    (168/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106590294 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110080287 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079986633 seconds)
    (171/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107628262 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.106336743 seconds)
    (173/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080191519 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1221958 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10216945 seconds)
    (176/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127269477 seconds)
    (177/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111062429 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076128246 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.125854413 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107259032 seconds)
    (181/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.082879406 seconds)
    (182/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076582811 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.097892344 seconds)
    (184/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08508053 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100662784 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080060042 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.144405707 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112565003 seconds)
    (189/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077591282 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107969726 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.131625279 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07712411 seconds)
  done (took 26.197797213 seconds)
done (took 27.087077136 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20349211 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125236749 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111132402 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109606713 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198676643 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116701023 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148114996 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112534667 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119542464 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13270358 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102388085 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121414559 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108842212 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201267075 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111910419 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126131368 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101727287 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118929498 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148470966 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125956493 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200860984 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103063442 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119028593 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125693272 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174232482 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127785666 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109524674 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110257771 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146070352 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110863711 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109351158 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126302129 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126024807 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124289945 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124818808 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111618738 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101201935 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083306384 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135889971 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11245323 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121626251 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136179281 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110787665 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101857003 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136227013 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11164934 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10095147 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137591296 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100858648 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110427878 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127501839 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126426553 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109299345 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123506077 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102026004 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103462942 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144429568 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102400832 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123155879 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124605591 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103489792 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101883728 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111641005 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12683894 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110529714 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101323848 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13548931 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116979195 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109121505 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128651724 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103569116 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109565124 seconds)
done (took 9.765258844 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108345026 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145502546 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198093379 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209902042 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128168343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140268613 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117960883 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125599466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138954109 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121885127 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139176275 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157213334 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179862964 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141390304 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116574482 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114363386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138445128 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111849454 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205778036 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125893237 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149291216 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118834148 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128050503 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143337078 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105947186 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125804146 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134184974 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115197121 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.1043521 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.149579805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127105833 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104673389 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133099792 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124743212 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145609771 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117065867 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116691793 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137208075 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107720922 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105702902 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137984229 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123077137 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105227518 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142246111 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114946687 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120031989 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138114342 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120354867 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107739926 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137839819 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108345392 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13129088 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142625494 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123461891 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116530034 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.14390817 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119840592 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118008799 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133941753 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118681854 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105109668 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130898731 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107267585 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151382038 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110906773 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118549467 seconds)
  done (took 9.504869101 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125711031 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134465173 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141125901 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116857097 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110060758 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124130683 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100606091 seconds)
  done (took 1.786393939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103021265 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184761405 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.20738436 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206738858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178609509 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217751165 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150324227 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101761129 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135551077 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136024985 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184956651 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236951028 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110878701 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142399991 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186274048 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127794222 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210796994 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102942292 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115953802 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210220082 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117981936 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157490407 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114391178 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101570954 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204245731 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102355631 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260266504 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119045033 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136597218 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115583975 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116268386 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205605028 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.205704718 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116734747 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109808305 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208229022 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.20346969 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116195489 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.218623298 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106351356 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.204047365 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11629278 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116441566 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141529997 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116466559 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196066712 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120411091 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116826292 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140886388 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187752079 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137131184 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183243709 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138176999 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116551393 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11222087 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143362835 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123173425 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117638502 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213721216 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118533845 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208622446 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210246462 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.209077474 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184159052 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151964756 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184915649 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203222249 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115358993 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135980677 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118404576 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211956035 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115187127 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113744539 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199365763 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118431795 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210513301 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.210240582 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113092595 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11436693 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132004437 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114213266 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102280286 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.20132012 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115776637 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139356391 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120963245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114782171 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.141874043 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10725869 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148951049 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117003869 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.1134542 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145092127 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116803073 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117911829 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.213008818 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112497127 seconds)
  done (took 15.587415466 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10547774 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103775931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108661657 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129683546 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103894889 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104263423 seconds)
  done (took 1.607540909 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139878655 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116564937 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14928925 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11831163 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185360575 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.190240777 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.217361894 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111237729 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157998326 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125926862 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215151344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192118681 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216620392 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119473238 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219677803 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118813332 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.219569067 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114244921 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152040622 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114197855 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116645295 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147604998 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115173666 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20790649 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118354989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142844735 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112088784 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124681863 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150045161 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112288242 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119760175 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144275823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.130356802 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111840662 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.2209501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109330708 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139311338 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119500787 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119298899 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145960898 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.215529761 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115716566 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122401893 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144590596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11274354 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109092942 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146802348 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111555104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220638174 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120320579 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119127306 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.14457242 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118877176 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120563366 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136461448 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111792745 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.143931895 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.197998672 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.143417259 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11046067 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117508479 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143179899 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112404213 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121554864 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144653047 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120583672 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110111734 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143578517 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115411979 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118196487 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146378155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118256595 seconds)
  done (took 11.133093867 seconds)
done (took 40.545755215 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.477247774 seconds)
  done (took 2.420650933 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.882997977 seconds)
  done (took 1.826797943 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.613733687 seconds)
  done (took 18.592546207 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420086573 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465968012 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.121681269 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147120803 seconds)
  done (took 3.10356595 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.817705971 seconds)
  done (took 1.78851833 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281285579 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258295232 seconds)
  done (took 1.492049938 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.703842671 seconds)
  done (took 1.667080684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.494973837 seconds)
  done (took 2.450921166 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28299637 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.238563143 seconds)
  done (took 1.491121077 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.601703195 seconds)
  done (took 1.567184944 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.390828693 seconds)
  done (took 20.360784865 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253730173 seconds)
  done (took 1.226755803 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28425518 seconds)
  done (took 1.260358619 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.475208695 seconds)
  done (took 4.45298767 seconds)
done (took 64.659276701 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113773614 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116065701 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.139705602 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.115556788 seconds)
  done (took 1.448974221 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122660039 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117171186 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145118717 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11841036 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121977258 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.141613827 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117783908 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119161468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117099086 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144200652 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117628996 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116218466 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144039969 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117269357 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114120638 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146136572 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119973712 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116554954 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143777701 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119128099 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118099486 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144260872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120140001 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119271444 seconds)
  done (took 3.997612994 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11399781 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107403276 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10980097 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131767661 seconds)
  done (took 1.440786113 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126309374 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12859526 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151915558 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124644278 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130069548 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152077903 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115971108 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113486915 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143438946 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125619991 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13278845 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154433908 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129241004 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.141740876 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129522844 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110919734 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117525344 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153465691 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12326534 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149620733 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120054 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122579791 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146319251 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.126845803 seconds)
  done (took 4.143188431 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189708621 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128977553 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174948158 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159207729 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174223685 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115893256 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145277572 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147803404 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123892189 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.142308894 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121243927 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161271065 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147875906 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119301644 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117458287 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148105998 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128240245 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122424064 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187095287 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121806253 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150496117 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129278776 seconds)
  done (took 4.136799339 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120361039 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108167543 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128472662 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109063693 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119958186 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135903076 seconds)
  done (took 1.707147142 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107695777 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102161951 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103516365 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127004425 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107142647 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10174032 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126119862 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104072332 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102722695 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102092663 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127099064 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101965381 seconds)
  done (took 2.292413907 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.327787608 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107788533 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133598265 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109955617 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11378909 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105992171 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145704609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106694481 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26663338 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103159462 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131155013 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19485215 seconds)
  done (took 2.832112352 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199108871 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145836273 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252512777 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365154971 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183403078 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158346574 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290392436 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18783224 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174926958 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162061509 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205739696 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158542874 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151136582 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208082552 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136595106 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183154543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158596771 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231179296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166569106 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209013768 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182443946 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198777728 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186314143 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172862337 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13644377 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183904009 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118191286 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125262125 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189188392 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184834248 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169131013 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17301436 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138676117 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212839338 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251171234 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170116666 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268766871 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158264039 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168702341 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210478432 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252626543 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138158895 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211066367 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174292977 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128112863 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205250872 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151596512 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207110474 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133568386 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167317308 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177418761 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201574225 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197567826 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135460922 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300480559 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131811982 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165231875 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164046481 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209866316 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221494839 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175759578 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121414382 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199639443 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213588901 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235661872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14044802 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1857241 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124235095 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189033774 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200229122 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203863909 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183755852 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224558252 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130916889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165426382 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193308813 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176656213 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200191611 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194065439 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117929123 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174337463 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133263634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124486048 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.215035705 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120440114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239330651 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129287416 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345206149 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208766839 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17904503 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158386119 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184866011 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160638835 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171857288 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099806238 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139668661 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186086342 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152706178 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153848858 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153167019 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163041516 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124628315 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173867782 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123217708 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164033782 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157839103 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15928408 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19348446 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129564097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200396281 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14503061 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187285457 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163313783 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215595176 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153740245 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131482069 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23942708 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16569288 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.161237208 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172334353 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217533281 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146139036 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159327257 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159139489 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216648405 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166509663 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194936948 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162408242 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133204098 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161005819 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170043463 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18322275 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151740562 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125054018 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.188392052 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2134831 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124595318 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162765061 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178462036 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156963238 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123212163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133836959 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160659795 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139956223 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.171442895 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137267059 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148520664 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190344387 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187566192 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153926173 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157331421 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167993732 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153767233 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167824914 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17056312 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119444236 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169332961 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221497389 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152544277 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17850251 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185533221 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208284296 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169734869 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126039523 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206774896 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125081156 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.146379239 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156570298 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19786575 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158835838 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211117412 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206266503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187325664 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161143444 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171036269 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162771789 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.208120321 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152915511 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168504947 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167663888 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191681864 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119301289 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148647564 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127208733 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133787778 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155078502 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136007856 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198836397 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160965106 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205104847 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19293201 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135614516 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215538744 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12347726 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185020846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171554462 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164442764 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184977504 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213032936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200666772 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139903805 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185681375 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120546312 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124904686 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158627409 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161258477 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161787644 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134008676 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137245391 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214408388 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195875402 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144796305 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21859026 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188362753 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198084925 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.147695377 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159658914 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194211961 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165146646 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208624099 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132206051 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155521505 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215922279 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164433323 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18884548 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193388213 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174529598 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218809796 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189783904 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130061616 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145257907 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186595185 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135720764 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188661448 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144654396 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156807907 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149809588 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165076694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139036799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205857858 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140333464 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200674721 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155161977 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194042004 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123410768 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167047695 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171559866 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169810176 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103220183 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192173765 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188845758 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173548612 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151212551 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19740901 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128424065 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337376714 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209135857 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172350136 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160999838 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136415586 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194954929 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159417852 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186810908 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182010824 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167082387 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202124002 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194074646 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139422321 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156360388 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146550591 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17642116 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134708326 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.177365264 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160005508 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169759382 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180307755 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163793854 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166065068 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199490658 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143202456 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178322818 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136770263 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247363827 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191304162 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16988425 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189248027 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162191404 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209501362 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122212319 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12474677 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.158632993 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182265948 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156664086 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17482663 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194755724 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211110753 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198536008 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160891104 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165342404 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127117081 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163212096 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176427064 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210609951 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135070341 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163205625 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186961805 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.151784966 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129986884 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15677005 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300528572 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173063945 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168113203 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.103534387 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.293608067 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128304425 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157141793 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157905464 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193935938 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13055473 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.206194422 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171760494 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165236551 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160558974 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159616272 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179001909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210177564 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189278976 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169316913 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170642418 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159407886 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186458888 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170997561 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171491143 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145098082 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183281965 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190188834 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205097324 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129657607 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19457028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165819883 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196111236 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196562314 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13773828 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2065222 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127157268 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159564284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16317076 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122069291 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187030413 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193494011 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129085782 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197734916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169180775 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129346855 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153923867 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143377851 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190721685 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138295851 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.154481697 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179745122 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15583902 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177908102 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231026639 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127645844 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193978335 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144919766 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156292104 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138334163 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140854218 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158940251 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171683283 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206258063 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131127423 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201613354 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161046703 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189620985 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155009231 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16997491 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.333429467 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154195859 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187199286 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177057319 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193565352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177561038 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171538026 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195855871 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145635659 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188892697 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14462303 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247201234 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159442304 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.192227103 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12836594 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169001448 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136769333 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158800889 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151558346 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192276447 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139726457 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134034636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192544457 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142714503 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173000299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138706916 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223958972 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148602702 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20888699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213142059 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135832595 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19970814 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170926983 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155736548 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161489138 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196964026 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14150458 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177074982 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132937042 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134602348 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236670172 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123944773 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185687833 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198502057 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168329607 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196971098 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134766195 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202717666 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139986022 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19856926 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127439425 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150519943 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199152016 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132199695 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154148462 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168275934 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184278619 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162788653 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168351321 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172757523 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221102355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123214688 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131544155 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299006662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185588451 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192164017 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162878096 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136733933 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143325 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184911602 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161871713 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196890191 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128211889 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158026116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144268773 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.177318111 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140255939 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194416279 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170304666 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186122079 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18217048 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163187112 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251443427 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167364652 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169561664 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113199707 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155250594 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138944672 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159924293 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140626403 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207399302 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237087653 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160608241 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171887673 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135219845 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12516883 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156051179 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163433326 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175081378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166408369 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171298293 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102153715 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137761447 seconds)
  done (took 84.812547113 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159538782 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150784067 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167257619 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220030082 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192446832 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287651273 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22742694 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243456044 seconds)
  done (took 2.721043576 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119180818 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158258537 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140690668 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142070466 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108366674 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.438595281 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129345377 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.145203409 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159444986 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149389083 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133429605 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.525047419 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115299565 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.140703903 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119921922 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133614148 seconds)
  done (took 3.922881552 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.60476487 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536479936 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.398582387 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286650129 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253360581 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.196380359 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734237906 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193282731 seconds)
  done (took 12.270973846 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152863379 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145478056 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.41193365 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.246616498 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.201752667 seconds)
  done (took 2.237068287 seconds)
done (took 128.930328307 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122068007 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122062793 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121603567 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15072404 seconds)
  done (took 1.580356791 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174509325 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089366576 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091086318 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115823011 seconds)
  done (took 1.544250368 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422500334 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088559806 seconds)
  done (took 1.610188202 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145927163 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133916413 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166961232 seconds)
  done (took 1.534215146 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136685684 seconds)
  done (took 1.216158036 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120352994 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113869773 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.234301094 seconds)
  done (took 1.550709205 seconds)
done (took 10.116485159 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117474224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.923038646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429855194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131536319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707550396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424172519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.416665905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171733287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171546417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135428523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129752205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686446822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.429823644 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873809989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.38945236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900262027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693606708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110221018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143822201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109596034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.39998258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135074349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110380985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109870507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720636742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417796602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107765752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918290032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107943735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111468449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424669219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109088731 seconds)
  done (took 20.838245651 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11579507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164018819 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143755369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11003671 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111562377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137501927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121058554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121810153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201180538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158997404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109241389 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114154732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13741154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134340649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108742515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140608998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11187927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116942539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138410939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130844971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107687132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137931147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11152237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108804651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158180549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109635042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120459974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136804552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112581704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113143024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13762972 seconds)
  done (took 5.177663152 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157110666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17309464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145792474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145861286 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184500922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111136974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221632546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147351371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201275931 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113224167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129619882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136051534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149027283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109444308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162086608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109137409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111233055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117230411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137326543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132405746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108520465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135972075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113373292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109470961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156661347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110447001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122452587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135709326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113763085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115217871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136309829 seconds)
  done (took 5.476964682 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123546641 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124487074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130323385 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16117002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11940738 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122736891 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151927363 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120168589 seconds)
  done (took 2.139243595 seconds)
done (took 34.715344193 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135090294 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128867362 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129622741 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152932896 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.186949162 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146085145 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127084586 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115605092 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150881905 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131061749 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108918352 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.144336564 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130126717 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119969007 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.216898911 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124568125 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.221232399 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189822911 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147414985 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124719391 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118382094 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222254379 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121983055 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.14681765 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.189706956 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111160511 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212498064 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119362667 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148814659 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111512929 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.219325726 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12169617 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117660667 seconds)
  done (took 5.973037035 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206148363 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119350447 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147987403 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117829767 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119082127 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146628951 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208774168 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146773368 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117933306 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117985581 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117075246 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221266697 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123820932 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143865183 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121283613 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107528381 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.236973124 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119555483 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109202839 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119292477 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115275864 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116784187 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.249114709 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.11392486 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117256516 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147051318 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121474689 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122554778 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148672139 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120969 seconds)
  done (took 5.337847912 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124341458 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131024766 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.162411124 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184139098 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147419439 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15953193 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138638756 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132382097 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168399449 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112038545 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126865338 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177245029 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128859008 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122142349 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14561445 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130896801 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13291993 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142324566 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121323061 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129356831 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160958346 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129496045 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13530178 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150073566 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111110448 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119280169 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151551161 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127149571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12108061 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155567879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114600969 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116286212 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142839188 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.14671993 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113117497 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154363043 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137449299 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124370707 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154311458 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144131758 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115506169 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142667644 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137085755 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165285506 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141953495 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125475327 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123469095 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155708126 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111278271 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129526447 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18244938 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113068858 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131494303 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140620641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111168761 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120430649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.140721777 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116025087 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126727562 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.143352402 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13744275 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118710535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15145178 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116018162 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122503171 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11176545 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141210141 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117205215 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138351241 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149208622 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148792562 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112589737 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153374251 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125510934 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123103549 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152610899 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113148359 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123294549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150930458 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118549536 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124263019 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144347735 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116896689 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128918198 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.160704869 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128182477 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124364088 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.152809724 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117041563 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114258376 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156983818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115372423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118043448 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124990084 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.142107198 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11702517 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125759192 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152557051 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111276159 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13727724 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.145194105 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113089839 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137581377 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.144747737 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118339803 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122667338 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.182055289 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114533979 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124196379 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.152972664 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11386672 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120338609 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.142782948 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11357632 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130531337 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127150992 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149562332 seconds)
  done (took 16.799160628 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.31662367 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.270193588 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20924626 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30479645 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125207001 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.23658578 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.298022505 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302863321 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113284876 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180043165 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163842697 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272430273 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144055006 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142312318 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.302679418 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.355079911 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173655258 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151057348 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179779612 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125971409 seconds)
  done (took 5.477045804 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133569518 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148017315 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165415029 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141026556 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123990318 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.15842118 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112490414 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134586741 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153823061 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122981848 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115132693 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157873067 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126196788 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128476742 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157847103 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144502235 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120174651 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147656471 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13597814 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118582153 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129566995 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137757383 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121107552 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163572551 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132001931 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152858046 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112990617 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118207622 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118694103 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15109706 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117781646 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131178467 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150070966 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105991155 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123898413 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156292351 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120473287 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115454707 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.14591743 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117681385 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127251279 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125739192 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153646554 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096499687 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13111267 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.106939907 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157292546 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125163994 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104632227 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162392294 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125929617 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126971986 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.148724078 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136121415 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119052624 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.157827315 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124524228 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127115056 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.146961783 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113124593 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11070531 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.144593092 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12323771 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127719503 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153028137 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133892408 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128669055 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.141186915 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.1189044 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116679255 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.14374073 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128959519 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.132917597 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.150046453 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120979153 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125248778 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121598734 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.12121637 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123388797 seconds)
  done (took 11.575717128 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138525731 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124398015 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.158609601 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.150229057 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126153905 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.147132048 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125289045 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132102563 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12824614 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160750594 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129259414 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126092626 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16454438 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124060077 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123896176 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158264807 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127815028 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.177500776 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.132601117 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13957503 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157676241 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118267698 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125040288 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.153597325 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143266818 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12361256 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170834121 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127857217 seconds)
  done (took 5.036983688 seconds)
done (took 51.294828323 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.231962421 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432434291 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.215943021 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.213651351 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.237937717 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.243830914 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215652076 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.226016204 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.524957516 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.18556742 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.216901842 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.218539585 seconds)
done (took 28.278835426 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.264501967 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.770274824 seconds)
    (2/2) benchmarking "String"...
    done (took 1.503464064 seconds)
  done (took 4.381902229 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.207031676 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.206463801 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455895658 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.20718742 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.212728504 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20803592 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.219162669 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.214642008 seconds)
  done (took 15.832300087 seconds)
done (took 25.79578957 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.253881143 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.374343936 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.442028617 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.215527105 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.214280766 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.208366219 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.215254187 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.228533513 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.217895374 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.214984092 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.615547367 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.472639779 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223107443 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.579931064 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.213406231 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.236559742 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.209623491 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.437066163 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.213872645 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.236161446 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.186537129 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.187421271 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.263637661 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.205505149 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.212941706 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.220520162 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.261701554 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.21020584 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.385402832 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.226258392 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.235832644 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.209372702 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.249226105 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.212693868 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.209732027 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.226019748 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.391354321 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.219401174 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.188907945 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.2362656 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.391430915 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.225150537 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.21342648 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.218485701 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.219281181 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.250303731 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.189327036 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.341401028 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.23439265 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.219995389 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.295283485 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.56827588 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.22602935 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.222797997 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.219351769 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.421819312 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.221421254 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.257482924 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.235735402 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.22316103 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.215491468 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.210715046 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.245513575 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.22867244 seconds)
  done (took 144.168347997 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.212384815 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.213093465 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.211056529 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.234445196 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.210929753 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.211795143 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.212991374 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.212605352 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.212629838 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.232529639 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.21209764 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.211675016 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.216375966 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164544872 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222132966 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.228102689 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.218595003 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.213176437 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241468878 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.213036132 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.238610273 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.213125672 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.230434066 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.212356537 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.241433953 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.280085444 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.242271632 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.243782246 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.228033024 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.21367788 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.248799263 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.218147912 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819189447 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.085750219 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.222785435 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.228996511 seconds)
  done (took 80.585825951 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21354459 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.215610562 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214940606 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24687896 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213806659 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776987414 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781943225 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.187851576 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.436603512 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.522541201 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.409224999 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213137063 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30410493 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226969694 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215876295 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230140889 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242260371 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214777167 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215642413 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779487245 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.232365552 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.395609449 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389550221 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.230961626 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248247299 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.606043794 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215733065 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248965472 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546319111 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265589149 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215898505 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.538633438 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.26670843 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328104891 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21752361 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248960645 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214073271 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.4962945 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216793314 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215680203 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215921608 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216824283 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219141311 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.824655332 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.216571744 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782872036 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.220988242 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140176946 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21759457 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.215380696 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217851607 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.037027739 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.869004044 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221239591 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.217130721 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.220641077 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.21703682 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217381326 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.249473061 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.013523061 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314110512 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.21957789 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.219816054 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24964996 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217842753 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.250109661 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219154893 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.045016692 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.280328119 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32430093 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784117921 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222468232 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311252945 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335121643 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.218725893 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217771232 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21959683 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21758018 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.329853013 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.218763248 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.895794313 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394015734 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236463498 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.532864839 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.319001157 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.219775403 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.553403731 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.22303185 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21869744 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903981177 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218200636 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312698737 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.219044085 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219740247 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219518734 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.894664166 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787865655 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437110739 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.224029912 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.676415802 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.225202517 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.065884487 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774511304 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.857733412 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.225330418 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330560447 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396291304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.237736921 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.221410033 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.542203533 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224907689 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275347143 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.220490193 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.621631695 seconds)
  done (took 374.411799561 seconds)
done (took 600.274224248 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.136376536 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.085357935 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.201766934 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.111534597 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.070188162 seconds)
  done (took 11.72545695 seconds)
done (took 12.845060113 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409368287 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.411734442 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282622242 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414913512 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255347204 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429021712 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40069076 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.238269674 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.331611569 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302192467 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333234793 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271753936 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25565823 seconds)
  done (took 18.456925209 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49806421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.230849647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285033207 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47653931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264266919 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517797473 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.522553325 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.230854846 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.360114598 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264053409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241968606 seconds)
  done (took 18.014134519 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506932434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.231867239 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290625986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483024983 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268122073 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504750908 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.567859107 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.232721153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411402665 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244369326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241697632 seconds)
  done (took 18.10509334 seconds)
done (took 55.696267994 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.261268934 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.322010322 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.261739749 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.245278891 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.243453103 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.241193064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.246025621 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.242606855 seconds)
  done (took 11.185762921 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.241090624 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.239672229 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.239556015 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.241623384 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.238648511 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.238304891 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.239504358 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.239068264 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.239455212 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.240300575 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.240393029 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.240196881 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.240709356 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.239559694 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.240895856 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.241018244 seconds)
  done (took 20.964239983 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.243188783 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.240867098 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.240002342 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.241975537 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.240652848 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.240968118 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.24123433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.240328718 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.241578292 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.240977456 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.241060705 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.242159811 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.243646069 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.239819397 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.241783899 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.24271663 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.241630392 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.24021824 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.24593096 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.240680608 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.242554195 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.242152788 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240949951 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.242058229 seconds)
  done (took 30.924109637 seconds)
done (took 64.197270745 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.229976441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.226999039 seconds)
  done (took 5.581041546 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.299555327 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.302481126 seconds)
  done (took 3.72793136 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242935709 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.241798469 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.243225085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.243292243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.24125369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.242324636 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.243480235 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.242436103 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.243651766 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.243001755 seconds)
  done (took 13.55349799 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242413344 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.243099923 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.242991514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.244601335 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.242438275 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242782062 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.242736832 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.243276905 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.245203123 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.243620853 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.243947426 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.243410384 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.243290372 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.243260497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.242231357 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.242640111 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.243893901 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.243767721 seconds)
  done (took 23.506378851 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.258316313 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.262571695 seconds)
  done (took 3.647519264 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.371956217 seconds)
    (2/7) benchmarking "second"...
    done (took 1.284866172 seconds)
    (3/7) benchmarking "month"...
    done (took 1.350587255 seconds)
    (4/7) benchmarking "year"...
    done (took 1.340535247 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.285147656 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.26543358 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.287017794 seconds)
  done (took 10.313336767 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.245578839 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.443719396 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.570914842 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.810398363 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.247416876 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.248732304 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.122638569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.248518015 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.250598353 seconds)
  done (took 14.31622036 seconds)
done (took 75.772023055 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.22975945 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.316640661 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.255704804 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.251363644 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.540555327 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.24406337 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.237642438 seconds)
done (took 16.204752911 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.21377258 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.212902137 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.220968759 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.243279952 seconds)
  done (took 10.020280465 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.235134186 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55578175 seconds)
  done (took 4.919838867 seconds)
done (took 16.069337568 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246203668 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.24515892 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.246722715 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.246230805 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.247153987 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247381938 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.249308434 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.246121818 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.246201708 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.247050581 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.246153638 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.24760248 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24630927 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247835727 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248383068 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246075803 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.245419574 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247040424 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.245798946 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.245998573 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246281665 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246249171 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.246343028 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.247233852 seconds)
  done (took 31.049511221 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.247796811 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.247247203 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.247427792 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.247690042 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.248398704 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.246733345 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.247114955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.247712339 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246741874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.247400513 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246116176 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.24713237 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.247161252 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.249771426 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247173089 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.248331455 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.248533938 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245130604 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247383501 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.248593132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.248287729 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248686957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.248602396 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248299574 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.246712559 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247784643 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.249128227 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.248147095 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248642586 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.248858549 seconds)
  done (took 38.563735745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.25098333 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.250258843 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.249041513 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2491706 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.248149849 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.248633505 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.24919294 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24868208 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248980691 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.248896834 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.249001927 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.248852987 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.249728084 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.248152951 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.250573007 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.24740156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.250303474 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.249468583 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.248150709 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.250349282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.250452569 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24995987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.250544618 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.24922474 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.249519902 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.249128471 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.250615707 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.249765147 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.249985004 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.250387902 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.25110057 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.249180567 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.250259379 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.24983255 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.250585705 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.248964628 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.252710934 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251530453 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.251141076 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.250387066 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250975859 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.251261427 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251550274 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.250754122 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.250966792 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252137585 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.251236455 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.252007996 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.251297242 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.252128606 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.252484088 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.251408057 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252521302 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.251598936 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.251368228 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.25216221 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.2529543 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.25198146 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.251313956 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.251936667 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.253437686 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.252095729 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.253875648 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.252797333 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.251420358 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.252158886 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.252269872 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.253154616 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.25088085 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.253592174 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.254168023 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.253723872 seconds)
  done (took 91.190295367 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252731074 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254230554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251367515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254952376 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25253178 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253433951 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252101104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252503191 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251561923 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253660925 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252891397 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25552717 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253241192 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253352934 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253157242 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254660662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.253275983 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2529115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.252953898 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254856537 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252500904 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252260378 seconds)
  done (took 28.706642523 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253384902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253974436 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.251488142 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254551532 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254056516 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253756652 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.252017715 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251980816 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251606678 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250607538 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250553762 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252688883 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253447437 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252240951 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252339669 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254815452 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251846423 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25418815 seconds)
  done (took 23.685014986 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.252698576 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253832054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.252999046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.251281406 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.251829514 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251729773 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252011759 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25226776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.250732112 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.253032114 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250977055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252137386 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.251010049 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251147189 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251094015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251403309 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.251776707 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251970329 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252673535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249943842 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250887776 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253584827 seconds)
  done (took 28.674569594 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250692886 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252183637 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.252717811 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.251626374 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250721379 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250905192 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.251855961 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.252455735 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.254107822 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.251745923 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252610793 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.252181869 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.252049908 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.250574646 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.253998885 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252199013 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250982823 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.25116402 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252512933 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250354238 seconds)
  done (took 26.172495201 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253052536 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252157616 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253030121 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254367788 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252175426 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253800003 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257306163 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25248678 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25231006 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25420134 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253710372 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253266085 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254374547 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253093035 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253904825 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252112401 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250856833 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252949645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253046351 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25134406 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251840167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253076052 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252414104 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253339599 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25305834 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2522876 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252237653 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251697319 seconds)
  done (took 36.218301753 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253328832 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25152257 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251994321 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.25042639 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251635987 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251405739 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251230776 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252758303 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252890667 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253027198 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.253735107 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252056836 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251907407 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.252823896 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252658594 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254314393 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25339531 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.253629658 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2533932 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252453972 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.25232046 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254052493 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253483289 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252090379 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253262271 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.253510054 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255372101 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252785101 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253949502 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253604245 seconds)
  done (took 38.719037881 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271828464 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272365352 seconds)
  done (took 3.677983098 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253853159 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253561833 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254207699 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.255136079 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.255087401 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254616973 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25463121 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253656513 seconds)
  done (took 11.170025007 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247530305 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256101387 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255284564 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.254747695 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256098446 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.2461427 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253217637 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258808011 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248004118 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247119155 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248243794 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249312263 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249476621 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249769473 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.249439745 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252304782 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.259789777 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.257581073 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.255486635 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257427487 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256009012 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250920116 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254551837 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.260875194 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.248715843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255468701 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25548747 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.260275131 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250884966 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.254597666 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252601178 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.261431724 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257942974 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257444152 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.256162609 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257694678 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25809487 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257334076 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.259717916 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262456476 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258877882 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.257916453 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.253265314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255127375 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254663791 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.261400075 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.258808072 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.256591008 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250160955 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252739387 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261591889 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251816592 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25970796 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254700619 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255126921 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261017994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265513957 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.251277689 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25115178 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260299196 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.265585356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260176236 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258416798 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264732291 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254838585 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25837675 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262920811 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265691994 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.260115654 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260243887 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.259913941 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268416931 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26346501 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.265705377 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260225107 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.259969112 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254631945 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261759108 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26151046 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262007729 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.265235284 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260858952 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256382355 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258324695 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.2550238 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.263840645 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260392828 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259483594 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251531555 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26224114 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267634971 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.260480309 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252545461 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256397368 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.257960921 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262172587 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251710517 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256289798 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.264594957 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262051803 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262390512 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254250092 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259967848 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266734884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262937811 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.262443281 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268138208 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255343596 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264417571 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.270193909 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260950757 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254186732 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256692548 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.264201793 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254797251 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258612285 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.26874083 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.257375926 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.267866185 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.262689417 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259782378 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265111265 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.266617679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.263426757 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.256758567 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265340222 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26333312 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.260116152 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.267877237 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.263031917 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262920076 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.259146696 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.268095511 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255995233 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268623441 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257649201 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.266879887 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262863638 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263693995 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25793192 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263243507 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.260583003 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262857837 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265952861 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.269369126 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.260914828 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.27131951 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.2641504 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263344395 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.264879885 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.268886789 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26464685 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25866148 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266275894 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25764208 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264792054 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25714145 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266294219 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263968879 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262517457 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264933602 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.256169602 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256778852 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.266355349 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26175712 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262992756 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.266760672 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263493726 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263459987 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257561577 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264407912 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25561009 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259167002 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265537007 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.263728143 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263606118 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.261814579 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270678278 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263641091 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265556979 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25748143 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261254314 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269136887 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.26451413 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271988601 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265339649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264994684 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258228341 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.260581337 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265753612 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255983623 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.266076033 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26786148 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269582853 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259072467 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264789651 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25725354 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.265499931 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263242184 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.270476068 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.263995161 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264282918 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25617088 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268006655 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258459582 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266672458 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255964238 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267296631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264660269 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.264383667 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264623897 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259131054 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261696667 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.267101914 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265613152 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264095488 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258178894 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.269191261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257482042 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.260722367 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.27095625 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.264210923 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.266729817 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.273249335 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262522152 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269841892 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266594178 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.262490784 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266246972 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263411648 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26646387 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270534828 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.267069055 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.26224737 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270492924 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269343213 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.261228651 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.266075905 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272803281 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26536455 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25960853 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268823759 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.267809324 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267167549 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.265178505 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260383097 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270260674 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267684059 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.275800309 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259767717 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.269499195 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26241812 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.268574428 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262064729 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.266911181 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.264149366 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268291552 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27508008 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.265755204 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260215566 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268807571 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.265745286 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.265802761 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258582172 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268186645 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26662867 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.266157697 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.265210921 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262089072 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265334638 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257266338 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.265964956 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260597476 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273721069 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281383254 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268335634 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.269047239 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.269041284 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268339619 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.26936635 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258433399 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261046364 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262772971 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.264305691 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261013835 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268270027 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26131241 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.268387955 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263922246 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267692949 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267398218 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265995018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259550022 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.269275794 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26715859 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.266567448 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258100245 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.267070453 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262630216 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268547802 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26708069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.262991305 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272099256 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271126707 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.265269622 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.26421585 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263314696 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260253935 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264117977 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.273442551 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260632781 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270590586 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262120686 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265656948 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26488997 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273623867 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276149931 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262162064 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271063678 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269313023 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260592454 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262570844 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269470871 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271633484 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.280958841 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261688383 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271613009 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26844687 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.268693854 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.269796982 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270697251 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269176935 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.269713778 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273825866 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.27228977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266430703 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270784459 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.27907747 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270115754 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269510497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261765204 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270720341 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.280609664 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264508565 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.267594824 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.266073525 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271232141 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.269353621 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271105545 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270088113 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.269750853 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272177388 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.274228879 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273925677 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267876921 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273330873 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280983261 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274173721 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282304359 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.265733799 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275357857 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271256105 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264554977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264504911 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267817322 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272896031 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.262863625 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27356088 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271585805 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267009517 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271533134 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.277773524 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265416981 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269903297 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278151322 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264698197 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273265033 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272371527 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264190323 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272651441 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.271272038 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263170231 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.2674187 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266815329 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274403042 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266361914 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27458672 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266509368 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274873774 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.272542463 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.272588608 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270837868 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27213388 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264983753 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.274664823 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272116885 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282468059 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267560293 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272633792 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267747516 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279347654 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.285672628 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268896322 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277444772 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275075891 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268183138 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271482779 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277351215 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266612666 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276671349 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266102173 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267991169 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26830104 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274853772 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277328618 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.278033968 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267909549 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268945585 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27623521 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274306701 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275656322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270860599 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281059358 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268377941 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.268306961 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276165545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26966115 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280873547 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26781882 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.2705355 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272963385 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277528054 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274670526 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275046776 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266859279 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269901971 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280950283 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278956483 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270176023 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269702972 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.277282762 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269411617 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271243448 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271974587 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271114451 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270886968 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.277392597 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.269332977 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26979505 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270520386 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277236444 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280043865 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279625628 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269673886 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282878083 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284337447 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282032804 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270282879 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272559805 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270828361 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278208616 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.27594216 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269626584 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283617791 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284040462 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279184619 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275664465 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.276475464 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268597417 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278114315 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276595633 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274028928 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28355878 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272133603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28260476 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277954626 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.276871862 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268627522 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271565907 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273800241 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.271874899 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279313401 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276618167 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28090823 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275864799 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282508457 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278049715 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279066733 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.277509673 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269906964 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278282251 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271386157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27837314 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.278751967 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269714582 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.27917531 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277394396 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271721471 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273629239 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280608815 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.278063461 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270635641 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.274781139 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.282923342 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287065345 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277224149 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273263595 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274736768 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.281444878 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276948831 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.278194348 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270072463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285953568 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290528429 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2707976 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276747896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280721994 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287119629 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279791149 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278446994 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27470427 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276134838 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281830217 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278818617 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282430295 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28398218 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276925735 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281204071 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.271528595 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274482846 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.279342314 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28801604 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279384266 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275175127 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284860097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289471974 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277203636 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29032107 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.284338852 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278633478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283256034 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271146374 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281369932 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275529324 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.283951205 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279828212 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279266043 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.27938982 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271299923 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280162763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287515393 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28780077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279126693 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271764199 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275664159 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.282052283 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278808779 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.28135178 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279436494 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27856081 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279767166 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275044059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289571901 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292838326 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.286897452 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279797392 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280896556 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.28036056 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282768455 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278358193 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284120513 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.281436388 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.282596898 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278564807 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28997943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28318399 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275497737 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277121704 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277124943 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.284339225 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288266694 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30042884 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284804019 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.285029431 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28400433 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281507941 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276483803 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285338349 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283342682 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276474339 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277676757 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283289412 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283390992 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280712534 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.276019442 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.284355345 seconds)
  done (took 757.133731344 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281866948 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281414779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281197795 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281085383 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28288684 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281367157 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282246705 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28345286 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281881069 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282288866 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28335345 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279319846 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281502651 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282544615 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280767508 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280936785 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282084934 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280974045 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281224842 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280945945 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280278296 seconds)
  done (took 28.072100343 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281309573 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282839123 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281065035 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282166897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282367876 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282693781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283608819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281644906 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282134193 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281975061 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281871919 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281071596 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281564636 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.281070497 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281402963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281437175 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281880493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282869537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.282592316 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281890171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283476357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28184406 seconds)
  done (took 29.360632496 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28079776 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.283815602 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275396868 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.283631939 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.282225024 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.282716982 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281643375 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282611963 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282748581 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.275799728 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.27538402 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.274348551 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27728279 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.286683758 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.278216692 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.289125763 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.283014218 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282855621 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283349627 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.281030183 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285427001 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.293566416 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.282842444 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.274606591 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282946158 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282404638 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.281868335 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282464587 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.274164256 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284288988 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.283727057 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275770599 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284728487 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.285100996 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.276015882 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284740664 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28255472 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.281985721 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.281381721 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279099803 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.290703138 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282587367 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286974608 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.293749878 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.282380321 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275392949 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285018557 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281767819 seconds)
  done (took 62.698799216 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282497223 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282341036 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.282233459 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281951502 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.28125698 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282298386 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.282361902 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282429833 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.282497303 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.283548353 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283834313 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283225713 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282454999 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281754943 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283442338 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285397964 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282703715 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283230328 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282713006 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284601906 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285236381 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282647136 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283493653 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.284126994 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282937904 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282665371 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283271046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283645725 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.284016808 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.284037689 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283166079 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286824883 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283403517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.282959348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284239913 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.284845874 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284193109 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282346231 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285114937 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283498019 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283045322 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285269517 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.284930493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282888909 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284460308 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284508338 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285751172 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283980319 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284847621 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284872844 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.2841679 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284260292 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284382356 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284020024 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284662938 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284626052 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283496802 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284291823 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285093614 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285165522 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285351588 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28566728 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284879572 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.28573375 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285888784 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284703221 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284971122 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286497296 seconds)
  done (took 88.466374195 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286243261 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287153284 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287305804 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286914094 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287174824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28787398 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287029249 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28608135 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288145383 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286933829 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287587373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286796451 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286026469 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287429866 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286437318 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287335385 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288347797 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288539854 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288014827 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28830628 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288648531 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288524226 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288072078 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289141379 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290872728 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287672025 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287937124 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288749239 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288854191 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288136738 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290563364 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28777114 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289034067 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287955849 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288854028 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288845268 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28900344 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288545658 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288965168 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289795202 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288403637 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288591357 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289164562 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288916304 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289011828 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288879999 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288487145 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290619132 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288075917 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288910732 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289807381 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289621961 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289610146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288332755 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289149512 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289905179 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288551831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289770393 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289388512 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289583316 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291127974 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288986327 seconds)
  done (took 81.044821111 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289595243 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289002404 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288265759 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28636905 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288571961 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288388066 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287843816 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289202879 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289595186 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.288016621 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290078289 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288815637 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289601905 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289809238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289341746 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290484534 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288470013 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290098673 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288662567 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288459524 seconds)
  done (took 26.9422091 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290172993 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289717692 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288289553 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289286819 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288752279 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290340097 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289998873 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288436508 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289315603 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290789016 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28980846 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288951916 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288556253 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290269105 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290045231 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28977157 seconds)
  done (took 21.793287318 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289738957 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290359602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289393072 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290871498 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288874412 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288953138 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.289584964 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289570414 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290404425 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289625757 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289357557 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290506521 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291362831 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290870589 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291246615 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290585385 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292025509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29041726 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291163833 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292929138 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291566704 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291086624 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29147144 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291239382 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291374503 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291430613 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292220497 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291183717 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29111392 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291478168 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291515723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.291648059 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292411545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290493361 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291333279 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294474918 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.2940023 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293556919 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293844754 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293207993 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292977142 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293058264 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294867427 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295762647 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294922553 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292508151 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295028827 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293413242 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295409823 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292775342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295562849 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294699704 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295774762 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296591012 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294453305 seconds)
  done (took 72.228252023 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294031385 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294981648 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29336376 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292384825 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.2938126 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294491527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295283607 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295300228 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294109986 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293675396 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293172519 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296358579 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293946487 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294605414 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294928917 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2943297 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294396363 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29459597 seconds)
  done (took 24.463105366 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293720967 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295704883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29599182 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295134575 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294699438 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295148908 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295048315 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294762093 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294226275 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294097754 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295152799 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295729083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295608002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295891222 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295585768 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29424267 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295048399 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294970335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296590905 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296023069 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295754345 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295438433 seconds)
  done (took 29.661150464 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.286197328 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.287957571 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.284157675 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.298297834 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.295964109 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.287324008 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.287671117 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.286316464 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.30283869 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.310141584 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.307044628 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.293405231 seconds)
  done (took 16.695630406 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296066646 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297122704 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295744912 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296735163 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296584129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297333852 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296415599 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295954507 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297036307 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29731392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29794941 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297638201 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298119827 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297032462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297047849 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297239223 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29688581 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297218682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298185463 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296751774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298411782 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298158901 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298184002 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298344659 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299259385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297497406 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298788955 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297897413 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298617851 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300167708 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298176959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298319456 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299107484 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298652215 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298127337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299214345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300071398 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300623099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299054664 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299589159 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300934646 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299999084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299645987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298906519 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299174197 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299365442 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299503069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299961474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298695176 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298943733 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300151748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300047652 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300998413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300374045 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29917697 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300853687 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300056387 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299366602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299762747 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300169849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301724069 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300125865 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299994563 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300474404 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300774429 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301335047 seconds)
  done (took 86.888665418 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299760937 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301213089 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300569251 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301536528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300499608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301542706 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301202432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300118126 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30128459 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300537609 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300491326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302513788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301709714 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301989658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30032489 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299118151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302018311 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301261389 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30121927 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30231843 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301428515 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301892851 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301949192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302807596 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301247594 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301226694 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301725819 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301600805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303162561 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304164624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300194022 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301545837 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303213443 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302623298 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302648158 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302619324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302273836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303863466 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301905721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30316868 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304152298 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304165894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30206682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302741476 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302704325 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30265767 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303733445 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304043183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303625922 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302058449 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304841792 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305326825 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304998313 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303827525 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304727628 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303391295 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303016768 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305024071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30570718 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304226654 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303923814 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304360847 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307433247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304407285 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304231596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305745781 seconds)
  done (took 87.149953625 seconds)
done (took 1771.555997251 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464021501 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414383318 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.295260497 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.307382661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295717582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.295297515 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.307350684 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295376245 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295939556 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295161318 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295362107 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484967883 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.328515647 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295171355 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295891315 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392555851 seconds)
  done (took 26.534340312 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.3220957 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.303241032 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402060178 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.301168733 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.323706261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.471931862 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357759303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.303649726 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.450745651 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.317302836 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.293597884 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.321494399 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30071457 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.296104719 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319216086 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.472069579 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.531438396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.293620396 seconds)
  done (took 28.558577904 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.689102426 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.299200393 seconds)
  done (took 5.164989703 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.320011334 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.300782478 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301461662 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.300457285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.292802042 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.291700161 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299504215 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.296799384 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.300624439 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415972364 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.304770145 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315016224 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316829922 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302414405 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.310627926 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345059797 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462262649 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312549661 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308376838 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30811141 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301891955 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.389838476 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.339932023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.311205326 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.412938398 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.312666345 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.309642785 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309659155 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.414355911 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311780441 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302189352 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302552598 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30495854 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.231764599 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.822751843 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298345302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.325329577 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311050563 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311346642 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.449262579 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305901936 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310537832 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.295652263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.819087965 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.414820746 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413521185 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.320988759 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309710401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305397341 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.364693734 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304466608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306300173 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.360378593 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.079867732 seconds)
  done (took 83.570829347 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319173591 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.295998631 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479012651 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319754696 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296830054 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301393538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301455886 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.549081975 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333200318 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.298410477 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.607361115 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878520042 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.312203578 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.364526758 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.340304547 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349560128 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301351435 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.301309001 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.298931597 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.301602293 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840518098 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300981069 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.305564617 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.37846973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340161017 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.8057224 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.300608732 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.301657183 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305293654 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.299398229 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850218147 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.306391996 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.353242363 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.301049505 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570488509 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655614882 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621512732 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.311013946 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309165109 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.300445551 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.324253991 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795434011 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648119021 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.305454754 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.305665027 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798260398 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303995367 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.307126099 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.300190763 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566854367 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.299723676 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.309655908 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.30152713 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.306242562 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.299687053 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.354525752 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.346582549 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810524475 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304525892 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.299471206 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.326300034 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.303620536 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309842858 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305362497 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302070933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.635573758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.593511857 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.300047448 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632831853 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83790667 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.301490129 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907161697 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.290205606 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.296842957 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.316509927 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.277187474 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.277852204 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784891239 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.302454765 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.273375437 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.592604724 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.278951009 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.564943476 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.294008816 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.269674891 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825302083 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.27643051 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.31697841 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.271266436 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.268897049 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.271138698 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267192523 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.544801908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.343653999 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.263697329 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.265030309 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.264555894 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.26574071 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.27776738 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.26016207 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879472814 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.270567537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.272640976 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.262112666 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26054034 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.266576968 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.263930789 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.26020476 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536186368 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.258636925 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.274730446 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.261006834 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.255170754 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.257408913 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333365735 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.258398249 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.538681847 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.260581508 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254251084 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.254342773 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.253382312 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.30483243 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254742287 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.269013967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.238411143 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.561187642 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.270393601 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.269086512 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255574001 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.255262369 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.255303502 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255933959 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.313012018 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.254418883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997035775 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.296625818 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.252117909 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.251999934 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.261601341 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.259408597 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250459967 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.249184544 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.543932612 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.522400658 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.502142116 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24978611 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.247034571 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.011353059 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.287737152 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424630145 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.259649517 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.245258071 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522214752 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501763025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.245560886 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.244874004 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.246951558 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521367222 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.245191088 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563490892 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812991767 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.251450656 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.251555522 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980619891 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.055516822 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.250756048 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.247696674 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.53188336 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.261476315 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.245579487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.244921357 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.246209717 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.246533991 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.249299206 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.248616508 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.245770799 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.247274478 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.588161393 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.439038784 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.260748949 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.246376732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757423783 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.272894994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245669883 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.255285358 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.248895101 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.245524538 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.297098089 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.25060983 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.278619138 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.24546378 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.24800266 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781902139 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.251908376 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.248229255 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.438863345 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945654564 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.250786027 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.246470386 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.250371 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.317510206 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787677803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.25589156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.531250356 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.264539513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.286243985 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.247866833 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.266559285 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789000489 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.253425786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.24807223 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952445709 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.253556039 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.695858933 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.247296394 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.250658803 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867444693 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.25502975 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.247113789 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.247855081 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.247453638 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562520529 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.248988495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.283408894 seconds)
  done (took 483.558182276 seconds)
done (took 628.562682598 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.248057836 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.254179745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.254415413 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.252577783 seconds)
  done (took 10.151014024 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.266218974 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.253933137 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.264446341 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.254758719 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.263382162 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.252967796 seconds)
  done (took 8.697358768 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.246342151 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.24737799 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.251651983 seconds)
  done (took 7.885643713 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.438788318 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.259756704 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.576441063 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.258029438 seconds)
  done (took 8.669533857 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.255622006 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.25474626 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.256040591 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.256230219 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.257240142 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.258897657 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.255196309 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.258414513 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.255342263 seconds)
  done (took 12.443985866 seconds)
done (took 48.989925495 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.43550634 seconds)
    (2/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.33621048 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.387730937 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.264040241 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.304361449 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.272050676 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.342327921 seconds)
    (8/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.216154366 seconds)
    (9/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.388442827 seconds)
    (10/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.454239832 seconds)
    (11/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.246186379 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.420123219 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.390507403 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.394750256 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.241358989 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.352157248 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.216434124 seconds)
    (18/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.413239117 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.279781591 seconds)
    (20/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.358126018 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.251320882 seconds)
    (22/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.334108522 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.217363297 seconds)
    (24/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.217238108 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.387429992 seconds)
    (26/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.419012482 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.320022714 seconds)
    (28/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.235120086 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.274369458 seconds)
    (30/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.400840174 seconds)
    (31/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.363776739 seconds)
    (32/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.325830291 seconds)
    (33/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.242141828 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.281156312 seconds)
    (35/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.351836931 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.513988557 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.344438027 seconds)
    (38/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.218159825 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.360516956 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.472316942 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.644452025 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.540475095 seconds)
    (43/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.219998637 seconds)
    (44/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.471813034 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.393587812 seconds)
    (46/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.327076139 seconds)
    (47/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.219289516 seconds)
    (48/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.319034833 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.526154905 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.313609877 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.221274588 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.396788217 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.238073395 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.241025564 seconds)
    (55/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.319960616 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.248563785 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.460231516 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.573381253 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.351912027 seconds)
    (60/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.243433067 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.370552625 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.369836377 seconds)
    (63/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.575407568 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.354951258 seconds)
    (65/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.221342896 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.261089234 seconds)
    (67/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.275870218 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.350963927 seconds)
    (69/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.319472059 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.416709488 seconds)
    (71/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.305655402 seconds)
    (72/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.442687577 seconds)
    (73/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.326511814 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.222606538 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.344408623 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.408645643 seconds)
    (77/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.313413419 seconds)
    (78/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.397840685 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.281246605 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.646043271 seconds)
    (81/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.405167368 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.323683176 seconds)
    (83/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.324542685 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.475879737 seconds)
    (85/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.40199463 seconds)
    (86/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.360826217 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.463317668 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.337308027 seconds)
    (89/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.270351219 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.395907038 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.421384669 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.355037406 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.332364509 seconds)
    (94/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.469848594 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.309183073 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.358805809 seconds)
    (97/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.224463001 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.282546978 seconds)
    (99/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.482660513 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.321284893 seconds)
    (101/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.223768637 seconds)
    (102/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.36073367 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.490822191 seconds)
    (104/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.223787811 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.264592968 seconds)
    (106/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.281351634 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.344191857 seconds)
    (108/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.310768851 seconds)
    (109/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.475356427 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.425785572 seconds)
    (111/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.327052556 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.247303283 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.557696102 seconds)
    (114/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.338223345 seconds)
    (115/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.289850428 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.226865815 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.362556426 seconds)
    (118/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.241970651 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283491178 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.465426257 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.278271034 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23071278 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29057556 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.345004722 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.370522666 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.366022404 seconds)
    (127/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.27698011 seconds)
    (128/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.277988147 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.255142527 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.229301474 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.322336848 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.225891133 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.341509243 seconds)
    (134/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.538875554 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.539962234 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.251903204 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.497796323 seconds)
    (138/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.449778167 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.410846544 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.491559553 seconds)
    (141/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.231604172 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.397490427 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.340881762 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.292580473 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.227479425 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.319671384 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.279291448 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.334338214 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.318106096 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.400646747 seconds)
    (151/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.325189837 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.405625391 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.284919472 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.405217875 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.338977893 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.23040464 seconds)
    (157/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.252804872 seconds)
    (158/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.484578003 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.39071367 seconds)
    (160/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.35701424 seconds)
    (161/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.22885261 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.452989402 seconds)
    (163/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.373507002 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.382168116 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.397379574 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.31077014 seconds)
    (167/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.315157898 seconds)
    (168/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.486718102 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.292144984 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.354266377 seconds)
    (171/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.282758301 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.465523658 seconds)
    (173/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.230879856 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.365607221 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.486492023 seconds)
    (176/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.28302289 seconds)
    (177/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.323880194 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.230101246 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.397032508 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.355916198 seconds)
    (181/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.415985574 seconds)
    (182/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.239217238 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.230168503 seconds)
    (184/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.24470887 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.3657014 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.465491885 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.458304422 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.293487131 seconds)
    (189/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.327484121 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.287306998 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.290262456 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.230545454 seconds)
  done (took 307.39490745 seconds)
done (took 308.529023705 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.281355325 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.356342829 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.26066056 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261274488 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.262320189 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.252955797 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.288243193 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.261961233 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.27485119 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.276357656 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.252184325 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.276670476 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.279074451 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.275191304 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.296715706 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.26339249 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.262775727 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.273382364 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.277257126 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.280084145 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.263899637 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.262933459 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.291903458 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.262828593 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270455926 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270041179 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.270545993 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.255295274 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.271670124 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.278418232 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.254243709 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.27038467 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.280643738 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.276167261 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264871267 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.273962072 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265250666 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.358830023 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.285022522 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.275152144 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.272511199 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.28151448 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.268433476 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.268287748 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.273996055 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.29123538 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273083799 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.278815134 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.264365459 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.236709729 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284244462 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.276521939 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.274199046 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.249519493 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.275612617 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.284945942 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.274478782 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285660906 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.272271308 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266755112 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.298919872 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284816567 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.277284147 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271832101 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.273550037 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.279475001 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.274141122 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.282553491 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.273188342 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.266672732 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.267803675 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.273741088 seconds)
done (took 100.941780254 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.388952625 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.256136809 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.422804462 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.27349649 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.430521101 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.386897915 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.272919641 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.273731943 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.274068154 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.067570377 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.273936136 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.27437128 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.266039868 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.274555094 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.386632183 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.276285245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.274338078 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.964611845 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.274933033 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.402706572 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.258234761 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.275923533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.276789136 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.069707666 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.267382088 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.263489551 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403771917 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.274592433 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.967973251 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.260693458 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.266144144 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.968825559 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.402183937 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.294594048 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.284615959 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.285137024 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.432364141 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.278126253 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.390479574 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.39057428 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424638123 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.312697127 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.263134289 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.266194471 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.277529591 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.276677395 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.277649104 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.304776516 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.268011901 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.276999871 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.968619682 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.286966447 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.276851162 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.276910438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.277189516 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.306280679 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.277173891 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.278957869 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.404570774 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.278541962 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.393056487 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.072795396 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.0694306 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277505584 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.267014504 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.278401045 seconds)
  done (took 104.117821271 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.338037566 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.343930983 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.377996367 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.270022332 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.317441168 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.377512526 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.269561114 seconds)
  done (took 10.448194939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.274533963 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.277892746 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.316803235 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.315421505 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.278565312 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.442019735 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278170028 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.281905081 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.277503652 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.320122762 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.281117273 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278107895 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.287879773 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.26779909 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.316361226 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.281359142 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.387079231 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.271399744 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.279728577 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.421662006 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279048537 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.288838589 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.323729874 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.281992852 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.280227599 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.276512281 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.053441148 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.279304645 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279161882 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.279763306 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280578102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.336695168 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.279565736 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.269449773 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.280238909 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384027228 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.280203668 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279941898 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.281298107 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.273554244 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.281363052 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.27946474 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.281125793 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.280605732 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.280302302 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.295882193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.279772158 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.282520544 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.279997367 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.279098718 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.321119263 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.282128311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.281029948 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.281291972 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.325575877 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289677117 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.282047754 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281001532 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.28112411 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281100026 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.425000207 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319894279 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.280768508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.319464794 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281420216 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.281565075 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.281249181 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281078079 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361434533 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.280861736 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.320491971 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.281678647 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.455401982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.298092839 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283386372 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.277195552 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.276984914 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282633271 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.272260214 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.282003703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.283049159 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275697282 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.280252332 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.284070639 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.282879495 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.431443045 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383082025 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.283364261 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.289538002 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.282067482 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.283503785 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.326607979 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.282718234 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.283050797 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.324101744 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.392215098 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.327926923 seconds)
  done (took 132.024182558 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.288373849 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.288014052 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.278964555 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302756159 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.27607401 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.27641011 seconds)
  done (took 8.869658848 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.277760759 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.286914626 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.283986363 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.28307659 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284841797 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.286048672 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.28515237 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277560493 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.288425011 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.285258268 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.286940242 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.288076327 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.285042062 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.286085939 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.287302279 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.285320267 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.285366902 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28603877 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.285698318 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285838562 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.274352358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.285539917 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287097288 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.279126474 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.28971959 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286183214 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.301112948 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28536256 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.286441549 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.285798477 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.288530256 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.28958335 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.279648443 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.282774813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.289200667 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.27884984 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289991979 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.289386295 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.286844918 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.290273337 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.291399273 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288178738 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.287260017 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.288044293 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.280215748 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.282392134 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.292745937 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.303203708 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.286362962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.288518324 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.290923921 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288482786 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.290517674 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.291065053 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.282102436 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284033584 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.293580237 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.287879247 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.288202889 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.281267688 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.291630976 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.291718925 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.280835112 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.290829531 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.289080754 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.291422365 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.281832816 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292962191 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290439645 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.288583164 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.291371088 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.289021975 seconds)
  done (took 94.825827819 seconds)
done (took 351.435187505 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.653158978 seconds)
  done (took 3.817024505 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.538504595 seconds)
  done (took 3.704507741 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.583130204 seconds)
  done (took 21.993743942 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.369921066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.282413332 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.300890987 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.279079905 seconds)
  done (took 10.395953437 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.539704744 seconds)
  done (took 3.704776983 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.29435575 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.297773117 seconds)
  done (took 5.759105095 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.420008653 seconds)
  done (took 3.586184688 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.474668641 seconds)
  done (took 3.640770893 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.286706413 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.307411883 seconds)
  done (took 5.767782864 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.25283854 seconds)
  done (took 3.418918803 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.050575631 seconds)
  done (took 20.217032856 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.303899387 seconds)
  done (took 3.472518289 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.305587548 seconds)
  done (took 3.471917361 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.658921818 seconds)
  done (took 5.824100214 seconds)
done (took 99.939385816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.277420749 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.281489411 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.279070174 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.275483394 seconds)
  done (took 10.280113198 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.356116276 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.356207689 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.365289814 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.35067162 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.350680778 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.369721557 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.318077469 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.317681283 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.34787134 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.343890995 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.360104533 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.350619582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.359133995 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.334082801 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.343988946 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.361437637 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.348013055 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.365689967 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.318784851 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.350226022 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.294809645 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.353150268 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.345903023 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.293039895 seconds)
  done (took 33.422154364 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.780832474 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.353553118 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.436656794 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.334981468 seconds)
  done (took 7.073189364 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.39852087 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.399352605 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.415041821 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.464723575 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.48229156 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.411836643 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.318349706 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.315609275 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.30144434 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.398479907 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.477498044 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.397743087 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.612621713 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.294496826 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.611336071 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.294419022 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.29417798 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.399689188 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.448379066 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.477328363 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.29585129 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.397984922 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.40268853 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.399077693 seconds)
  done (took 34.878300719 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.303599725 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.313240837 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.296962641 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.311296668 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.296332926 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.298386091 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.298863762 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.302834879 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.296534764 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.296986736 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.297073055 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.311116464 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.297356521 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.297888637 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.304836419 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.297931857 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.299552156 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.303169648 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.306786749 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.296967435 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.297407754 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.305294854 seconds)
  done (took 29.800619477 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.281717211 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.280772874 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.632672391 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.536679731 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.280229939 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.282002994 seconds)
  done (took 13.463747187 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.352971507 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.486707663 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.287986646 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.612876072 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.703822271 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.297025459 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.290121881 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.517277954 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.795612533 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.794550583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.341763101 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.357011273 seconds)
  done (took 19.008697033 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.283233342 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.28939723 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.299962264 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.304269873 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.339654862 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.295932232 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.296247611 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.282755038 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.346845732 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.344291921 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.293467504 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.339667414 seconds)
  done (took 20.888382374 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374896906 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292082917 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309082136 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363365348 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295348618 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294307322 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363557981 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96323791 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.298661504 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570315613 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304388495 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375820717 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539350308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299210746 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298796631 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.197771568 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525890971 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750431345 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301814799 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295004953 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331846995 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295420418 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.300960121 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.494392967 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302725217 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295059595 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.556892449 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295513772 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555762828 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534909879 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536597035 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302677021 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570868151 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921442908 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406827691 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487657902 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299070426 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31165873 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.272771033 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.301581196 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321787601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30350677 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529426317 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305672709 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296385657 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308101153 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97997979 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.304226681 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.297399876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297193793 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531213259 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385382216 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.302466122 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29783893 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322622424 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296269554 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.304126989 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417655727 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938899617 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297659348 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331893951 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.304098654 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288952781 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322617681 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915343196 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313216713 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.304418758 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303469607 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298259078 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304280048 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322202984 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297420951 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.320451745 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299077439 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030346674 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306590912 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302347132 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803718666 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306424093 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.304762785 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522882325 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29873792 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298976842 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.296633166 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299323345 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980817388 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312171675 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.267213803 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344402969 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970076507 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.49171727 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324072853 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330006237 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.519464288 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.268173623 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300795507 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.300371405 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307738923 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32212848 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.976435433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299705146 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.306711572 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547595724 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.510949042 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308728185 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.213379854 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749854055 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307931201 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.32769416 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304108926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.501070251 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.893451565 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54965046 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309784082 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342282174 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303679019 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047052458 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313247126 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.313897541 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301864456 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577808741 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.064493616 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309017346 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375094897 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312869749 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30306419 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30715107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310730377 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302550365 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.472288248 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318198399 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54332392 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.311217773 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302136638 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.303440543 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308328898 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.311068845 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523021808 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304804317 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583854963 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303442023 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302930673 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303249757 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.519562783 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.315846356 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.3102064 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643941673 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307679311 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311841911 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546952559 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343913939 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415564717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335789012 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.306947994 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.557021209 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.309331123 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.310393959 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312661793 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31201363 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308239689 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.312691564 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29698877 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889458935 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28773559 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312148199 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304390821 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.321699632 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380153294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312252981 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498825744 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.311750602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310538067 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.312871121 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.305959493 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533246478 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543487549 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.31342347 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485488728 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.751163566 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895135729 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327309028 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.30558827 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.306211825 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.306267042 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307161222 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306034865 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308082267 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501379719 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553124986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309588501 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900138065 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315815543 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309931082 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.319603105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542685677 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.322013113 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307675735 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.309818077 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3131207 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327659478 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550183635 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534870808 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.325132961 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307252332 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.826022257 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316142354 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309377224 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308088441 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336430051 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307949256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12159531 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646195303 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313638273 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543928652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315574481 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.330810248 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.307272206 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308322267 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321305383 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.337737715 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316907261 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.503800129 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329374365 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311084595 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952371767 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047255721 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849742923 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317373871 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.322910806 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31467882 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98966433 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309569105 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309425729 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54618467 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990008695 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309796735 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754572157 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.322785036 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032250243 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55176268 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540330613 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311358401 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.316529136 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554347301 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52767035 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336120246 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317544718 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315290029 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.27810212 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828537431 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317210978 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494904594 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992672864 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318912836 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318023245 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.360972866 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311000863 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689574306 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31748304 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312159368 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313408672 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334328799 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12913184 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319377156 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312197556 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930059164 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33165008 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.770515966 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317663904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.510285159 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.55612084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.532016202 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.321365459 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.321883067 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.563139237 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549455282 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319973696 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326618826 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852602728 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.17427657 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.31993564 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314756562 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054299466 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329755553 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582240359 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.324831679 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.319098075 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32749931 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31498809 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314933003 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.31381456 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322215401 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289468465 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781207943 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.32416225 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31306513 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322225769 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32108777 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561491723 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.329451259 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.903914221 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54692803 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312388399 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34744372 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.320660144 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325244679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.291251626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315730381 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315408301 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31586887 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53807693 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31501143 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.289129405 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38524612 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526424312 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316330925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315642637 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528542075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.322491139 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.322764578 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06344185 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35449628 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315930255 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325194423 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315484951 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370412531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390785801 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513392483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.564655237 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563981537 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697841574 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322510361 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325922773 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.333675502 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398463696 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319186963 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.326183344 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.323022851 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90645077 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067220325 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924798493 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567267387 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326871601 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318697259 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319251693 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56018251 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319114461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596155106 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32024244 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.31509355 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340903468 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320597219 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354201363 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534551944 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593040323 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319120733 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319175572 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324905168 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.320223405 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563855191 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.539457189 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78738446 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838100462 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320968356 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330055235 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012050036 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597902788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319981951 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32121921 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321645108 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.337844539 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331038346 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.334983298 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319573094 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549723445 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560694759 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962126108 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.566084422 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.510516223 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.321113688 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320554079 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572917071 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157510195 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516518633 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928511881 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018195521 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579125507 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395164684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518761794 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.326665729 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558694384 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.33175183 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328367521 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324212938 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321665595 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.321692343 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560582425 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926502707 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58181723 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.327315283 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.331447676 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358423128 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.518525073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549547547 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016366454 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546639125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567320185 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338660947 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32385011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928271258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571993855 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330695145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.330652997 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529734544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329880232 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359276916 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.197409657 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.323750912 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837909548 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.537174192 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344977229 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324643817 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023234429 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932159005 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.335739903 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795771112 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333482511 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328113069 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607008011 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.333371223 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325115226 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613173784 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.33188025 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339860971 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5306404 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.924536398 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067375368 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.351993318 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342895965 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.335627532 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327057379 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38839307 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326820956 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336853203 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.70321892 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331976075 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329480353 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340561944 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.327249702 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333839246 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.350037936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328055898 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.336362844 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.325317702 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.316449256 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341194392 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450723883 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855035929 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330557388 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.94011807 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.66133417 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573584687 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330946333 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.301910109 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.334069879 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328307491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32832352 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328610288 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338646133 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852508486 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.334124928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.574847592 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341865195 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.538843068 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541570337 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343536224 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533510052 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335221142 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355797024 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.296396243 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329086698 seconds)
  done (took 949.33904763 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358929907 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.336525526 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.331963375 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.376864046 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.321944979 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.320027246 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.323138008 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.373192669 seconds)
  done (took 19.946988402 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.319466099 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.332749278 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.332547488 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.334966792 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.320806612 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.851298681 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.332219164 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.328554209 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.341599812 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.320938527 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.334101588 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.97290162 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.3342373 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.330699175 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.330021307 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.336000525 seconds)
  done (took 31.659984759 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.000471796 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.324861378 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.787298935 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.334679935 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.335402344 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.336248169 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.439275592 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.323565917 seconds)
  done (took 25.088824129 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.334941758 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.335531547 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.335279325 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.335782726 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.334565842 seconds)
  done (took 7.882703481 seconds)
done (took 1203.90015518 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.33809764 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.338086423 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.338503454 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.336704914 seconds)
  done (took 6.556922606 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.300959665 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.300913425 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.301332797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.314929342 seconds)
  done (took 9.424133532 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.982875489 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.823625475 seconds)
  done (took 5.012998057 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.873315598 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.87138072 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.863687713 seconds)
  done (took 6.814585826 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.620048185 seconds)
  done (took 2.827490686 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.302032618 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.329596618 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.041856178 seconds)
  done (took 7.881677748 seconds)
done (took 39.725536999 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.323962893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.086608567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.478428562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.325889428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.484613494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.487681595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.572997226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.323624204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.324104129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.344560279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.326515619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.483770409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.561742638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.088461845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.562208236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.087411026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.487912325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.33542859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.324924366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.324565798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.573170063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.32404473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.324445408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.339753204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.494384864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.470110649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.325007786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.08713099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.324548104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.332670688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.475485164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.325015819 seconds)
  done (took 80.940122169 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.324513444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.340842307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.3297427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.33526031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.325268021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.327723665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.327537916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.325116182 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333406278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.328094325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.338768142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.326107112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.330193325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.335825205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.326312483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.333261319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.326153608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.326294064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.337932192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.327007652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.328221435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.330301884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.32665414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.333035266 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.332689936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.338236206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.339465546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.327988388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.327301777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.342764659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.355260133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.327797958 seconds)
  done (took 75.825198752 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.327733391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.327218737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.347897427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.327647364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.328492948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.351907602 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.331387075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.342093066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.352784819 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.335808423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.327514793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.338706287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.330422182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.343360343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.344761168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.343424791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.328057037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334732199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.335344512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.334025949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.330515653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.329219416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.328252937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.334924999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.334124983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.328894424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.330131368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.32893479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.329352645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.354391012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.334496605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.332578062 seconds)
  done (took 75.941878357 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.569106937 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.344043494 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.347398757 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.339175768 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.349228377 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.343838416 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.339271466 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.575805285 seconds)
  done (took 14.420528299 seconds)
done (took 248.336003325 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.337198464 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.807167906 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.371729912 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.337477765 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.355817145 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.364257324 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.555934553 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.37120731 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.552866595 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.361359692 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.375053315 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.339838694 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.104166516 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.496043835 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.141415801 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.248888276 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.184154186 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.337611129 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.873579043 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.616475681 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.369333893 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.332875308 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.138066812 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.205036374 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.316184409 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.413391512 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.436004199 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.562891983 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.495363483 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.412961542 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.829637106 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.347507325 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.340139942 seconds)
  done (took 62.54516111 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.338807337 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.348457734 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.349370093 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.350458273 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.348127154 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.347778758 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.338376489 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.347888847 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.349737849 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.347443316 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.348712447 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.347650855 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.349361874 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.347641829 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.349393504 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.319969914 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.337968344 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.348856089 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.338702753 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.320636707 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.348266855 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.349134443 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.350070006 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.349540086 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.350124164 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.348114488 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.348417043 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.349771216 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.349267508 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.348725458 seconds)
  done (took 41.582020946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.349502833 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.891813495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.056451693 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.353769528 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.341192853 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.345129923 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.61465942 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.356878717 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.344286629 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.345492109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.802121192 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.359407295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374040593 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.058424618 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.350601087 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.350983118 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.349813273 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.342422191 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.901796752 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.358763116 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.613159305 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.359491034 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.613778712 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.356967579 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.344592967 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.343975121 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.348010781 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.131300213 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.36918067 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.80061092 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.070909078 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.614435155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.060207336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.106903628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.068923764 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.359010789 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.35239009 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.807000093 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.351948844 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.343912046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.613450366 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.349253372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.061889231 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.026121478 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.361841756 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.353137441 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.15691068 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.810473633 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.578789223 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.355028714 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.097069048 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.354243251 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.35488226 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.346031592 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.57284853 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.354234922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.344474818 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.185582651 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.355111233 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.61536045 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.360746536 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.346516299 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.909235481 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.35184259 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.903664057 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.353798659 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.354224684 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.34795575 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.07149004 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.355177782 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.041918054 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.364577605 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.356309483 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.806400793 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.903988816 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.210333152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.353424532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.909201083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.093246456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.635709582 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.35516084 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.104420116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.639055747 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.356693432 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.358189372 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.35623761 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.356246607 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.419490881 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.614560375 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.964011836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045970775 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.187966282 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.626930063 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.360316241 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.347183521 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.177385306 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.355930133 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.356306154 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.062582269 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044940822 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.363357864 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.354795511 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.038253485 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.365569459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.620435029 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.360030848 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.105388458 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.355524613 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.464665922 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.357106985 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.354428482 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.351716582 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.619987595 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.357597021 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.360006396 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.022717542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.839423473 seconds)
  done (took 188.542486981 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.345173077 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.344674098 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.342533041 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.342884949 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.34341152 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.352198111 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.343234234 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.344146164 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.349264857 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.343159834 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.343342182 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.352134588 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.349480487 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.344435223 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.350788364 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.343651753 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.34326501 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.354583144 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.344509359 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.344194902 seconds)
  done (took 44.146531444 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.359440564 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.885513003 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.852648652 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.366636389 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.360223681 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.350680424 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.403863476 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.3605501 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.359995229 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.636718084 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.517850887 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.367259375 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.359877621 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.361295823 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.850210253 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.338944065 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.637291009 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.892531238 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.366913013 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.886587419 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.336919961 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.360534702 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.350160782 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.889457752 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.652995109 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.628506253 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.412348529 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.888591283 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.367616551 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.361905351 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.889586806 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.367338158 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.353173942 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.872720899 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.367560321 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.375267468 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.363131166 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.407913748 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.411084869 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.641293886 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.900791723 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.637392841 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.377813503 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.507570811 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.363320795 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.331723276 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.897649504 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.36855358 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.334137585 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.363767901 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.367380333 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.863606732 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.359578486 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.86509342 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.369677732 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.363678739 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.892080279 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.869222759 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.861905361 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.51976174 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.359064237 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.623333012 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.370017923 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.90290251 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.36911396 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363711668 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.364365922 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.51787598 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.898771962 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.631573173 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.648886531 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.647709512 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.369983315 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.419074571 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.369371646 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.644103525 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.424994606 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.731424485 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.644242069 seconds)
  done (took 122.755724452 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.614978892 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.46271513 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.727467018 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.924231503 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.85451767 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51414013 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.463875417 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.596255961 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.365698562 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.470013612 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.982949792 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.450065207 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.096504292 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.418128855 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.458431496 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.475047975 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.739861427 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.302516486 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.969778207 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.968954145 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.372156289 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.459771736 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.909730322 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.545186301 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.357474268 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.906783521 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.263067075 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.865482572 seconds)
  done (took 51.766083178 seconds)
done (took 512.552136647 seconds)
SAVING RESULT...
DONE!
