cset: moving following pidspec: 18628
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.240676289 seconds)
loading group "string"... done (took 0.552731056 seconds)
loading group "linalg"... done (took 7.77727077 seconds)
loading group "parallel"... done (took 0.172550125 seconds)
loading group "find"... done (took 1.192533841 seconds)
loading group "tuple"... done (took 1.863834316 seconds)
loading group "dates"... done (took 1.268775359 seconds)
loading group "micro"... done (took 0.234772511 seconds)
loading group "io"... done (took 1.237576008 seconds)
loading group "scalar"... done (took 41.011716469 seconds)
loading group "sparse"... done (took 13.842717162 seconds)
loading group "broadcast"... done (took 1.044865853 seconds)
loading group "union"... done (took 14.349190051 seconds)
loading group "simd"... done (took 4.800783797 seconds)
loading group "random"... done (took 9.71168338 seconds)
loading group "problem"... done (took 2.025143612 seconds)
loading group "array"... done (took 22.831135323 seconds)
loading group "misc"... done (took 2.060349491 seconds)
loading group "sort"... done (took 3.469918036 seconds)
loading group "collection"... done (took 19.676992091 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576222271 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144317722 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151517489 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131549082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207787435 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158616579 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158333701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099290271 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.022481338 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176284155 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154925302 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525998121 seconds)
done (took 5.273627946 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.260937791 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095012174 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10495857 seconds)
  done (took 0.920013932 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077061243 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146401443 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096183998 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07926235 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095489998 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078590504 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095240599 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078646436 seconds)
  done (took 1.391501481 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087363239 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097995079 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082252303 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097906958 seconds)
  done (took 1.085701146 seconds)
done (took 4.460338906 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.739113834 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2833257 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205096848 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46388436 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197329326 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217861688 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.73018658 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.383252679 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254770201 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101077351 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145132249 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388155036 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138772727 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.727433742 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092430781 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126462209 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.184290102 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.493693186 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082485951 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110961429 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117616008 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145256469 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132924042 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090909127 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18687088 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08433064 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1966883 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109244818 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080763886 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27855343 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202321122 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.738928302 seconds)
  done (took 11.189353268 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111748539 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134989615 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098369871 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139658682 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13543281 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10070398 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084804861 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097070121 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122877667 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180080883 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114506225 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138283485 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097015682 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082511644 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117314888 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247539738 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120612303 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099736156 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101357238 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088109867 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138291402 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113976502 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108631402 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093983637 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168592884 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224342881 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112355349 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127494021 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097753749 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113652281 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144855448 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144927243 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095627353 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080596849 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174230663 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125431322 seconds)
  done (took 5.213060928 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.095108385 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193256269 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122850518 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173088857 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082153686 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144099181 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096348316 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115256754 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259591407 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.127553362 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176046994 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145168266 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100450376 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098713127 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082649663 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098369074 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.573078117 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158733344 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136653327 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114767141 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088802384 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101371444 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.723963359 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107877357 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081206426 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098185717 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066515135 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160662781 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099244305 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146934636 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120886764 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08379154 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135309829 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193242547 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128252206 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1364328 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080177149 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112631059 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098228217 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17855974 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087146895 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099284823 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120861425 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134054368 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120579965 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.124093511 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098799384 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208024332 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083880133 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096213049 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098387785 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.943876697 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.186159785 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.108629663 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097171257 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078772383 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.329445864 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116570946 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081039151 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096919761 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265755542 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.208317478 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098753574 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08204692 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0968375 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082524634 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.733133792 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098357686 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.112493221 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084279987 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107474408 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083152183 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098008036 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104615342 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087715693 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116366308 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080242513 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095234759 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081273245 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098734958 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07938372 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10093864 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107066079 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086543393 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099385597 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149423657 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098252914 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10013918 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129464711 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101468562 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079892232 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132693165 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100554233 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081368506 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135947675 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09963811 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091354384 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101470062 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144528475 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099603527 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.139611337 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082290734 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124362121 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100496167 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115002918 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113102117 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099904675 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08542116 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098193742 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078426019 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166818112 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083292 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09931567 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081247002 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111739893 seconds)
  done (took 23.659201345 seconds)
done (took 41.873822805 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322017212 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105173509 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105541639 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105687858 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102356972 seconds)
  done (took 1.533485055 seconds)
done (took 2.296889707 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.327266376 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195167388 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078815202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188307615 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078884215 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176160922 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180380437 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096116268 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.223983562 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078485744 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184691774 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078116226 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095868599 seconds)
  done (took 2.775387532 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096970447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117046495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083760934 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114234744 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077179794 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114066247 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092626354 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119342378 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111747704 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086031575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095542725 seconds)
  done (took 1.872766942 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095499649 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115239773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083780251 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11278979 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077368991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113108814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0931774 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118967593 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112001918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086661397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095372985 seconds)
  done (took 1.870268533 seconds)
done (took 7.271012722 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092970477 seconds)
  done (took 0.853020248 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.942888975 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.921844598 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114480013 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153223433 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.320045417 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193536168 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.482669562 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125656392 seconds)
  done (took 11.206016488 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.115172818 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102619144 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.11518995 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08500699 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105558154 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087008037 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104713388 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103012525 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087918636 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101890899 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08678144 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100835303 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100150491 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084814403 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103599429 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08350979 seconds)
  done (took 2.393364869 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12040326 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11960485 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109216439 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110262168 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087123839 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108067894 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10809512 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089683359 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105361383 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104814978 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09107498 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106606248 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105758298 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081210969 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108528302 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109048534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086596704 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108497995 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108456181 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092169439 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108388634 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096783791 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087609426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108564754 seconds)
  done (took 3.334933324 seconds)
done (took 18.549362116 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161705218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110900155 seconds)
  done (took 1.039032509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097550448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115022938 seconds)
  done (took 0.983214059 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098404813 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097716104 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123412891 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110578096 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08169821 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098612234 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121326304 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082419798 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097917628 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080107391 seconds)
  done (took 1.765922926 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084801709 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111938182 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102554588 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09647191 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107002283 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096022742 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089352531 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101071434 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110270967 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078287978 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104259222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11608889 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086263564 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117960522 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106458464 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083519485 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103660395 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10121058 seconds)
  done (took 2.571804185 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082203875 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098703277 seconds)
  done (took 0.954294982 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08337315 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095165024 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082430959 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099605943 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094994786 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07826546 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095064296 seconds)
  done (took 1.402522783 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491130617 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138083898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264946186 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102869198 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104662691 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305897016 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100845593 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085138639 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106092886 seconds)
  done (took 2.532048808 seconds)
done (took 12.017646801 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095490646 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117739898 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113426476 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472124603 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110025763 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101329153 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148891087 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25477932 seconds)
done (took 2.192781816 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.14612006 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613145445 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.434325897 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235673657 seconds)
  done (took 2.063483694 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.411496781 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101553229 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084722208 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083169005 seconds)
  done (took 1.465128431 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081957951 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101372552 seconds)
  done (took 0.96564416 seconds)
done (took 5.427300113 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082558457 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098259862 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080154804 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132402349 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080435351 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099707475 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077468725 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101150324 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080355837 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.101760138 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097551362 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082064343 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096138764 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079825132 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098304881 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082947451 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096696207 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07975689 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098536812 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079128606 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095945611 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081890934 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09716104 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079065328 seconds)
  done (took 2.996841521 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101859645 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100771322 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104582759 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087527453 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104974757 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086088908 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10529734 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099537098 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086822893 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101684202 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085333698 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104543039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101795652 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086511746 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10283573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103307157 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087953195 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100742831 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08336689 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104221704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104031654 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082630993 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105628717 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086468488 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105000474 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103359987 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083919174 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101519479 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103931711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087610305 seconds)
  done (took 3.689422266 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087863658 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096343139 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080702066 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10366693 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07897447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098908464 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079177139 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09863356 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080133565 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097725966 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079935609 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0982829 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079181267 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099275983 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07883488 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102972334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10913156 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079794305 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097023711 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080764234 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101011053 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079823181 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097601963 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079189296 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097587456 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07874708 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098001088 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079253357 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09862553 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07838817 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102164845 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082178655 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098354462 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085803475 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101888125 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078617791 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101081547 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078182216 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099125354 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077729373 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098268266 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096349234 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080480277 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103840664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080733017 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099776881 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08003398 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099433351 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080039312 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101902644 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078964657 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098722118 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080332195 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099320287 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082907705 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098495162 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097370296 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079765596 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098135537 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080456129 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096974964 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080003123 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099759394 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08076972 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114391236 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086567624 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098384635 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080692262 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099103705 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081444025 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100586796 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092638239 seconds)
  done (took 7.315955101 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085375806 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108680196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081445511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100885219 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077371755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099615648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100791045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081117436 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099938095 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086719141 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098324706 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080845376 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099560605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109649561 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081780513 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099449541 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086730295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096417897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079810669 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102374051 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079480704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102233741 seconds)
  done (took 2.835380305 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212328478 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108710632 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146235003 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109276865 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08484955 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109315911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104246139 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088659143 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106059642 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08495973 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102932802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104646806 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084823436 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103697159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101794942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087222054 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104497162 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085534397 seconds)
  done (took 2.726538878 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094949301 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.215856972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103255066 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101941995 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101012335 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084771459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10673023 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109754289 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085621181 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100384845 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091194576 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103491929 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10265827 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083295912 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10387222 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082757271 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103457241 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081731178 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110950039 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106891057 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087603579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110831268 seconds)
  done (took 3.071441663 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099393284 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10344278 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119875208 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086632643 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097301836 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080850907 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108759917 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081322401 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109204138 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102494181 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082671559 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100059323 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089264706 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101387872 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10551228 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083190344 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102664008 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082887978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103388672 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077696952 seconds)
  done (took 2.719074408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104229986 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10367106 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102051195 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094446585 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10320984 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0837247 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112510115 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103304277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082515579 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128403668 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103917788 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082962056 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112022494 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108980318 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101389661 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093960506 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111636108 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11174698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083878396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102673722 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129430783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082922595 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112342732 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102482434 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083667073 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102475603 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102091883 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089679658 seconds)
  done (took 3.639357618 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083896696 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100577907 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083299191 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098624148 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080779012 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098959642 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08094507 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098114888 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083410604 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098546358 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082830731 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100471135 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082659043 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101858507 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083020831 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101501919 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08238996 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099405747 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080499934 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098627096 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081837095 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102134875 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081971407 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099456539 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079353825 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102525071 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079215643 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099539669 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081693291 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100077404 seconds)
  done (took 3.53327514 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093529899 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110203498 seconds)
  done (took 1.007577345 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081541038 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117822846 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079636686 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106263584 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087286632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103840842 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110380994 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087765947 seconds)
  done (took 1.578879882 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099093731 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113526346 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08433796 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116282823 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112566808 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099529536 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17344155 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104873053 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088369583 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101561552 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115791128 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082711135 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109020978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083245228 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108401043 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089389455 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100532264 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107764689 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087239269 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101150523 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084542881 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115287366 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085619083 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098941653 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103223432 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093893308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115108632 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084216591 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106248763 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109574514 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089336434 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096312153 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083546337 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10359019 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082079645 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112670184 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118612081 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086426871 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112473126 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084431931 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11523922 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098663851 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088666292 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108829581 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093802882 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10421068 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103839724 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078317466 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099424149 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085564691 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098046617 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083583365 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097905993 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090827371 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106610267 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113173119 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082221175 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10351016 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086031949 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106999919 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090649286 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105373875 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1041787 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083818863 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109959255 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088601956 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113154842 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07814495 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097822032 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080879621 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113850413 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126704532 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089750665 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104526188 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103652117 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082359653 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105931059 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085445206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10880337 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088748555 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103694461 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110014671 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090451358 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103908048 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085298064 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11229252 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100789947 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086493185 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100216979 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119760914 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083661133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099678571 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082565502 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113918054 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086550433 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104008186 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081598684 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111046813 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076456653 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104189692 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10430025 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08454484 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114266589 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107897756 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090822342 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112476821 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090071026 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104103235 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.1049122 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081077022 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10388953 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086397261 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109400364 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077536122 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106819054 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084224864 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103668702 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111333346 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082682119 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103548834 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091441861 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110199773 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081515838 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10053623 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085597211 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103190462 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106034464 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092320659 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10254242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078491152 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099177902 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086209122 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103684701 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10687221 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090118294 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106910173 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078374545 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.1010275 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106699037 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093745134 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103064888 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084816904 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110683924 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084040632 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10314247 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108480333 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08677317 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101328683 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089029026 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10406531 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07881624 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107549584 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105358548 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083196276 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106887259 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087546979 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105925425 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084581376 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102765907 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109325601 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085625977 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102428265 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083789936 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102254323 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094650352 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106053243 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078035332 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100902233 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110964179 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082123234 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103474864 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082969205 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105950419 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084178632 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102000449 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08304612 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105911317 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116348381 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088552624 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105587945 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108058052 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096399278 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102998529 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086728592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103477994 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084570368 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105355028 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112106227 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089441096 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109056751 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086447634 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100861475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108924584 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092417254 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102026547 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082451401 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102383069 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087014008 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109402402 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106800032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086321712 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101569712 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084315808 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10781099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086120076 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104789614 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08179058 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110259347 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103294995 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091081502 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1054675 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113505733 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088280057 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098555439 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088125883 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102649276 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089877486 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099475016 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081016859 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103378369 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104246899 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084163449 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106475063 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078567044 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111189435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091271109 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103786801 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082011734 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104889986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110093811 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086875494 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107843616 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08775249 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110391933 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11302749 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083890079 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10682799 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095157356 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105693834 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078015737 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109969454 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081365347 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103922652 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102191309 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082649739 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106177659 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093202569 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112099877 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096995011 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088201972 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101925513 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083140435 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099144064 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089734232 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107105707 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084117682 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112081018 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10443402 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088409751 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107563865 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084560184 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105246472 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08547978 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108149843 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104274253 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08782807 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102560607 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087942704 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102820149 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082595199 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105362835 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085107572 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104253938 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088523173 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103878146 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103939837 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087496606 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105730574 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084604718 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105135482 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083360841 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108462304 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084144962 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105114025 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106114043 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080623297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110974216 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08408628 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113013839 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084147581 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101848154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108199849 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089473724 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109495917 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08457141 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105419583 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084640338 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104864921 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106921869 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092130464 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101645266 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095151683 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112917012 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103748093 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087646278 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103996493 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085996978 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102693 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08584001 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105551137 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08437725 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105065548 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107731979 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088796821 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103992133 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087054635 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105585551 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084384874 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106519981 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078363123 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104446618 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083274314 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106074052 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115203348 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085390874 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107844432 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082151843 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106176864 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081487428 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101894362 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112861985 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09366222 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106562486 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111235582 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084209068 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105195418 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09571556 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098930569 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082581646 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102937096 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081417319 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113171101 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114053647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094622701 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10589019 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083216062 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101502999 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084479534 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103806241 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07782368 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102514354 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107169681 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088678578 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102372038 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085466213 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.1076169 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085409565 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115647942 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102163957 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086345961 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104696716 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082186612 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102318042 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082838826 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107396768 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085385772 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103170557 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080487568 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105592525 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084137944 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106710389 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103276654 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086825753 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111709853 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083856027 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108415122 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08782404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099720335 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106393992 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085078326 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103567603 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083427513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.1088222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087680372 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107064533 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112923061 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084925396 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105381028 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085052573 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102374522 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084019651 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104963556 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083441028 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10514854 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104976306 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093993725 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102388722 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087968877 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10488132 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084517002 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113380842 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105533797 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088341312 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112993261 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087636593 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106782513 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111843377 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089604574 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108106474 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085873375 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106609071 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089589381 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105273624 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110731282 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085997778 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105276533 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086434868 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102589878 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08399198 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10495789 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083592192 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112085546 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10520746 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085229417 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103543094 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083688543 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105267338 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087858869 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113721271 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086473023 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109410821 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099449398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08226481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105984563 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082504656 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.10751777 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087619374 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111510744 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08571005 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10641704 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102903563 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094415091 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111804014 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088359595 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10449346 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087242548 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107418464 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107154662 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086703041 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105225917 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086602969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109634872 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085417698 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105564261 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11182698 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089517825 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106654322 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08618752 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106750878 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084618823 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101147315 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084223185 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108117545 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109849654 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088406174 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104905404 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095455612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105531359 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083858236 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109732455 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103523278 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090002812 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100678057 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086302165 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107337824 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085273261 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101347309 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082563495 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104044707 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106822966 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084566866 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100065114 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096461033 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115612012 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087620089 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104609043 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103300214 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081661349 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099694698 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084882579 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106760351 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087579496 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116327303 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082675659 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105260446 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09888913 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085978462 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108171179 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087889134 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103050787 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079864653 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104379932 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087369559 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112424172 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082205173 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105160104 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108377758 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087594872 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102961242 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089304187 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102784372 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087916629 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119668484 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.1061303 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085879008 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112265704 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092584734 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107646004 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100328374 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086408569 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108802981 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085430007 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107787475 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084817301 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122458233 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10832801 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083514264 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105220707 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086913469 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.105640229 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112217085 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087501231 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105721798 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090234583 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107781008 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09335049 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109087248 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113884853 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088286751 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109399823 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083577133 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108148623 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082630877 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105541754 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10654258 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087190605 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109921079 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091919783 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106376701 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116345062 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095228949 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.1115325 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081064562 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.1055646 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084072241 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101910394 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107987998 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084926547 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.1037093 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083801423 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104205381 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085967236 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111975989 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086562071 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107912001 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084458567 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100262903 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085776841 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109244509 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106606348 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083144785 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105323279 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086593324 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110712009 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088124111 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107027884 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085603771 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10803791 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10546044 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08173246 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112146478 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084653676 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109121163 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08392361 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106708182 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086106311 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110005367 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110616917 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086863539 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10894648 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097438402 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109683124 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102568958 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083086565 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110413854 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083729781 seconds)
  done (took 59.160321327 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149905374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082560375 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101563135 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081128685 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115374484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101227158 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081469599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102214334 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08174781 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104845672 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079844845 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102156635 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110738737 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126776557 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094797331 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106691488 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078939898 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103856217 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100530093 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082494612 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112159701 seconds)
  done (took 2.959357247 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106888805 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120929776 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118671623 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120722912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09164564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118972477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117851915 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116589131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100767051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114925218 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121959604 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117359933 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093240235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114973731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112888462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0952209 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122073803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111839754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118515688 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097120373 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117667371 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118579735 seconds)
  done (took 3.324936194 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086281298 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104445432 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086627864 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100401795 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084790818 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101263374 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088920283 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.1039083 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087346374 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105614707 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082819245 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105747364 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106968205 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081327976 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104460793 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083152118 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154505444 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110227257 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083831389 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108959651 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079014971 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10914329 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100215272 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081567749 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10472185 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090162296 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106870442 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082646493 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106444278 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084020297 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107178996 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081677103 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108078287 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084606609 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.105963464 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104130746 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086456371 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105482863 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080394015 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103597919 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085859398 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101784333 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084576428 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108271141 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082518026 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105246679 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085377298 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106828071 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079030797 seconds)
  done (took 5.583034377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105541313 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164576014 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088143991 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14645282 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124083418 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115087533 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089810659 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145784606 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105121173 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082832097 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124850989 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123272006 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106451399 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090776199 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110921276 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104951155 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087124207 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10548085 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08985496 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106487412 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111199246 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091947665 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122660853 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121498307 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110468505 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084677275 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10666692 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.089675899 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121259722 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112382352 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111226934 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09222568 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124562563 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112599266 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083671307 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109237202 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125429241 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084933151 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110311327 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103634082 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088286444 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112398935 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111772018 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10469218 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107813556 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11165948 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085814459 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103624342 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120217157 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088399474 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116314436 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122315183 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088736864 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107429001 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110726664 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122354731 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086406921 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104861989 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088433385 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121076862 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103972465 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089373369 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123384554 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10922488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093818078 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123236805 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112819116 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110446582 seconds)
  done (took 8.32683608 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095498057 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113852455 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123585999 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122571314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092395379 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114394811 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113113207 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091463726 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114045 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119325182 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113539371 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137050426 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087460226 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118009391 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113125289 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09244386 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114799738 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113749795 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092632674 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113935953 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114309419 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122397445 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091701494 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122990747 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1463157 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108109611 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091857024 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114466768 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123555388 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112710762 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125244621 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092883044 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114304566 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123935303 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125556517 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092867024 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106837202 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112852363 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092907924 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114379303 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108181032 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101541396 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114974415 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108809545 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091721136 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114198342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122649953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127263093 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117165742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097734471 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114298218 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124012263 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112424373 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092842287 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123177152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149814385 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123158289 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123975026 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113377392 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10193378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123699486 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131519791 seconds)
  done (took 7.855751912 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109370029 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119075327 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120869959 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101812274 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084997514 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111851165 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083345952 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10537514 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11567547 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096343874 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120143022 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111265269 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092808044 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121056306 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112600896 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115161145 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089990425 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112428035 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11675888 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088450721 seconds)
  done (took 3.003016749 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095135712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127619925 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085875483 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115688251 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110930957 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092854772 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110866252 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109858503 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08844488 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110378895 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097992268 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120783254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108773071 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092377537 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119205184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114845736 seconds)
  done (took 2.580266368 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100911529 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119856746 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123371497 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085209403 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107077743 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081979243 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109360833 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103488708 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082517085 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1239489 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085401915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111568855 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106992168 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084887398 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103775652 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08777486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104770782 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083965962 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107640794 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122602793 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097708668 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107239141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085559859 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110088473 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108343739 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091723427 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109135324 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105899713 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085265819 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107653098 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086709104 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116278059 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103364631 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085700009 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105656013 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084241303 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108336187 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086276041 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111194327 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106659224 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085976014 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107416191 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087222505 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109140006 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081101535 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109063324 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080492583 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114565975 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105148877 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086941439 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10852313 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087350933 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109380354 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118290187 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089483283 seconds)
  done (took 6.398416271 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101057205 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1118457 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080708104 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106845519 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088762331 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110985729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110714031 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090348929 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109835022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083735449 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109946956 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090187915 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110759363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110330913 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089553641 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111476631 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081546936 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11017136 seconds)
  done (took 2.693261076 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092212139 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107566487 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094227018 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109169534 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08506175 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112004872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081416264 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107768979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105362524 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086879956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10827409 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089028787 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106862606 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089170363 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108301736 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085166936 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111142435 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104404965 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087221722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103719283 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088943931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106527202 seconds)
  done (took 3.051009672 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120337112 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128838778 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092977116 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236806632 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104548964 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135438003 seconds)
  done (took 1.700785739 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112107268 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12385751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10755611 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109078659 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117332642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086793849 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111297366 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110780275 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119727765 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103296985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112027721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121215524 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119045682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097495585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117864701 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117720555 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108621593 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088885428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109485028 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129811113 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089348665 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120990433 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111143307 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088116662 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11094966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120668583 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119023887 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101595828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110864859 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121184109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115979491 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088770277 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121488717 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125046075 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089581147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121104183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110440645 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131015172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115614294 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099211086 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112070192 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116388982 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097612284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11602513 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120198966 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109504223 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095074543 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111295246 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110919532 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137701407 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095830276 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120883878 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118257609 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12038214 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09778165 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138009588 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125593203 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119660161 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118406123 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124549698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119075173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096883376 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120120432 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125357461 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116325152 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097318077 seconds)
  done (took 8.305139677 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103775485 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130080158 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110358853 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124343033 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09820485 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111412528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110483465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087993778 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111707863 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108998697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155411455 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089566035 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121276437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119822271 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088066531 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111744985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110784829 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118885598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088383032 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137336712 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111168399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119084054 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09799181 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120544633 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124794278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118190605 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109366029 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090333547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111523845 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087883835 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116956576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112015552 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120083998 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087231367 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120185109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111782453 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088287748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118073358 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111959094 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116031179 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099645841 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131381952 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11168978 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108934007 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103920576 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112366509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110293678 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08751472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111464248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109386547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104716402 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12504871 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126165041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121064173 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110619627 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090123491 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111916636 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109459977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0897224 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118457214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120429452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087786987 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138888335 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111275748 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111133976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120054637 seconds)
  done (took 8.21120666 seconds)
done (took 159.044977867 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.227140174 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.223501462 seconds)
  done (took 1.339809127 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099782361 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140569244 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095891309 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.204947558 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108750337 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.133036382 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150882765 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099248938 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109946153 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086983975 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10985457 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088096925 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.213854568 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08702998 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109492727 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109757282 seconds)
  done (took 2.843056721 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119870399 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.235830689 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12749679 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108375507 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091833255 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112357664 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085029502 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114987564 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090293253 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10961879 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088992205 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110278867 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085411717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110243301 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111595768 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090462129 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108445157 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090210769 seconds)
  done (took 2.884410013 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114697086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160880995 seconds)
  done (took 1.173613881 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.250432278 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.166230334 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.235819825 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.481105133 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.280485317 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.577874181 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.617783912 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.617700455 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.186854839 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.407761878 seconds)
  done (took 4.71455346 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120155799 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183198079 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321372144 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157897382 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107211731 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132283149 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160165409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13365491 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124584623 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101706231 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125864877 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121272917 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142303361 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09539618 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118426146 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119870017 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122249001 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116657443 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117973007 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097160156 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140629483 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085168553 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119403857 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116750689 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184755737 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098372663 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109750999 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107051327 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097401716 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118059614 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092549016 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128536877 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12230467 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156310787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125792999 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159038092 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121617733 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112725741 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09636998 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113878785 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098009034 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122801579 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128441532 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118994992 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087657445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120409871 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087344825 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109618949 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094689556 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121916632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117119879 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093986921 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179223414 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099375222 seconds)
  done (took 7.603282774 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800970469 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158989867 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09091514 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.893507393 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141695429 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105232265 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783329566 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114552689 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257092688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766317528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135744529 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12156731 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207242651 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261599579 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927105488 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286950598 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67561663 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130981466 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15477376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155494968 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119689416 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136581152 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11059474 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43055749 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119879454 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11391394 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097084095 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121069235 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162015424 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127610246 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114587213 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18034097 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247390579 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205865244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094634007 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114249722 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11211128 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170548759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264665185 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193497757 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180972846 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111045265 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08930457 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124943548 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134503026 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086554877 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187069626 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176108179 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171691696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116873671 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11978867 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099129501 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122988762 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165324671 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12366096 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31269918 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324114931 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090310018 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123218661 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127565542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259579856 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103370778 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227973747 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140523287 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213536448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09159299 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78038899 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172292983 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113128311 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096750633 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122634033 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117665216 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099280582 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168583171 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409941162 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126881601 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1166123 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091350063 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229086422 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104170824 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11398803 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163603701 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119901323 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12158446 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103492665 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124817706 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170809693 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253201597 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10197276 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122319463 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116752579 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103691249 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119403291 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212221637 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22277599 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163661149 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233691148 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100545846 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187050665 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170690641 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12059105 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173287348 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121418993 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103465883 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125154763 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219374726 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147707539 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124893815 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095032887 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12164884 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150253769 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12831016 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09794305 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194267292 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45995569 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169723737 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111487271 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129240933 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098768714 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185206202 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097147167 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264839641 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123255126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170787516 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120125715 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089934995 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122628586 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164937451 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123701404 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100091276 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124548724 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121391525 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238680859 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217064243 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12252892 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223225802 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185408766 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120082497 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174679596 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123343796 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170177301 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121476777 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099876484 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119019001 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772303506 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122798656 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100123333 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118079304 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188777634 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090716466 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12694971 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126556586 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088024421 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802441052 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128955974 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099800805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127708729 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119647232 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12085038 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097684485 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118330492 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163818312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232042481 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121573162 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09803585 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126984396 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162688399 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119758963 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127757397 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103750269 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12773596 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122940669 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092524865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127948353 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169561564 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18853542 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220635694 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57717649 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114393161 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102796141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230148147 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114353262 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291698584 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098023332 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226334942 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164074072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.124330391 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323142647 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166930106 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188841314 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.13018205 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174463161 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112261844 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119672215 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166956336 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090029498 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120350117 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163146885 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12884092 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125097507 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964701939 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091717456 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226226013 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113110972 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174428193 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120200352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120779863 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265331312 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114954916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129664917 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168640697 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117279369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103390377 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.874073515 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126912515 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102328321 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12111577 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223989958 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166023962 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122449876 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098388817 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121831129 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163060311 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232044408 seconds)
  done (took 44.509802358 seconds)
done (took 65.960141244 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28736373 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221287358 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.27250336 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173859087 seconds)
  done (took 1.963161563 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17512361 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152463958 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12336852 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111098783 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154397762 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085727885 seconds)
  done (took 1.726087696 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369567673 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28371113 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.248220034 seconds)
  done (took 1.833182513 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.324551439 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25303365 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.481832554 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330882147 seconds)
  done (took 2.419340478 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214755674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135729588 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113494487 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10513313 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20299193 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249737884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144802493 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206398292 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098908172 seconds)
  done (took 2.449173034 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.201433961 seconds)
done (took 11.519080868 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.251617063 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.210984592 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.160808916 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1542457 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.185401974 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.225154757 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.237107866 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 0.254295019 seconds)
    (9/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.170087663 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121717616 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11689171 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.200135108 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.209448818 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.202984873 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125524266 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098948692 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123235413 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.148242147 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.245079785 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.173711741 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.14171636 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.234793041 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104312057 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.143021389 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.180345917 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134119188 seconds)
    (27/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.151632534 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.147985959 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129942411 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127248405 seconds)
    (31/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.087030199 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.254510658 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126742429 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.247632128 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.134868265 seconds)
    (36/309) benchmarking ("sort", Float64, false)...
    done (took 0.149678525 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.140748553 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118792019 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116647063 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122561303 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086252622 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.192916058 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.126424924 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.139291484 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.241281307 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095611614 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200604113 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.197744851 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148603251 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147000964 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094328978 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101875267 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.18017198 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.203594736 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.139162453 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.121641393 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119808305 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094905911 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138662089 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094592592 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118684186 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088629427 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123643305 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.220702856 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123195633 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093002812 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11378527 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067889034 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090919285 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118983857 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121886162 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158815928 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135860172 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195562869 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.193649902 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168542217 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114496839 seconds)
    (78/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.152094069 seconds)
    (79/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.177784515 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.103762623 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.132773541 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.124309399 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.088068415 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.116764963 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085223807 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112536266 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142202589 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.121237408 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.219282179 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141235114 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.222981256 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068514755 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151811986 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188848276 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.117371695 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.179228842 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.088662751 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.140971254 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175481904 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09676781 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12427695 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115944126 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.142954909 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.137205883 seconds)
    (105/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.088567279 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091997603 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092489496 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118825707 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131921545 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120171072 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088570973 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112927698 seconds)
    (113/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095429052 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103971362 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195014048 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089404385 seconds)
    (117/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066368975 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.110282473 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13662745 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087943382 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.20210289 seconds)
    (122/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118657926 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154188267 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092790543 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069697798 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.454475706 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.184561259 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095854531 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12112211 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06878158 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.183485412 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066895898 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.093523862 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11194416 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.227430647 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114254781 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176552147 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100168053 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118451445 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134119144 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.139901605 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118585534 seconds)
    (143/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069200528 seconds)
    (144/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.115499129 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069421217 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201683303 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073837035 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119404523 seconds)
    (149/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080008936 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.188406327 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176414541 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069221716 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113816638 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132607706 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117527605 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096334975 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112083094 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086976366 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.184832365 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118973266 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086313935 seconds)
    (162/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.1140969 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134699559 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127676784 seconds)
    (165/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.200723507 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094645968 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111649911 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087431109 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142164529 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112075352 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097919829 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188106655 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175622472 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079014349 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137008542 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.168453367 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094816152 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094431554 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.22844746 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093531614 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095161542 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.18407982 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067731158 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.093793404 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096692487 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124807704 seconds)
    (187/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149992312 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094225303 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140668958 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123519499 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173181503 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068442808 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068529762 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 0.178360643 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.154647489 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136809252 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089422794 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114703064 seconds)
    (199/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079159867 seconds)
    (200/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095393119 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112072042 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086837746 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128202098 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156545041 seconds)
    (205/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095309751 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.12295468 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08849631 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121305104 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068112979 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112258546 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097620286 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120289813 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067972974 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118221226 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068407611 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068639331 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114111302 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093651064 seconds)
    (219/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.103737851 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087865461 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110869991 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111920811 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.149443087 seconds)
    (224/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087981301 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.190557586 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116520689 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112515736 seconds)
    (228/309) benchmarking ("sort", Int8, false)...
    done (took 0.190759921 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.120338159 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.193136687 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093544756 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.136077395 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091378637 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.134431454 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.14002731 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149861614 seconds)
    (237/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.094083208 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083301216 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092807302 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153107645 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113728749 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086737613 seconds)
    (243/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.102048919 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088303139 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067017981 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.123602092 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112008398 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090604728 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.151637453 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069610268 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086196639 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139200285 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067376734 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121041707 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088827495 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142664007 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068620062 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095432798 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095515184 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113059199 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069393068 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120889929 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068342783 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111329318 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097436256 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068046833 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120488788 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067081359 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11274631 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068277726 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.115869421 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08763567 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093909669 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090321249 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076692732 seconds)
    (276/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.106331998 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102765645 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.189993647 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119401793 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13081305 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.09585112 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096333631 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.216638757 seconds)
    (284/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.093628633 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087652728 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.221871615 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.112616816 seconds)
    (288/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070300737 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086430224 seconds)
    (290/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.113164356 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094030655 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120580112 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096232191 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.094954445 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10520102 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.096050484 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113325939 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113422354 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067522979 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119215069 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100521795 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095732116 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068058947 seconds)
    (304/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.092909132 seconds)
    (305/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091221618 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11755485 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122817907 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068088897 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.09549953 seconds)
  done (took 40.432065224 seconds)
done (took 41.366403648 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102465651 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152332051 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096426364 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139310837 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126119978 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092551973 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121974104 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099072508 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12679638 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128120422 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099484893 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095900821 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097964505 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123634827 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097052042 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142427558 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126403169 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09477978 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121697524 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086874287 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122591451 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088178391 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.116585452 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070807675 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124657117 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094833154 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120647684 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121339679 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089134819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112306817 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09295205 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120021555 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088353939 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127051825 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094815565 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12196177 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0980553 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123973031 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088589882 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114852454 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119735482 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089378984 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119440227 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096626053 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119006985 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094081128 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121282142 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100220017 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.143552221 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117176499 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096937256 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123450322 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097723802 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120792459 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091269609 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122986913 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092379376 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143717079 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121394267 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093772601 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121356484 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096787917 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.121482377 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095040085 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125174168 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125358253 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100066324 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11819344 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098132115 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119463328 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087475862 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122169872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090745392 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.114505304 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09655314 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124927655 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086808613 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.120300302 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118998975 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094230735 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112030437 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091378207 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114917131 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095042813 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115259205 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071901726 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090230399 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119752972 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111486394 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098376792 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118842056 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095056086 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114903231 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099519337 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113605928 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093628519 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114772491 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088404724 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116331583 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091384232 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114220055 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089773132 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123708175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088895359 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.121059524 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124428084 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089464127 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119272952 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088263693 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112233696 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102368814 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124685844 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087351237 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119747762 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086429637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122425206 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086552766 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114333958 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087486841 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114391213 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093780014 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11406417 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090320949 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121189069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127170767 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089001679 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116711151 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091425929 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112656839 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094005363 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113994769 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088728607 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115236453 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079419176 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116424134 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088534944 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120104998 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092158603 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122933399 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090302838 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.123548377 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092728771 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121336625 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093315708 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114063635 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07502724 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119028385 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090197409 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115495288 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087831303 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116167846 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087093271 seconds)
done (took 17.29501547 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08943776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188634107 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153984231 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145233727 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10791624 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115400323 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123708364 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120543205 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116962738 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145448269 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111693668 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135630836 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151696484 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088161267 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114422647 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092656873 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115304341 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103790654 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149802393 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135748014 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167129251 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086834395 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149673473 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139149481 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123242258 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116190898 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114823125 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092461326 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117713723 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104437343 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135962008 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091658195 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115361893 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135761565 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106814798 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122827612 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088139611 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122772123 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088837872 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115688564 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144066504 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109247749 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121273246 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118828571 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092707929 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116285787 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090338229 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123947104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098734231 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119329127 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128794159 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158255795 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0922214 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12412982 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086972078 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125737247 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123251732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092413479 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11412124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092611838 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113414213 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092864631 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130107465 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14308229 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09267332 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124816927 seconds)
  done (took 8.800701563 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10662888 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142861827 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125100301 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133925449 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113474454 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089076685 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115529799 seconds)
  done (took 1.826953984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090838109 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136818869 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112410572 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139540372 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134665393 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110553103 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126705763 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088435893 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134345043 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089244305 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.138739358 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154486504 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090225113 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12365067 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139739513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090150627 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140409184 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08831544 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119389266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111917194 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119340555 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137804915 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091615669 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116632011 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103132363 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116976605 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163932543 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095014791 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117682778 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092896305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114243046 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169113935 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105876705 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128731461 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088586317 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1318857 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130282502 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088315032 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132208296 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094697272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130976835 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089721048 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118231868 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08726831 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12195407 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125845513 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091958459 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116230749 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093365049 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135885561 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090285219 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130591147 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092097997 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121266228 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090532789 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123314716 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124966335 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091540869 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136466865 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09107977 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133821325 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107446758 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13166926 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133293953 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092610074 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130592598 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103832654 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119695484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091384052 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120613231 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131539335 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089259782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117612294 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101818487 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117596001 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114000403 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1406544 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09068049 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128183701 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115736711 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091013024 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11628608 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113880866 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120650691 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09017294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122285378 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092493265 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115782658 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08837369 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121019734 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087558981 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118118761 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092550883 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118278406 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117601107 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108233085 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11708651 seconds)
  done (took 12.050910228 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092652471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115869672 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093397496 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11663661 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091781295 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117639762 seconds)
  done (took 1.639446998 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116458046 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120429222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104341514 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123621574 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159296815 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104773689 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133600324 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125778471 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108052586 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130631203 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.132718566 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10652664 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139143982 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123140852 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105892168 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123147419 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104228539 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127966093 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130487237 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097852521 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140209644 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122559627 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098375464 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13486522 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119431338 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098415188 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127657746 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102742883 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130357058 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12557894 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097936143 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120894896 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097410132 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12674546 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132028236 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096540748 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125156611 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120077752 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102861416 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121960727 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105885961 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126049711 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128568094 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09628173 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126607847 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122164531 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096402948 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127495826 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104756262 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122274783 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121833495 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096459978 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120594128 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095578827 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125242393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124257564 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095743665 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132340165 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0969164 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124766074 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120074756 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095026655 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127121073 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093798084 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132910001 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121955846 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096597426 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124719394 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123417623 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0979087 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121857924 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094288799 seconds)
  done (took 9.413740682 seconds)
done (took 34.726896754 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.710543503 seconds)
  done (took 1.721586549 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.733570891 seconds)
  done (took 1.745945234 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.866797595 seconds)
  done (took 18.881308008 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.517639421 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.605248657 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.895868665 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182864319 seconds)
  done (took 3.214500937 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.987134863 seconds)
  done (took 2.015810145 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300588605 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263055682 seconds)
  done (took 1.580499035 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.802213185 seconds)
  done (took 1.825213594 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.369772891 seconds)
  done (took 2.389936491 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337275772 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188190353 seconds)
  done (took 1.550508396 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551609777 seconds)
  done (took 1.57675338 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.088611831 seconds)
  done (took 8.11891548 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273403194 seconds)
  done (took 1.314839778 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305730392 seconds)
  done (took 1.337950518 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.702093287 seconds)
  done (took 4.733834993 seconds)
done (took 53.026889427 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100240218 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129495108 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102994459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127507422 seconds)
  done (took 1.484783572 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102407423 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12347482 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101412743 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123626124 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127987873 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098036742 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125107359 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101569856 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123653027 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097020574 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123820203 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12140827 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100714665 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125911935 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094532639 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126706078 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100491253 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125169565 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126633174 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097139694 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121434842 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09856067 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127835658 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094466174 seconds)
  done (took 3.745076574 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103092437 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121664262 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098423 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121050659 seconds)
  done (took 1.486948222 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102126038 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144991355 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140948867 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101420928 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14506604 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138702053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093423259 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11961941 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095625861 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128256457 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091974029 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151335618 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140744636 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100901655 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130966104 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089733718 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12075903 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140456596 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100905243 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129428274 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096317751 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128367197 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091134283 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142730625 seconds)
  done (took 3.90278433 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172601496 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130906091 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141605661 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097407377 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164649325 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143777842 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089466545 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143544495 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088196643 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134809933 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119780569 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13603758 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132750694 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088786516 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117616508 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088588227 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132102387 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131277837 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092683067 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131425861 seconds)
  done (took 3.520409508 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099323119 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120164325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089353124 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119077111 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100300188 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123413916 seconds)
  done (took 1.695096947 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092082281 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117063194 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091680481 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11587495 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096106411 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116933111 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090000373 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117034746 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091285821 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116828439 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09131109 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115927904 seconds)
  done (took 2.29591998 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.500959684 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121335307 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120638949 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090483923 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124671129 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090456204 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132532952 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093656492 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144466606 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08957822 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118723848 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091682144 seconds)
  done (took 2.761661181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237583736 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130016158 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291989995 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370933723 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160053816 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1799603 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288948213 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16727163 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227536089 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169503119 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206733597 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229590893 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153846629 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19241049 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141672435 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120202512 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236936632 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252530594 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157195667 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213457929 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232209207 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170556989 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184809905 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154557463 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140798309 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176998893 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096059815 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134417602 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239895119 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179826855 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190917365 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192079722 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121574098 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24190508 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258114776 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223838531 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290940608 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111796009 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.180864936 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174313299 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271521007 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141522015 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206775817 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159507463 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135028404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194354087 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168486532 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20708677 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.155156184 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114296622 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227197083 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242977135 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197635736 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140752705 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310392103 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156091663 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.177750208 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196481869 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256462916 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232020881 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190259196 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124131314 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191330727 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196117542 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218061028 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177788229 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183512267 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151432765 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232103656 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192856129 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168904287 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194908667 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220142545 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143939561 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173180786 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175639456 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176471068 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261654756 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187038093 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126095545 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172660667 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152980327 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107034356 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197242963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128340472 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215502763 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147263832 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166970807 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248402792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161141782 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134509697 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236912731 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233427829 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12331564 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.114392396 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157133343 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157407355 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198257967 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14379018 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162148947 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167236477 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131490765 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188817752 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098221581 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214406355 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092709191 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175649936 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212401474 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101378301 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164375702 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154664782 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153086327 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176840353 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228810749 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117207138 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137000094 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211178367 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207905091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15379007 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182023663 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20632682 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147783303 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153953327 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202840173 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249961969 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142185944 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206676259 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160731229 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138784449 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105587851 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211732957 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156543343 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134733271 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137593411 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.213264024 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209745386 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128945091 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113237557 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225329884 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135384714 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107547122 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165106124 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151859752 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142580395 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155640078 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155140833 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185827428 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180262765 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157393102 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167470789 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155644826 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258214031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145464082 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153951853 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150675124 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096619728 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19367739 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231971249 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104014912 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236965497 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17491139 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23628561 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17527251 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135865603 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178795541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10538686 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122822448 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196588231 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170580901 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163074697 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.228252789 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204384565 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182857328 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.21486046 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176300705 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176429354 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169072253 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160187416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141652153 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163074627 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175206196 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09728267 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147986486 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137266943 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152072909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144463651 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108241831 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228318349 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172408147 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194538221 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162663011 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152694882 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184592525 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131751084 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175861523 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180735551 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151091085 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.231114089 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198052213 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189566415 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146264369 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233075426 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095356009 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128176357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143900231 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173138466 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107195955 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138852295 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168892509 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184268374 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212574618 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181264554 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243236065 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177148354 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19556239 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096322301 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172647234 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188318242 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208093387 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170424225 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144260109 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153769876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18131127 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161941183 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259641017 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172890489 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178608467 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240312983 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153143526 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106475349 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15439984 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224295562 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156449364 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180049319 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150210658 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116105219 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166433557 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136791522 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162182582 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213246531 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136423361 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221436321 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153554472 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188271573 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131601859 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166659274 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163930912 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168976361 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082502367 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176583948 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237159412 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151419977 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170784997 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192631563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135476116 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314222946 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249194656 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199859921 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140970204 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158343473 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164742397 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166941918 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174652612 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181272831 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16214251 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191314995 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162208125 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139688127 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142396907 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123539178 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15423253 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.1342086 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151583578 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179344114 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142378264 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187411504 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16577829 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162046141 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17525432 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153999588 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146722126 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152416244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21968403 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186927194 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243784637 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153439973 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185377419 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236454191 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100740489 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135670915 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134224296 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180553065 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111268383 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22510745 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190654605 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238803941 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186399043 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197843322 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143826888 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092293195 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161096932 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205345025 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212058934 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155908635 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163221694 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234562895 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120997657 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135556578 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181101248 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299116831 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149588766 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227709984 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082465538 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28940731 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13077682 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106685489 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167550209 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240196223 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13794221 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167151644 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201114544 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174922295 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168039203 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152492666 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195976885 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220503452 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234007648 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183218953 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.136634673 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159645374 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179784975 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195151928 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160603006 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143766944 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206527901 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22957867 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199492693 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14612124 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176068576 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171450047 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161228086 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218338535 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10940517 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237886714 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107975188 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22854875 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157354424 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147652503 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179291196 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192685104 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146072129 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190719513 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215310692 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109116644 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137804417 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174128814 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180872341 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16010174 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131206268 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183457216 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128740023 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197265102 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26443896 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138182801 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157476277 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121765836 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138748569 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158341614 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160437546 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145341998 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142572209 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234501481 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138937051 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195775093 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236361528 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173149626 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178672872 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148473291 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.698026434 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132701908 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198274406 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163206664 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20942417 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152903068 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175655655 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16336875 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172595242 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229770694 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163788595 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233538444 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196885536 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180908093 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136123776 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162072259 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166066873 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147637248 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155002681 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172418626 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163786234 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156787783 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181717536 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174957102 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.138191249 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14348838 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203421447 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164393511 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185700438 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182464497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142872648 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176748501 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220456403 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107610516 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.21101301 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211833994 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145595278 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155376415 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135956784 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15989982 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238637827 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129387086 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207140055 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219053245 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162929458 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173192432 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150698715 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197254407 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160817809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217158683 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122597647 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162290959 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159132279 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141062678 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132702085 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15811038 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171634427 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12211622 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192233654 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142448999 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199688093 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127779462 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147789411 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297871113 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197200212 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248478064 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139816843 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108719518 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16614666 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155062856 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181643213 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210337643 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11049412 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140578398 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140270391 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.134660607 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142593118 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158713527 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201777513 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170576036 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209718477 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140299774 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282983789 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142935406 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157965097 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09064394 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136364613 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153049283 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120337209 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163162295 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224817739 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268908993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121410746 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13830815 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153904986 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098524115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140526881 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170050075 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16695284 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180608879 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149975813 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111477682 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159321102 seconds)
  done (took 84.993386648 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176806502 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153065445 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163048688 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225064353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197703439 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287631072 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231382953 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272695401 seconds)
  done (took 2.840055185 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096231049 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149889436 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160584258 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.137095715 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092629086 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122550944 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.353572042 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136318063 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.120331733 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123466345 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.180375019 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095920515 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.565396551 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.093478346 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121753433 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.112911675 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094231981 seconds)
  done (took 3.892348231 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.487966045 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764645809 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.525039396 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099930853 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.395334236 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115366294 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.121036479 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.205648984 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119958498 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.508731326 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.780666108 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166121218 seconds)
  done (took 19.432658575 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.101797692 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.123910673 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109928519 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138851223 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097150939 seconds)
  done (took 1.716811249 seconds)
done (took 134.790741996 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106532212 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411289162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072845374 seconds)
  done (took 1.66100487 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109631503 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.140259324 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110173092 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139274145 seconds)
  done (took 1.650439542 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10057714 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129280649 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110920785 seconds)
  done (took 1.485318749 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.330645937 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.194788418 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167912976 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107653068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13167737 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105210066 seconds)
  done (took 1.489325041 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099637404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130431991 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099401548 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133041919 seconds)
  done (took 1.609673975 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097227621 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072197149 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105493362 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076574436 seconds)
  done (took 1.493568364 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116054239 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135346417 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105193263 seconds)
  done (took 1.504556199 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132433183 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.142367737 seconds)
  done (took 1.422757574 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108376203 seconds)
  done (took 1.251479282 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119899118 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.173318681 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192330873 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.168879836 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.240328125 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.168810645 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.144579364 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114972363 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13500917 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.147552846 seconds)
  done (took 2.753951261 seconds)
done (took 18.264828556 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105547667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.521004155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415247449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118848574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72523853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381295396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.073997249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149100479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168789086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09545661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142453728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674078518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02669416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.476092462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982597717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378433885 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678152482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125539491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122564196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096753418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.057005955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092977366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12587574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094009121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708091927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428473033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097370463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378039317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094250235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12906997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384094782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126959521 seconds)
  done (took 17.311629056 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097887073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177909024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099393937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142016276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.126487885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096225563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127766271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095592247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183170947 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126390772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111922488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126208931 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128893157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096998976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144745569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093863107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128737586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093301616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125623583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123443056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114664593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1235548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096447363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124648242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095780849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139431039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09543883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124874998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12361478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100897839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131603671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096424104 seconds)
  done (took 4.963660312 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143644007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186905273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131631081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128827405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172974556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127505709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.203803914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118636837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187215566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126849461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142898836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094472909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160322689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125481532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117113178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124139234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098281308 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125945711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093725061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127443972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142611556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094591329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125088208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095848698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12673669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108591423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127937657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123432435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095559251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130265873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10174981 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12764459 seconds)
  done (took 5.294505741 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099294626 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129094522 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111735076 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142601293 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095855997 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129451651 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098136017 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128593242 seconds)
  done (took 2.088776431 seconds)
done (took 30.800468521 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113907754 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13006323 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109536431 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138086415 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104519772 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136003994 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092372666 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.138035277 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136613392 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104882235 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140669912 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093596628 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.126064621 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093329414 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139000791 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098919779 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136266304 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103645842 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138059871 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.135429464 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096457499 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13732435 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10485962 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.136393089 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105245433 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137380816 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139806358 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102687186 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125385886 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097105045 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128837989 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105315389 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126604786 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10645171 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.130162459 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098611915 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127365277 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09570913 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.1372094 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135057321 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101900239 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.136334087 seconds)
  done (took 6.1668367 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109847775 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.142528821 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.107242835 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081946923 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12063065 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081853856 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141361071 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080618505 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112672261 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109829588 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074613228 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.110235569 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079822052 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104047322 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078991141 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076533366 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111278668 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077440429 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077993921 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.108843621 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081497157 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073575651 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.111490066 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079877649 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076134208 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113844813 seconds)
  done (took 3.684700233 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102573114 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138862118 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115333802 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188492955 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164421788 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101062465 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136470558 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111940254 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.142182657 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123044371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098751157 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152670062 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112689094 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.133545273 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092869236 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141246123 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138557205 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096145376 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130665983 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114943044 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142105065 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104145346 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.147517767 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135335671 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093895782 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125671226 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099661639 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138458275 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099039846 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.135824776 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097316884 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.129190468 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125456889 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107051726 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129625702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095478751 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.146308527 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105041793 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134813199 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093677275 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130284371 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123832908 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116517932 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17193641 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093116195 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135333009 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.101499622 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136393152 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124360653 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113072417 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134849826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093277849 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128685585 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092940953 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124748381 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107676082 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.128069206 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096819872 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135748565 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126611318 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107649059 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128771704 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110149809 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124861292 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10202963 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124542407 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094585722 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124543627 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116028892 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12743637 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167269159 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094465099 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127013783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.1034023 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13450887 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130996893 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095379323 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140457724 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104769114 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129193657 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.104205256 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.129107631 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097055782 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144024414 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096018089 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127417779 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094306092 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132166442 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127009718 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096621173 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138890325 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094463075 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128593332 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112062669 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125506868 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095607081 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133013458 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129367743 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094547346 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148514777 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099832951 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12636722 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10323754 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126219183 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127565538 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106276168 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129177129 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093790174 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130649816 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100495157 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126189659 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095370518 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129085891 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09483428 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135935019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099990964 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131308278 seconds)
  done (took 15.200574226 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232303864 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219162277 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242554632 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.269682567 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13898421 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116732008 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215864569 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15974479 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126965832 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163468895 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178753781 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185876944 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172823288 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188214213 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173811269 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094687856 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145523348 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167989019 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21845641 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.263345958 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.148616552 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101585161 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165643495 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163539257 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.141157558 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134943778 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112133342 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139454365 seconds)
  done (took 5.962181091 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10963764 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159813902 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09969211 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148657023 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153388455 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093384314 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.132067084 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09567706 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140382738 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1394608 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094372386 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132250645 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101217432 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.136340424 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125680256 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10569485 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13552528 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096118593 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130244667 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099354781 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133472404 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102642562 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.131346388 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092926949 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136075951 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12425395 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088521272 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146415336 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093702778 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.149119631 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123305807 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102610196 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136607898 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095613114 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126201834 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096345571 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128850555 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096456105 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.128164706 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092839332 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125919535 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079420984 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.125835432 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108412821 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133644083 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081058454 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133445366 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130281403 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098067097 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122863111 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098404925 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128553319 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.099319302 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1331912 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100600717 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126808077 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098128883 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118292657 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102048412 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128757901 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086879252 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124126217 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.102149624 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.12061848 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103193427 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131736091 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093300866 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.128738082 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09846414 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133620713 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09638497 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129296886 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093125952 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.129203617 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096664599 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.131938218 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09773935 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126160793 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093813676 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.127278003 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076312513 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126622285 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07535534 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129216069 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093610596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.125381874 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097376326 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132835118 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140765016 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096897966 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135508604 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096163425 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125229845 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097881459 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115713771 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099434344 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141849559 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14361082 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095761988 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124591849 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109483028 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128617998 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094112852 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108715897 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102819173 seconds)
  done (took 13.270031755 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129309165 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.158561904 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095778531 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.147088197 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159187517 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160027403 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10325769 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133916075 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097195335 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145779071 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094969307 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135658052 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098471519 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140977999 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160231631 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105442466 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128598583 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109718952 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135219736 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173966081 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113223196 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.146600345 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109407256 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127708531 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.10032937 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.144863317 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164605409 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108386976 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.141241693 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144214004 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110532079 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163915318 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113437057 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.132814929 seconds)
  done (took 5.629618511 seconds)
done (took 51.065639728 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.281949725 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.490628226 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.252076117 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.311896456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.296871249 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.253818326 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.265245334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.250830932 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.567498167 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.253799947 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.509365036 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.05366237 seconds)
done (took 59.970761041 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.255448948 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.386197158 seconds)
    (2/2) benchmarking "String"...
    done (took 1.517883726 seconds)
  done (took 4.09988964 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.625794888 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.251500307 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.52065173 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.252022017 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.252240795 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.54201617 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.128513656 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.688693239 seconds)
  done (took 28.814977799 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.253312108 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.683677415 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.365638222 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.370746347 seconds)
  done (took 19.854538496 seconds)
done (took 62.837472145 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.254247983 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.306421649 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.279347804 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.233227382 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.399412882 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.277846018 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.607118561 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.405457097 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.274113591 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.240783478 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.275182559 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.264700151 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.256822255 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.676320387 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.265096972 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.257997873 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.26577066 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.981960727 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.691199058 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.277835467 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.257726306 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.320720531 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.261456185 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.257556931 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.278123747 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.257945417 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.257060007 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.290142099 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.172492938 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.259503272 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.294827543 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.799972196 seconds)
  done (took 193.380758335 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.25434972 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.893030916 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.01600707 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.308609659 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.540438593 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.452821448 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.401732842 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.61273293 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.27725731 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.276178445 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.894870997 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.256731192 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.969489917 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.280622207 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.26433491 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.300377129 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.895776955 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.936394593 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.278382683 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.536461375 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.259609447 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.734676551 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.663361937 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.826680072 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.299768496 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.282025729 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.284049805 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.283736874 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.467832508 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.813985301 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.266542594 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.291410414 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951847049 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.120033021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.283434622 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.268378717 seconds)
  done (took 157.92945517 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.591655192 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.25704216 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.257896384 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257519393 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.293622535 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.257094049 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.877926638 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.907774067 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.810014976 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.641965366 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.956980163 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.627688187 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.259616249 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357552998 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.270620516 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.259504066 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.274651555 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.305460755 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.258150461 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259593354 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894982245 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.275310266 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.71405096 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.445876356 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.279885185 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294586747 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.6526124 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259593963 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294416554 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.602292558 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.317478891 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.258678092 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.746602791 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.616465372 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380312356 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262181612 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294996709 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.260874053 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.260015944 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.548253554 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26087513 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.26095575 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.264190107 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.024325319 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.263742028 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.260923656 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882181202 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.298676355 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260581825 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.260433018 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.260976237 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.670751394 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.149635754 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.284926688 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.259990459 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.259388267 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.263627248 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.260934035 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.261414642 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.297114566 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.640255605 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.361050662 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.282688853 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.26490941 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297504892 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.260453309 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.606968157 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.263257223 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.090916564 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.322745672 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.373243249 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886316285 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.262248865 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364358326 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.387900381 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.262227084 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.261903646 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.260625852 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262094772 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.262308568 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.375827494 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.262623779 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.738255064 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.449619362 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.283684239 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.954955922 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.366250103 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.263016782 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.759898202 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.265794062 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.262618918 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.180414691 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367919855 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.262582844 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.263055288 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.263249361 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.745550516 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.911345361 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.64853153 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.266233196 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.101751708 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.267164185 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.761730622 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.885300483 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.049971358 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.268104315 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378279811 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.450855066 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.285729009 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.263559574 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.939317211 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.267849612 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.324335154 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.265171977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.664683283 seconds)
  done (took 377.286417787 seconds)
done (took 731.375228408 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.918175433 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.904253643 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.024901491 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.898208692 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854733545 seconds)
  done (took 10.791608055 seconds)
done (took 11.988226577 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4776175 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477212198 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.333911297 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479791756 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296784845 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.49978266 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456775601 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.284131533 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.379119858 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.357456761 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380284049 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.325752078 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.295127105 seconds)
  done (took 19.235215625 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.623766437 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.602460001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.329201916 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.600355637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30611894 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604111235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479359212 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.497483403 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.490136645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302921752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278963307 seconds)
  done (took 17.30746366 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588983909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.619777153 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.331842021 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605838597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30602184 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606160967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474426536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.492681793 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499595392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.30534619 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27940879 seconds)
  done (took 17.303023272 seconds)
done (took 55.041843348 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.275060612 seconds)
  done (took 2.46730393 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.311599857 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.481950787 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.297110731 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.279264693 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.276597961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.276888005 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.279896036 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.27742124 seconds)
  done (took 11.675356179 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.272978119 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.272320978 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.274974375 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.272545327 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.274675406 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.273991385 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.275786107 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.274912675 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.275593139 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.272501187 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.276403643 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.272784764 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.272586909 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.273371761 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.275035484 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.273014944 seconds)
  done (took 21.57772394 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.275353242 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.273291037 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.273496594 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.273948991 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.273293189 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.273726463 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.27399951 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.273357381 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.274153894 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.272898442 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.275359597 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.273266884 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.274847553 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.27365853 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.273393755 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.274963352 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.274479531 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.273302009 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.278882295 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.274319468 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.275216231 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.274151956 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.274751787 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.274276325 seconds)
  done (took 31.779097721 seconds)
done (took 68.698234315 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.57508016 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.180180607 seconds)
  done (took 9.950508182 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277048759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.277249847 seconds)
  done (took 3.750598671 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.278009751 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.277151471 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.277694126 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.278045348 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.277466562 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.278544085 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.278799356 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.277093624 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.277312267 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.278793643 seconds)
  done (took 13.97440139 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.277547115 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.277638132 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.275730075 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.278358576 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.277402667 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.276075467 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.278071641 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.279391632 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.277653715 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.276189139 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.278766067 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.276343443 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.278660366 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.275973843 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.278819334 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.275955563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.275862539 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.276453907 seconds)
  done (took 24.187961091 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.280295159 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.279173778 seconds)
  done (took 3.756980505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.276563786 seconds)
    (2/7) benchmarking "second"...
    done (took 1.276792665 seconds)
    (3/7) benchmarking "month"...
    done (took 1.276855381 seconds)
    (4/7) benchmarking "year"...
    done (took 1.277023261 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.276472349 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.276806061 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.276835026 seconds)
  done (took 10.135700498 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.280578017 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.474389804 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.555313485 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.874946476 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.281134712 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.282868129 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.193621627 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.283104161 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.28484705 seconds)
  done (took 14.709328303 seconds)
done (took 81.665922014 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.357717176 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.296363759 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.558493808 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.29921163 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.29358471 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.574389363 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.31174327 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.405130153 seconds)
done (took 38.300070188 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.287217181 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.054388331 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.060402537 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.283622661 seconds)
  done (took 11.597749333 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.262820095 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.303070005 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.257674821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.407977251 seconds)
  done (took 18.431933009 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.396137017 seconds)
    (2/2) benchmarking "read"...
    done (took 1.614484392 seconds)
  done (took 5.210870594 seconds)
done (took 42.733393532 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282317461 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.281617983 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.278926804 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.279140531 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.282399824 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.278502031 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.279614243 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.281466316 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.282179619 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.282200674 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.282470186 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281073676 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278534909 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279328068 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.282392715 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282266336 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.279428201 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279073272 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.281435398 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279371627 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.279251698 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281698543 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.278576652 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.280039287 seconds)
  done (took 31.933398183 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.283301551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.280914269 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.28287076 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.282453839 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.27953054 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.282894478 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.283183505 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.279400532 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.282607958 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.282832111 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280388542 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.281569124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.283045434 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.280980285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284288922 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.281544121 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.283393234 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280717813 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283314039 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.281919828 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.284127604 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281181611 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.281183146 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282998059 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.282325033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281274392 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.283229028 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.282949197 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283928999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.281452356 seconds)
  done (took 39.66681125 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.290479446 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.292104986 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.284789981 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.283457834 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.284957891 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.285272685 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.284029934 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.285376367 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.283871336 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.285147359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.285140477 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.284568913 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.284023609 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.284296954 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.285300452 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.28472632 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.284706169 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.284718389 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.284770162 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.285945867 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.285685062 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.286707774 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.284982594 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.285389551 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.285484621 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.285565505 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.285773753 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.285660102 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.286334712 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.287185032 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.285859256 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.28535353 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.28715367 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.285433369 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.286481428 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.286253379 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.29095784 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.295502797 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.28670432 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.286496813 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.28646491 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.286888851 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.287555446 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.28719429 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.286690989 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.286744868 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.287061245 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.287869667 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.288051792 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.286822816 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.287321566 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.287701353 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.28797902 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.287743636 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.287568465 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.287694065 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.288370255 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.289104999 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.288619014 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.287772258 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.287715526 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.289274004 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.288834576 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.288296147 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.289019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.288897349 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.288225031 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.290456175 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.287855278 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.289533415 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.289839265 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.288481769 seconds)
  done (took 93.865035963 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.289724134 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286688244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286633076 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.286620565 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287133125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.289160567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.287052998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290436981 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28774195 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289459699 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28961556 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288087212 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286985922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289844721 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290223019 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286609845 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289409341 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287486825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.290013266 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28994747 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288975808 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287155987 seconds)
  done (took 29.552255063 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290975894 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292157993 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.28728559 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289510098 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2876843 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289452946 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291493825 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291018089 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289958606 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288050527 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28809144 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290890973 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288742017 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28797873 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296007728 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.289834051 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290863632 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289482821 seconds)
  done (took 24.428322134 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.288546184 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.289605771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.291622324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.288828433 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.290172053 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290770527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289598537 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.292285259 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.291366311 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.288725028 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.291587861 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291182315 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.291805145 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290358854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292589718 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.290140298 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.292180178 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289034982 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292547491 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289272359 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289402958 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292874224 seconds)
  done (took 29.603838401 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292895334 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292394509 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.290444986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290489726 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289796483 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291837063 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.292760676 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.290862532 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.293874771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.292299014 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290205955 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293721144 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.293090266 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292382552 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.291116988 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290001338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293969786 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292240737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293074607 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290920264 seconds)
  done (took 27.048497727 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294231526 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294637224 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294713618 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295165473 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294639641 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294326085 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294409576 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294832126 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294669235 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295180673 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294145962 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295757218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295201966 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294552382 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295483049 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295144882 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29572751 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295099338 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295696181 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295619048 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297093893 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295927124 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295420657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29631437 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295612322 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2964749 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29612272 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296386736 seconds)
  done (took 37.481429477 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296734008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295594588 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.293377944 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.293443154 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.294542718 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.294194348 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.293871874 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.293044352 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296222145 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293421383 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.29692049 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.296744978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296513153 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.297189363 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297051159 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.296334062 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297250574 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.294271936 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295060881 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29513305 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.297473616 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297484701 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.297552749 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294845536 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2956158 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.297728579 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294801216 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294778001 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297566503 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.296019227 seconds)
  done (took 40.084528509 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.316922631 seconds)
    (2/2) benchmarking "in"...
    done (took 1.317313579 seconds)
  done (took 3.849242791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.295686164 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29939712 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.298518351 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.295604631 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295994517 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.299013976 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.299183201 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294828977 seconds)
  done (took 11.593112227 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.298309454 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.299549244 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.299258617 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.299467578 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.298635251 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.297994074 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30560579 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.321680169 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.300359527 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.299900291 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.307753346 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.307444368 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.300943808 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298015933 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.298421832 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301116294 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.297967502 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.299412903 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.299001496 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.299801908 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298456101 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.300545182 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302014643 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.296764086 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.302599944 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.310554248 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.326000851 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.300174882 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300463533 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.304612507 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.300656383 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.297420413 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.300054731 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.30065634 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.300014498 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.300202319 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307806912 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.322432981 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.306694723 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322773592 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30057122 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.299383128 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.302237111 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.301991171 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301995833 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.300886968 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.301794051 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.29899122 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.300701489 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.304839783 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.308687744 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301245209 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.299151939 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304291047 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.30217458 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30893326 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.323939312 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.306190708 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.312855612 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.312838603 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.337257693 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.331657897 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305056376 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.302466516 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.314129857 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.328705155 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308726548 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.32411384 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.301080075 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.304292843 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.309813948 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338327198 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.332316811 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.302930184 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.304203273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.304771137 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30356908 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30412429 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31109798 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.329772159 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.3028889 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303542091 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314682531 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328328041 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.303874583 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.302924679 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.303726107 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.304433296 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.306392326 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314672194 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.325723421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.304843934 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.304603836 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.304711683 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.304854885 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.304145157 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.304158824 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304515531 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.302168921 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.30552904 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303348376 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309473262 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.313702592 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.304385646 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304721794 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.311930579 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.328506951 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305189268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.311035174 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.304778461 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305204975 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.307606644 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.310436914 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.303608991 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308925278 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.314430901 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.305657332 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.307343873 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.305556636 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.306307752 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315684523 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.333898227 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.306456161 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.306452533 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.312800931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.318931327 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307176138 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.30857598 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.306359753 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.304511974 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.304785611 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.308570475 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.307581018 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.308168298 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306088876 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.307973381 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.304423745 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.307070933 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.305996286 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.307707629 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.307664021 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.305962597 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.307315082 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.31015033 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.306451395 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.309932952 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.314429386 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.330137181 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.309166598 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.309821502 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.305555334 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309860867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.308435434 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.307614537 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.309526212 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308300073 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.309730057 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.30809291 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308560585 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.309646374 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308962167 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.310466423 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.314249431 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.308891874 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.31220699 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.309496968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.307120756 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.308540423 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.309466017 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.308591596 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.310165424 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.308488327 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.3130733 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.318390133 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.310526319 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.309645687 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.312152593 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309918639 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309934552 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309442031 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.315457462 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.319084437 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.310313223 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.316249648 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.332652722 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310066781 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.310606546 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.309966981 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.310890929 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310619211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.314656849 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.320583209 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323673163 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.33985692 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.313483228 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.315893829 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.313505362 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.316285169 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.316404896 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.311694554 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.31313396 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311929211 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311589171 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.31190243 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.314061057 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.311153364 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.310714159 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.31234786 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.312646504 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.311420529 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.313485067 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.312920232 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.312793331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.310330395 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312635828 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311952786 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.312226332 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.311174291 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.311752903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.312730454 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.313885327 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.312707627 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.319368411 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.311369772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.315025721 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315174096 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.312532856 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.312823104 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.313765912 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.314580157 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.312719321 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320713913 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.33695365 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.314801499 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320088772 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.336412047 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.314064942 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.316181264 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.314350151 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.312607081 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.317956588 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.323676569 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.315335926 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.313937592 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.314578704 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.315358536 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315080379 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.319546033 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.334922373 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.314148506 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.314892555 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.316342558 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.313673367 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.31623526 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.315134518 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.315728914 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316340011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.315516682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.315044723 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314703113 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.315144341 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.315426754 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.314891206 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319524621 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.324158152 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.320669792 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.316220865 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.318673237 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.316945597 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.319302877 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.316209255 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.316580238 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.316233669 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.328447968 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.344603981 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322072803 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.339700032 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.317126188 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320932954 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.341931645 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.321151988 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316669308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317170215 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.317033412 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.316460679 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.313809057 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.317574203 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.318431284 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317782368 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.320060448 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.322348786 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.318061825 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.316969623 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.317292416 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.317876078 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.318374485 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.317569396 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.318128784 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.320974009 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319525427 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.318477484 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.318061769 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324258388 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.34204309 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.319197424 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.317835684 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.317296795 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.317330592 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.319018076 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.318242593 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.323270523 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.327600617 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.322335316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.329602088 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.320312405 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329026092 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.318769644 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.323266417 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.327318972 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.317032891 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.318539879 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.31920964 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.319046857 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326635764 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.341548032 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.322365987 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.324209352 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.32016786 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.319648005 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.322264309 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.320084678 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321121652 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.319969599 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327688782 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.344351323 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.324608055 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322847414 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.318068273 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.319919311 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.322414585 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.319889629 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323135806 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.321092184 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.321425318 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.319895939 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.320860593 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.320765041 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.320409898 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.32229574 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.319176258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.322440031 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328086962 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.346346253 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32541183 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.322423729 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.328348827 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.344566085 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329073293 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.345423928 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.322219423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.322186534 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.322503794 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.323793382 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.322424665 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.322612927 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.322087832 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.325037386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.327037063 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.322112244 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.325564076 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.324087224 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.322784655 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.323438115 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.333694594 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.349552463 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.325627611 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.328741334 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.321269507 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.324947774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.32831642 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.322739143 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.323184892 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.327376032 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337001537 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.33297802 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.323642775 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.323413142 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324918801 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324796527 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.325375172 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.325165936 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.323687441 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.325068522 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.326678708 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.323687833 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326920687 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.324172418 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.324727222 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325957876 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.326455939 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.333992586 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.347629141 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.324290581 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324750116 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.327319613 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.324123946 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.324568905 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.325039697 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325446252 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324877586 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.327238367 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.333011498 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.332692267 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.328533404 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.3249878 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.324914573 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.325812932 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.32686717 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325994027 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.326035957 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325211316 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.326821292 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.325782631 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.326182144 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.32479209 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.327038265 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.3268107 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326455418 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329047892 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.335420796 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326804051 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.324292719 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.326864929 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327371013 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.325845461 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.326402106 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.333267992 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354287333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.339752609 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.33837383 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.331831692 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.327333755 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331032095 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.337346315 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.326722827 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.327577015 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.32750361 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.328435926 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.3286954 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.332224765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.328311548 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.334509895 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.351201604 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.326869682 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335559986 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.350486565 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327847232 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.330858852 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.333474857 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.328809336 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.325881189 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.329374724 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.329270433 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334541749 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.352792288 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329080468 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330702406 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.329418929 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.331005855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.333151263 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329622563 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.329070119 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.327195162 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.329812148 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329596331 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330022944 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.326937747 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.329166765 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.330256513 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.332921334 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.337274922 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.32793807 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332042459 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.330033239 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.330171092 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330604555 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330211375 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.327652902 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.328634092 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.329922289 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329956431 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.330434004 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.332687908 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.330673196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.332351902 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.332794194 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331301188 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335820095 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.342802848 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.340066542 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.329234018 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.331333289 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.331570819 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.332861626 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.331262412 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.331415764 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332109583 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.331582352 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.331049962 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.331551071 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.331330627 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.335152388 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347268919 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.354198126 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331424792 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.33272273 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333593473 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.332584165 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.328267881 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.332776032 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.334489901 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.336875467 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.341038084 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.331722466 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338115493 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.353756562 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.334758558 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.337863061 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.336270484 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.341299598 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.335733847 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332820685 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.332943828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.339831674 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.351240291 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.333417031 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.344048383 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366433434 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.357132326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.334745782 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.333418454 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334217717 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.333138788 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.336338063 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.33354476 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.334362965 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335095595 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.334299482 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.335521536 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340792511 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.335090751 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.33564395 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.333898573 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.33324564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.335522046 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.332211933 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.334500278 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.33602486 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.336091828 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.33692528 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.336873465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.336494329 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346273227 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.366011531 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.335753873 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.334906472 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.333394704 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.339792787 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.339559793 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349471637 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.345086237 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.335165469 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.335188422 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.336811472 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335818108 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.335412132 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.336121723 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.336798807 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.33573825 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.33387401 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.348687714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365278745 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.340470199 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.335090548 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335639485 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.338023297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.336727439 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.336757226 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337311035 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.337048707 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.340929832 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341198884 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.336984782 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.337773243 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.341632281 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.347664762 seconds)
  done (took 788.718281749 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.335966449 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334982217 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.335821188 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.335084741 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335263375 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335429572 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335613887 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.336296681 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.336338306 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.335580595 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.336196275 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336263185 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.335829721 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.33606818 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336657712 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.336660127 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335986073 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.335906213 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.336451042 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335698328 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.335634688 seconds)
  done (took 29.306951625 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.339063974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.336798462 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.33648546 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.339245641 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337199337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.339551863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.337260154 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339530214 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.340158578 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336639355 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.339455114 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338807541 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.337139098 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.336902873 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337319572 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340089551 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.339340229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337470946 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.339408373 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337871346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33913818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.33775294 seconds)
  done (took 30.696968566 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.339665357 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.340072222 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.340077041 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.338002508 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.339344443 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.338154323 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.339795475 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.340629428 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.340351394 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.341336459 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.339801055 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.342200989 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.348186969 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.348280096 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.341706027 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.341409985 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.485261206 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.339202126 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.3403115 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.342424933 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.338102643 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.345680796 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.36101375 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.339608841 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.339589687 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.340978013 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.342555947 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.3414367 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.341490873 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.343348911 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.345716334 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.344291489 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.342015097 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.343745214 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.342067777 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.344108095 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.347647143 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.342337098 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.341560422 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.343549906 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.354415874 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.365854456 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.342099513 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.348478962 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.364923849 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.343080492 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.34742619 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.352368841 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.339690198 seconds)
  done (took 67.251450379 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.344255949 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.343408608 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.340421267 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.345121774 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.344442958 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.343465639 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.342768199 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.343483408 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.340143235 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.341370473 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.344175081 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.342044714 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.34201698 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.345337586 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.345862914 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.341800171 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.342803749 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.342948863 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.342322776 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.342304719 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.342676132 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.345961938 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.345647182 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.343750869 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.345572055 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.343234783 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.344159827 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.346462889 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.343418095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.343114501 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.346396286 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.345672229 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.346403346 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.342717081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.344341897 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.345830453 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.346212546 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.34426071 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.346260175 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.344103263 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.346550362 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.346718892 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.34751016 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.346534566 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.343758219 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.343866022 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.342807192 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.34474431 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.343889889 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.345534281 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.346699192 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.343462985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.346754787 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.343616462 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.346670711 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.347177914 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.345200129 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.343079423 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.34684284 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.345063268 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.345136322 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.347982251 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.345374119 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.347165864 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.34826881 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.345514076 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.345545358 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.3473519 seconds)
  done (took 92.695365017 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.347438221 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.346640619 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347057677 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347590042 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346929215 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.347526893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347758108 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.345721358 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.346720485 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.347273659 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.347873228 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.347926069 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.347719596 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.347918442 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34657214 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.347221311 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.347031217 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346990034 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.346102239 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347134913 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.348149695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.347909856 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.34739283 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.348070768 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.348641564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.346683216 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348155652 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.34856356 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348961429 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.348858403 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348777843 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.348248354 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.348513103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34859404 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.348839692 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.350024082 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.349378121 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349129434 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.348534323 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.349719564 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350699548 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34864635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349869273 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.349573903 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349382572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.349252455 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.350667173 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.349940341 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.349856584 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.349729799 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.349314452 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350094373 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350247961 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.350023574 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.350149225 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.351189202 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349446002 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.35140747 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35004023 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351002244 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350556724 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.351912771 seconds)
  done (took 84.880546213 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353300272 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.350618605 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.349065416 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.349499369 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352787551 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.348974326 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351708238 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.351722553 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352142838 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.353333509 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352537414 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350311203 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349394227 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352379837 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349790647 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350205596 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350402421 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.350858617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353300637 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.35029601 seconds)
  done (took 28.288782201 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.350064087 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.352837163 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.350983135 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349339273 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.353019996 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.350469679 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.353028864 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353516235 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349593067 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353244259 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.35390449 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354652157 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351871514 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.350334439 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.35359877 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.351191899 seconds)
  done (took 22.898287563 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.351234671 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.353207374 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.353276953 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.353508489 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.350780609 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.35163595 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.354227381 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.351563726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.351146655 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.355829939 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.354639998 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.353764004 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.354754341 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.35249551 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.351870758 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.355268462 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.351032668 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.352228252 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.354196284 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.354275558 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.353705916 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.352121624 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.355666515 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.355123141 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.352303383 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.352777042 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.352330605 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.352712521 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.351850203 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.355398921 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.353006195 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.352824794 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.352372287 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.354094919 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.354471298 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.352908519 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.357025324 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.355401961 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.354695074 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.356167154 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.356276448 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.353165368 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.354953442 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.356351119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.354042269 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.356448857 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.354772579 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.35449145 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.354208751 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.35447857 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.357122002 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.355703289 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.357043594 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.358296358 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.357109537 seconds)
  done (took 75.741839327 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357179686 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357884283 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.354050854 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.356799312 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.356430628 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.354731808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.356911655 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.356025517 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354026247 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.357548841 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.356953429 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.359210446 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354421791 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356999379 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355396901 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357717822 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.356360286 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.355347932 seconds)
  done (took 25.684299358 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.356692305 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355796687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.358983476 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.355804558 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.35535378 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.358454662 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355607613 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.358555097 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359533824 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.356665021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356427396 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.358899288 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359066385 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.359481169 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.356891733 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356081062 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.358740683 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358910269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.35776118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355891532 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35854577 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359404895 seconds)
  done (took 31.139452599 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.358629815 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.358357102 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.357980396 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.375784877 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.379990837 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.384123999 seconds)
  done (took 9.48856262 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36899539 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35958005 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358279856 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361966445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36081283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358046809 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357935929 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3585804 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361315561 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358561158 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359110797 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36112945 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361281503 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359110578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362006269 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361667694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359756716 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35829451 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360160462 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360945662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359214878 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361375069 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359263226 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358933418 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358134875 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358851599 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361413391 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360545811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359448803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360589905 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361945975 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359374279 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361281885 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360658775 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361956081 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361917484 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358770809 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363098771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363110667 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35966315 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.362515114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363591113 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363033681 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359796043 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362826016 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359445319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360400528 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360023564 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360603558 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363259647 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363223765 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360554596 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363503645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362930568 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3624368 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363637256 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360739824 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359969845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362678753 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361758794 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360492408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36484591 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361306331 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36102763 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363584497 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360326767 seconds)
  done (took 91.12544964 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360933063 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360526861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361857144 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362167895 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36130907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361632046 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362252197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362346096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361846041 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362997398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363774874 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36282072 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361820938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361924385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363034962 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362434572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361876186 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362516141 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363649777 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365233672 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362306465 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363949103 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363400285 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363113955 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363166393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365056004 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363587505 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362960116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36323574 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362159166 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363077865 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363588399 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363449769 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361961369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362593961 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363217007 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36317481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364104184 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363599886 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36636534 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364413226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366433469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363200932 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363764809 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364921661 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364657912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363561749 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364224997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364672711 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363431341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36406885 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365489202 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365881259 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364364974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364091851 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364560947 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364992818 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364585037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365119843 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367429351 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363870542 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365246194 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36819704 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368391956 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366828476 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364427714 seconds)
  done (took 91.285092972 seconds)
done (took 1839.513764247 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.447802685 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.373636196 seconds)
  done (took 14.102478469 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.531915469 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.483771182 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.366371368 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.364479178 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.367263197 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.401983792 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.397067182 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.367243167 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.366471344 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.367957699 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.368137575 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.557187667 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.37145725 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.368216778 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.367708617 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.463828503 seconds)
  done (took 43.804459121 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.398615999 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.373104097 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.506962021 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.39225139 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.396826049 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.592943127 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.438301187 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.373432578 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.577028813 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.418549718 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.202936605 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.398748949 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.371542991 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.676813546 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.394744932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.591442891 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.667549796 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.208517701 seconds)
  done (took 32.263521802 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.931973568 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.40402433 seconds)
  done (took 9.619825628 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.385734003 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.36468025 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.378461606 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.409306779 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.391082134 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.421834629 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.747823899 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.786840084 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.398272002 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.465285099 seconds)
  done (took 66.04502507 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.396614417 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.373565636 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.374383643 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.372077417 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.364998699 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.364964461 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.371723439 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.365872834 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.858599077 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.527576349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.374814157 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.381931493 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.395573854 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.375224507 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.371468956 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.413234451 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.55569525 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.372490811 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.370178103 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.378660565 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.372759359 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.473110335 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.422864299 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.371872117 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.5243482 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.851971571 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.382390343 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.380630231 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.532296937 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.374207668 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.37400269 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.37392827 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.375242587 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.018156423 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.901682481 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.390960394 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.423862715 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.382970511 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.372104504 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.524491969 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.377160442 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.380013347 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.379663663 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.889394916 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.524848578 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.508441701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.914015812 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.399307335 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.376841056 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.444309019 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.376958205 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.377216808 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.409413946 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.218672344 seconds)
  done (took 116.046314795 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.404330796 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.760082952 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.539673863 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.395305147 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.076884815 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.140851202 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.395525516 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.714551497 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.432304259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.369597577 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.724005504 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935869603 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.395791497 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.380987345 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.009707138 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.432244538 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.369761724 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.174902207 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.388524187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.37165408 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909280992 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.370419845 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.393684162 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.559515152 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.412715209 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.882558505 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.166344425 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.727974042 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.39742161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.372212204 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89103461 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.394828463 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.381190295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.37308302 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.661884554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.789976547 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785201164 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.394469143 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394669524 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.374083832 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.40202937 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879012901 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.793559278 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.391373681 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.390891363 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.904421899 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.391192103 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.37134383 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.371952472 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.579600791 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.013851442 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.371773312 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.045963036 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.373385602 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.775773852 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.418884176 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.438357765 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913396894 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.392099452 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.449733665 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.3940606 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.371961721 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.375471038 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.378218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.373239873 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.777812735 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.509418811 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.378371002 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.776283169 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908459564 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.393200185 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9516924 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.313381338 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.389163618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.483998428 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.372998807 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.984645927 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.928828523 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.418373598 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.372816394 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.763251178 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.395166139 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.723482727 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.39497986 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.37349129 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917557161 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.374482921 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.437924599 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.373792102 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.373332282 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.996642091 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.374830638 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.692447319 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.403237048 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.373762366 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.372254274 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.412629875 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.390072592 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.379841316 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.376008092 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968630834 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.403655426 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.375522649 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.396219634 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.375678983 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.376109071 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.3772615 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.376162124 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601069246 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.835296374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.397320776 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377050391 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.375079028 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.375378455 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.555046909 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.381471939 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.740665084 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.398429764 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.375439485 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.39734948 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.140052858 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.413705538 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.376624016 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.375950327 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.337976984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.590844925 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.398859341 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.39805832 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.377205049 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.396716914 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.832434604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.399769504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.405021713 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.378350659 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138480246 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.40569273 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.381483672 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.675775272 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.38624375 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.377145756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.40766716 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.376870001 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.699763683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.672459623 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.422379826 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.382669903 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.379450901 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.109977437 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.42318479 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529114042 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402472105 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.419359319 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.58052134 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769006387 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.380725013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.027966611 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.377263795 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59913258 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.379659407 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712242983 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923548523 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.399632438 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384521066 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.134468409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.116841698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.071918365 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.382594215 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.73358953 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.359407973 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.856058815 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.378901782 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.379903309 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.80517664 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.382429651 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.380439354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.380179482 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.37994475 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.528671845 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.558242288 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.72663453 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.387085617 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.888131108 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.425511137 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.380746339 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.383676043 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.384356304 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.729254245 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.466148513 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.383547139 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.382781901 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.381463749 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.38759112 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910522864 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.334758645 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.382192287 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.537620225 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071495178 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.40135642 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.382455444 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.025957335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.692734973 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949987792 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.460587124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.747141516 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.404668955 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.423523329 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.010912545 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404079351 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.912278738 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.405417132 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.381138299 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026561042 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.401885714 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.741125285 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.382700509 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.382881495 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99355748 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.402833085 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.381744503 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.837844126 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.405202923 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.638135448 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.383049634 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.422959694 seconds)
  done (took 1124.543050059 seconds)
done (took 1407.711530852 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.383208679 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.384383188 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.371802101 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.388841687 seconds)
  done (took 26.828602038 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.394369905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.39026733 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.389781444 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.390186666 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.393256695 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.39034308 seconds)
  done (took 9.650834714 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.557400481 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.389727529 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.389742265 seconds)
  done (took 19.638940612 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.628518282 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.996083985 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.805641406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.058817031 seconds)
  done (took 11.793754638 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.391764177 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.390950881 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.391624734 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.39273168 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.394961876 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.396126668 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.393931037 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.393015449 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.395979436 seconds)
  done (took 13.841805916 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.094473827 seconds)
done (took 89.15557905 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.82070618 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.400303478 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.436139876 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.830953688 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.758194658 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.407318846 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.13317947 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 6.385657945 seconds)
    (9/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.820233681 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.447760841 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.693764287 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.382656214 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.407082582 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.877675787 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.426269934 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.389209584 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.41958389 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.808426229 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.179874651 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.489135786 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.108552976 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.366520147 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.246845476 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.1424799 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.40599843 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.39662985 seconds)
    (27/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.582600235 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.177102281 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.077989109 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.020544499 seconds)
    (31/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.784425906 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.699005532 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.515260625 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.367441323 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.257342471 seconds)
    (36/309) benchmarking ("sort", Float64, false)...
    done (took 5.825497929 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.378761564 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.494939075 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.309116237 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.437319796 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.76876669 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.388277637 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.434014462 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.287837687 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.413049968 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.473075661 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.367655367 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.409216811 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.414853683 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.409541146 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.369071896 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.513946523 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.719909999 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.369370304 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.283808869 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.810168988 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.519259635 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.668277765 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.404215264 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.387898311 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.462884359 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.541470005 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.389344781 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.390088479 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.419830794 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.406193224 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.445975839 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.419264675 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.94125647 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.340615623 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.473739177 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.371130945 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.913341265 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.950602625 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.371076127 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.500827347 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.41359916 seconds)
    (78/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.937212792 seconds)
    (79/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.802864707 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.738151652 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.387733305 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.394312708 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.722041112 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.391767363 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.497129685 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.840655203 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.348561133 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.374874786 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.538247143 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.409716862 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.407648962 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.399163149 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.065001517 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.0051186 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.829574315 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.143909642 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.485343392 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.472221215 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.7163941 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.410564944 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.478536154 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.43585441 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.390811452 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.922330363 seconds)
    (105/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.303689788 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.373101201 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.476481728 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.613102469 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.455153948 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.418120281 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.501978635 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.391517921 seconds)
    (113/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.40694689 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.377410047 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.412325617 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.430417656 seconds)
    (117/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.333538566 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.373936131 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.430626323 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.061283819 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.249702644 seconds)
    (122/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.521665665 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.374894806 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.411262242 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.382020815 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.395729985 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.929437762 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.43817214 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.665358457 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.454677995 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.414860731 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.696556838 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.395797607 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.437412689 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.392577393 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.440203297 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.919401091 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.404611043 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.294250491 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.510638001 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.308577302 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.663811262 seconds)
    (143/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.738729327 seconds)
    (144/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.415668017 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.384888419 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.686440117 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.386552692 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.526320721 seconds)
    (149/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.375197014 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.122125672 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.386236774 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.390461668 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.459800166 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.464745071 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.637637318 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.44129643 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.699215192 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.316456714 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.486270908 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.422089959 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.599736893 seconds)
    (162/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.61973774 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.372779505 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.212857229 seconds)
    (165/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.234441689 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.519322052 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.073727387 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.954530405 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.400498523 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.396136986 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.426045952 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.376679375 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.448334665 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.944922304 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.41505101 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.975843961 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.377188848 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.442573501 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.41182176 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.377487528 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.424135446 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.397760872 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.396179452 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.377656417 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.424229429 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.501555816 seconds)
    (187/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.4052523 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.376903862 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.399448097 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.439967922 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.377123264 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.378773641 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.430421407 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 5.463715372 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.37782102 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.401565152 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.348198564 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.463098507 seconds)
    (199/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.950194253 seconds)
    (200/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.426315538 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.454544966 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.456463811 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.069134403 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.466927966 seconds)
    (205/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.481057539 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.456979148 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.399024628 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.409406683 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.379079973 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.472138816 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.044452775 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.599823846 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.775878768 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.426886849 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.355586338 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.265760774 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.521225634 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.421573655 seconds)
    (219/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.597762836 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.43354998 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.441220503 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.334152951 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.806979271 seconds)
    (224/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.533795982 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.41717374 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.41673603 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.858923276 seconds)
    (228/309) benchmarking ("sort", Int8, false)...
    done (took 4.432795498 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.30254865 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.400376144 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.426806788 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.440656146 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.4840479 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.319485425 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.191176622 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.50254819 seconds)
    (237/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.831605724 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.991804267 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.381820138 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.402088722 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.411727311 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.325815237 seconds)
    (243/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.833885822 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.473432969 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.382809294 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.549711161 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.844423411 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.506049277 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.982033044 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.383169881 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.643059229 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.451133909 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.381638801 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.448871985 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.48486749 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.372488763 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.382311673 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.01765087 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.429543992 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.785601762 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.067133413 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.429444264 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.791049293 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.123385973 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.794608883 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.433515181 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.541198044 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.190649052 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.297930393 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.221810167 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.465706495 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.373381639 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.421774194 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.423989897 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.099753279 seconds)
    (276/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.36756534 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.063042742 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.391062034 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.450501636 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.43659018 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.178807159 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.492825077 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.403608106 seconds)
    (284/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.404761702 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.487842492 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.402889561 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.31729781 seconds)
    (288/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.614636234 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.518840189 seconds)
    (290/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.50691771 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.488601991 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.429783515 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.247077207 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.163383856 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.279839043 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.168590615 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.210707223 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.423758283 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.385157379 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.469774831 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.17247072 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.405964321 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.224221045 seconds)
    (304/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.62412248 seconds)
    (305/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.509291246 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.427614018 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.472950948 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.38527758 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.710554602 seconds)
  done (took 1078.294614037 seconds)
done (took 1079.604694027 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.440645099 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434941122 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.417222611 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.43811557 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.528450685 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.43975427 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.428563782 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.420037804 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.465850979 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.468112083 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.416781255 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.439303326 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.419482207 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.418132822 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.417558434 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431870862 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.636876249 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.418873915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.434706791 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.427548885 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.433836104 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.418080524 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.466834576 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.439317488 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.422010021 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.422388349 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.423658399 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.438488792 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.530353333 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.421446889 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.421752108 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.430629966 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.636505564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.418484002 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.414142907 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.438755216 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.429990769 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.429756029 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.422738611 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.452422701 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.12418234 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.440103026 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.421475799 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.419883474 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.421197131 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.424490612 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.421577394 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.426618895 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434331184 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436642151 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.116706233 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.455471855 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.425014527 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.422331934 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.431716165 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.420725127 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.424921624 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.438135046 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.441211147 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439281717 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.62776698 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.426737893 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.422722829 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.437946584 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.42760082 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.156092165 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.437889686 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.425630468 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.128471585 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.448491649 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.15450344 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.451209032 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.423599671 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.435287488 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.453132689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.640950647 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.418148599 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.421508919 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.429809783 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.421656758 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.432466913 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436446666 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.428068763 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.422700023 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43835154 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.444636244 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.433040163 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.424844849 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.432820283 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.442331719 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.431172954 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.43384032 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.427065495 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.41909885 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.433733697 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.428112494 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.42751813 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.426743994 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.429023368 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.43522945 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.12926566 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46324645 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.42082638 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.421430045 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.423701987 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.438500587 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.130121777 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.445754268 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.446408248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.472033054 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.426624421 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.633566212 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.428701648 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.442953095 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.436631207 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.429779729 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.41998521 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.635227867 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.125334103 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.462428724 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.42876072 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.424481714 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.443695657 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.427291587 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.42218247 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.650687307 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.427415925 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439656944 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.547483459 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.437004402 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.455868955 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.424192246 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.429558509 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.447923111 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443463915 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.457625289 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.429147082 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443019332 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.442569202 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.422681515 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.437440884 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.436543775 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.427351555 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.433307364 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.419915147 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.448799333 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44044585 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440337228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.44778999 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.547728921 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.425522387 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.637303377 seconds)
done (took 242.811442995 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.488766072 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.415617014 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.513986451 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.422319689 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.526898414 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.525473712 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.419226735 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.420750757 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.42104619 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.800839601 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.421317015 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.42129955 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.415851851 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.421034611 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.503422103 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.422348188 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.419190373 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.812901451 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.422335462 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.492971409 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.421868916 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.421026525 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.422152069 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.804792095 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.42030616 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.421926079 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.494034101 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.424196575 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.767429511 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.420305442 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.421989496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.767994121 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.512467034 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.440364865 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.434215837 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.431217777 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.529007155 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.446509869 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.505154427 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.504190046 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.515796936 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.462046542 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.419899871 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.423509941 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.426174755 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.425130391 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.421806415 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.451536826 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.423067074 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.424723184 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.817172656 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.435473704 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.422724505 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.423882975 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.422261198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.453878502 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.424337285 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.426653468 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.514815672 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.42577504 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.493259597 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.806263617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.80338811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.425160115 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.428150584 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.425328927 seconds)
  done (took 154.594194887 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.494207591 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.498744027 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.548881877 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.44677456 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.476799541 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.55438849 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.44767552 seconds)
  done (took 11.801816059 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.432255985 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.427298946 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.475930032 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.477034991 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.425721392 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.574156321 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427034339 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.438444699 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.424717166 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.47947295 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428861409 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428315495 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.43437636 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.428873145 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.475933223 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.438006687 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.542400802 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.427797104 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.428393239 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.583281187 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.425688985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.434465447 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.480149836 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.438733983 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429667255 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.433860277 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.991894391 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426747993 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426166088 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.428272012 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426574309 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.465776175 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.42836608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.427283558 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.425139929 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.544123917 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.427563679 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.427307229 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.430316612 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.427342179 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.429493132 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.430122069 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.429071551 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.426787972 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.42923831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.452583645 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.429771832 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.428847163 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.429723845 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430313411 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.480147604 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.429793939 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.427757243 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.4284326 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.484828001 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.435741293 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428890854 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.428495612 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430669957 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426457577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.587186627 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.47792922 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.430666872 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.47738378 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430202243 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431161151 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.430401991 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.431088074 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493039036 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.43047688 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.478915149 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.42740415 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.584567436 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.453895132 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.433931072 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.432491593 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.432691842 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431085139 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.426168966 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.44229374 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.429173333 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.43258902 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.436703958 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.429006848 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.428783531 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.534471024 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.541196086 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.429648133 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.444312656 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.439163489 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.429134529 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.485202183 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.433403953 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.43036158 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48427079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.548010147 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.485254712 seconds)
  done (took 162.602921021 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.437316577 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.440376933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.434818251 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.449093986 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.432310304 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.433831278 seconds)
  done (took 9.968081686 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.435794339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.435884427 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.433501964 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.433066528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.433145944 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.434990859 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.434660379 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.436082197 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.438054634 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.433807584 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.435212517 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.435055847 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.435081734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.433451338 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.433384046 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.433470231 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.433447993 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.431694413 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.434733645 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433984713 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.530245037 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.433025106 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.43445672 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.436222129 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.439867645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.436058729 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.442431017 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.434644448 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.436111404 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.438855609 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.458606759 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.436140117 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.437922903 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.442067366 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.43821473 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.437164397 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.439777474 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.437433197 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.432954585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.436630215 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.436921065 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.434452793 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.436238937 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.436350177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.438491047 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.441266007 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.440382063 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.444105872 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.434916867 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.436996309 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.436987118 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.4360027 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.437294472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.436742017 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.438003414 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.462061477 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.441207634 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.436138679 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.435962648 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.439052313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.439338081 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.438357553 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.439485874 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.440613181 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.44433726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.437652584 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.439740932 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.443253406 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437934902 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.438553948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.437721489 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.435614507 seconds)
  done (took 105.944008008 seconds)
done (took 446.248329165 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.802607861 seconds)
  done (took 8.147681079 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.756042241 seconds)
  done (took 8.10388889 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.167732166 seconds)
  done (took 27.51931903 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.543876305 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.441465721 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.459214275 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.436531326 seconds)
  done (took 27.227624858 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.768254815 seconds)
  done (took 8.11436331 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.432006206 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.447221038 seconds)
  done (took 14.225838359 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.831532283 seconds)
  done (took 8.176990866 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.479072673 seconds)
  done (took 7.832236136 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.432073791 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.958055462 seconds)
  done (took 14.7508157 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.428654417 seconds)
  done (took 7.775645254 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.92847884 seconds)
  done (took 9.275223571 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.447198378 seconds)
  done (took 7.794317936 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.48543957 seconds)
  done (took 7.830022457 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 10.184922083 seconds)
  done (took 11.530541166 seconds)
done (took 169.657352287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.433619339 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.434578887 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.435432027 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.433434949 seconds)
  done (took 27.083558115 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.472810094 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.473523415 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.475204801 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.483962834 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.477280635 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.47450463 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.46682486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.464698325 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.483386668 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.476929697 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.476161297 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.475192659 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.474396828 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.465767649 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.474280019 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.476998911 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.484166264 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.475421429 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.466543664 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.478105463 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.440910964 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.484567755 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.478855317 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.442230782 seconds)
  done (took 36.691370461 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.961096607 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.513014526 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.594310579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.49413131 seconds)
  done (took 7.911646019 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.49417878 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.495518985 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.507322633 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.544765908 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.578103766 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.505362468 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.468759796 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.463245467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.448587208 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.495523178 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.571051602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.510448303 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.590096229 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.442024628 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.623785722 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.441918222 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.441127813 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.494669463 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.545513635 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.5610939 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.442445045 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.493988582 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.497992815 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.511377509 seconds)
  done (took 37.518384355 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.443325949 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.461056148 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.441995841 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.442245853 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.451265603 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.442568175 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.442957433 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.443274296 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.44297924 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.448199144 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.442694628 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.455831959 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.443137416 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.44206345 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.450944083 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.445243513 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.449730262 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.443683674 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.443017991 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.449772625 seconds)
  done (took 30.276550054 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.437406834 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.315734841 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.78976578 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.694867791 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.437264109 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.437098391 seconds)
  done (took 29.46217781 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.532441129 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.712526405 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.444693543 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.915076133 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.021714286 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.470320277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.444817533 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.735330666 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.161587068 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.159416333 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.518918301 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.528029757 seconds)
  done (took 21.997800103 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.449315362 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.443180929 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.453161968 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.458208839 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.513363128 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.469689106 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.451771936 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.438310313 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.520166307 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.539656612 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.472260494 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.513280907 seconds)
  done (took 39.075559197 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528338653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487365843 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.612198288 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44214038 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220194439 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653125525 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.47321588 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951419341 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.444317382 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714440377 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445691895 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531550512 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698628812 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454162882 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446435474 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.611683616 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689890415 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01212318 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44346785 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.284339891 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472680892 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441375808 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.335655088 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.481110682 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.65432462 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.589964711 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.705164741 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.218987936 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806484058 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45540667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45296401 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442100718 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716326098 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192082971 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561998164 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45225745 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454979 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.991077413 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.423620771 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.263366944 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452767934 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445619118 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453491785 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443342575 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.376832429 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456344687 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969679353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.448927269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.156039055 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444363649 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45549058 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538710509 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.447981193 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.017270958 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.517694235 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.450270418 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.441638444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543367537 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035656697 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.594025554 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464019499 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.385534287 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456413197 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.207807004 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190082062 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.568767316 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.44877888 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44928295 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393804494 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.186912967 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46718649 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591828016 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.466827393 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138080388 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305383848 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.484054721 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.39008415 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076684706 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448663187 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.386022431 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674850435 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224458842 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386097503 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.39310964 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.380215285 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287341717 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454718263 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.983989874 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46487371 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957174582 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.457874099 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463260808 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471098874 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66997967 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.324282829 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44600451 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.446486403 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599690603 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469260544 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.942283324 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392750996 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.44988905 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704539076 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.65785095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46363236 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.633248878 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721008025 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455320544 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.469684179 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447714154 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.484417451 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.135609103 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482582826 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.602053523 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464175961 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.226417736 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302067614 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461919002 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.556198184 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.464810043 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734399161 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.326576267 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.608970048 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515636119 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454063486 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448708647 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306319375 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053626151 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.607922798 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.444771172 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465084528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465997287 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.448876691 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448694325 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.451244955 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460340485 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.228932314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673716367 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448806468 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750152791 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383385964 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597405069 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497815307 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.672715119 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.862333155 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.471534598 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711995974 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463590586 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473972412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470798243 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468901216 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551487047 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471963306 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.46291578 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.715594002 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.454072323 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.454209437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341299989 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.234911404 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459573578 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.456176293 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453691905 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175711178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465594191 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455899105 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346109176 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.465930918 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519039026 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.458308992 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46250798 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.739033759 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481433811 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.480292179 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.448627485 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677598779 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462650107 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.256513086 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5350768 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.694641465 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157655595 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488278564 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.386728339 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.163869425 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.144640332 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452655925 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64346129 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.453125543 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462969413 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464088172 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.476168729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148410019 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475234072 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.245750755 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.465061677 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463192954 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.457871092 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454109666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.736779032 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932912726 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462738844 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.470024631 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597513327 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.468707224 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.387153784 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.970790273 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459675266 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.453919709 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.230511582 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488427486 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.24093523 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99112799 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715929933 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454175409 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466914677 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.388004407 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.499599649 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.458859259 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462606036 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456501217 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.463980593 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485576014 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.465614031 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.354779581 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.869451244 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02118538 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319641825 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138354861 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.560185987 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.460763215 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.34322936 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.961498368 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390071535 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.116674424 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685711586 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967728417 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45127161 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705452238 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.863311028 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.400631534 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4678091 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685585548 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533685305 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.471784842 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469765588 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668877738 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489985904 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.466785422 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402822275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.738218746 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756760246 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461731233 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53539126 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950405705 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475925631 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.235631138 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.530162943 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.999803577 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68870753 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004896699 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887604221 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467374591 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.462414458 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986963916 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.461791632 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987808489 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185271395 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.484822655 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.711241003 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399291795 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.468361589 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.469768792 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.454989293 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.162261429 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.472517303 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.715753283 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469838407 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393388108 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467009255 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106221028 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.336461329 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.465781605 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45998221 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343500631 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480546602 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824844672 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.471759426 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.655477921 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486598752 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.394545738 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394360286 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.152108354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.470840216 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444813942 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046897101 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.465605121 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482790277 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.474016307 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31622515 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.719274553 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.474839303 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164382518 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710093807 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479734147 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483275192 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.562153115 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460137775 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.444168096 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.349394025 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696672399 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488824633 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686272975 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.634697532 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.361783135 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482104999 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.698156071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.363986349 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481568731 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774303075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.199913775 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.46839008 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33382595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5087902 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.475442913 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511279299 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.468045276 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482613924 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556340482 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473620083 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.473392333 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.474498456 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672505586 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462869866 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.489060211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.477600264 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557598263 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.65171858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.655286666 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.236943905 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172721296 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363518644 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18031532 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498521738 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464204426 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463245322 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409948061 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615210154 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992591034 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736642058 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591546371 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.486104309 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48693006 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46328958 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479937821 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67895174 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739557861 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.439596479 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463582862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259491051 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.346207959 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476572156 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.676132234 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052257587 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114034658 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582141834 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.478008225 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.971144134 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738594901 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.5580871 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464400718 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061484631 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.47456036 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.97475725 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.494094125 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46615089 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613287502 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476105152 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212007872 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.498865239 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.624769629 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.23949549 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250786907 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724896722 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.019266061 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.478811694 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173637181 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32562141 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731135605 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537146685 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477096608 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.585480025 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614971353 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.466276444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.349634167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467534139 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315935488 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.177619674 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.477656597 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172672733 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754781621 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.465084073 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.466344626 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490299386 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.477376208 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.692342648 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292901523 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.692582381 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479048312 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.476776636 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.042799117 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167492674 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504936994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412643194 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.470922899 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777016377 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.735569589 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48930711 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.921824411 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.178879424 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099585878 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.445544306 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490623069 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469960611 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298333257 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174935751 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.694738999 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061915853 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131916636 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478951689 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74420168 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.473593191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.47661349 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751552642 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.472608493 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.46991981 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484150505 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.174734618 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.418183055 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.479064468 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419801468 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.41433608 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.69811294 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.511337687 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418345734 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471305578 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.684512868 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471927247 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597161141 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482788924 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.468133936 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486031738 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.207841109 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.79456371 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.476668122 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.466105684 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.461178745 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.486595116 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573356717 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772358673 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476193413 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.145161651 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.823428063 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729814687 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.473365789 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.456068816 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.476020937 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471697342 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229984481 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.522313694 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.470958133 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120099215 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.49067591 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.486632877 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475700062 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.689144557 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684642565 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.479558832 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486576533 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472636224 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516234224 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.373789976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.276940151 seconds)
  done (took 1726.279088091 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.532089284 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.500931998 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.491971928 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.527942561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492452007 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.486740768 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.510556161 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.527264875 seconds)
  done (took 53.454672378 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.48971815 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.64089162 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.509069303 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.486205642 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.482721963 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.472697488 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.034330414 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.504126059 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.482969567 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.48455069 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.477898944 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.482922034 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.238514323 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.483974334 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.489542319 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.460069749 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.483654288 seconds)
  done (took 68.099647586 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.484773425 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.742467532 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.552365941 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.484611239 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.852085389 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.513852463 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.460975993 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.567770995 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.477221631 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.888797949 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.134777779 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.505869605 seconds)
  done (took 84.05107328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.482796825 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.48298685 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.482197837 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.483444738 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.483925494 seconds)
  done (took 8.80160691 seconds)
done (took 2172.057428612 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.817443025 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.333978878 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.213984824 seconds)
  done (took 5.935067098 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.624144743 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.673060487 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.800972074 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.803532425 seconds)
  done (took 8.286984535 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.759323638 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.853650382 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.670274731 seconds)
  done (took 6.66989101 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.216181852 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.48348204 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.483911123 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.475156501 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.481930284 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.484763706 seconds)
  done (took 20.82948701 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.480660994 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.482738904 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.480631981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.481682046 seconds)
  done (took 7.314347098 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.45671462 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.203999926 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.456044812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.47754046 seconds)
  done (took 18.980455794 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.22557849 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.239157505 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.224886403 seconds)
  done (took 8.077097344 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.478476426 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.323471605 seconds)
  done (took 10.189294834 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.782846118 seconds)
  done (took 3.170196218 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.613163885 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.81025991 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.722090342 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.624018761 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.155424643 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.305638196 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.53045845 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.009614258 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.573088202 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.357434653 seconds)
  done (took 35.08991448 seconds)
done (took 143.935900657 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.067103851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.886203121 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.68194859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.040643882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.707432184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.684007525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.978930943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.003438933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.547301314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.537088753 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.085389417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.707402991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.699583095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883644882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.69885102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.499432132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.707966037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.123343393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.488036012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.479016133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.978780443 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.681713075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.908865789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.705021629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.709004355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.633916294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.259680625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.500227998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.497002293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.286420001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.637989963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.479866684 seconds)
  done (took 206.175576968 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.478593177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.500723717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.501366455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.480315734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.510449135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.482200031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.482131381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.489502752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.480273181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.503241896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.482086606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.480761438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.502243909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.481057584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.482681872 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.481241556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.502013029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.486842623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.480603657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.501020562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.481070101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.480642823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.481687707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.521582231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.484858164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.481308456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.481334141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.49573075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.48202663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.513778871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.481985215 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.500396376 seconds)
  done (took 209.068402937 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.481708786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.482881368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.483463982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.503619865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.481317796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.484193378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.503973648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.522805448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.481453084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.483053049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.489970368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.484062435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.503254072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.482461306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.483833352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.482283978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.496610286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.48355815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.497347755 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.487137269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.483341535 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.519409146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.482594707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.502283482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.495753228 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.483077794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.485243302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.482018721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.483304407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.49819866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.484868397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.483679769 seconds)
  done (took 209.076713615 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.689419967 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.491972169 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.491537755 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.450315927 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.492289445 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.490914452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.488684383 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.682855587 seconds)
  done (took 15.671893332 seconds)
done (took 641.386648541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.116423593 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.796631066 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.716284921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.51264207 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.424727693 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.536510383 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.511464447 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.713215716 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.493905075 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.727089816 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.952997617 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.533590597 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.110865303 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.511401726 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.803154538 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.626162088 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.471062852 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.597904511 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.87238343 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.200894656 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.813128989 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.137727622 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.738432528 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.480922695 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.131107132 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.136577749 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.394700058 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.448938662 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.53513473 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.877759516 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.445006519 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.656352595 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.591563428 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.591037477 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.651631409 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.632685971 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.642281807 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.590138415 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.734048182 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.883894042 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.181582603 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.299017299 seconds)
  done (took 102.218839923 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.476548242 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.477258389 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.476641878 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.477276356 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.478340025 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.477166208 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.47791526 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.477670607 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.477432743 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.47646166 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.477476105 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.47791672 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.477941001 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.478112824 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.476436674 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.478079404 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.478627062 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.480305379 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.478271656 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.476542913 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.478050817 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.476434754 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.478847289 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.476127544 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.478095192 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.478131773 seconds)
  done (took 39.816849835 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.496601202 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.770952968 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.968222679 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.50326927 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.496211654 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.500629309 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.591230394 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.497834109 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.499810205 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.499556491 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.685478177 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.50030769 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.535668758 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.998871446 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.500707814 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.497767566 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.498349442 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.496578624 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.779816872 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.508373641 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.618804575 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.499083891 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.59421499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.508355577 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.524770541 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.497926592 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.503266257 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.036016438 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.522272431 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.686165649 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.530810539 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.594869455 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.986924678 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.998721309 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.526603359 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.505967702 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.49919183 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.68976106 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.501945355 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.49830262 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.593911668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.499115709 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.974776527 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.165060148 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.523659266 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.499853646 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.060206063 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.712074972 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.819858971 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.516048273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.004662388 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.503051507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.50135518 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.501158486 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.80675889 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.50786223 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.499986364 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.081573685 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.531212862 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.595127877 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.501591079 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.499663163 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.787476376 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.501911994 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.776118562 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.503465178 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.50857903 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.524496988 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.97420201 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.504350186 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.203943818 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.529619326 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.501382834 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.687008385 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.779652034 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.105693388 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.527478423 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.792783587 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.004541793 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.618195966 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.507510299 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.024691738 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.622477508 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.507860908 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.505106078 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.504173253 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.502716289 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.549298777 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.595489563 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.120867465 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.197488835 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.104807232 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.623733949 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.517428598 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.503510323 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.083477317 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.528252282 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.50344381 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.975528829 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.194245604 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.527268746 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.51110104 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.195733872 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.529689956 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.600433673 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.510084893 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.984249416 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.5059185 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.550782303 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.504254449 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.51103237 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.531339198 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.598500821 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.507925474 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.505620818 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.157303855 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.720125139 seconds)
  done (took 197.906619876 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.51815587 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.496923848 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.514191728 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.497487406 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.496896625 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.506456302 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.498607578 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.498261626 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.503526339 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.497498235 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.497987891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.500902566 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.500745579 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.500689848 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.511614282 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.50480068 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.110856321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.49952728 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.498015894 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.499536727 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.343054472 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.500868122 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.500037747 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.498989186 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.499267283 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.499565692 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.507870052 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.501624077 seconds)
  done (took 156.9120071 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.507367422 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.20257536 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.529838204 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.668103784 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.532686904 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.505448005 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.665728535 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.578533374 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.530705242 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.505415034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.503859662 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.878978801 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.508618078 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.142983441 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.748817337 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.693077286 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.142686643 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.531025551 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.505530125 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.505365268 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.671119962 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.515685197 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.879087107 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.205466551 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.531890386 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.204856672 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.492546411 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.508573611 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.505749813 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.209053535 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.528863944 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.882380795 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.603238474 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.580859783 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.230594712 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.169033405 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.16705128 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.695441834 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.508540284 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.507413897 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.507138755 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.491563885 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.208554225 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.533200939 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.508232333 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.198469312 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.533347644 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.509293584 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.5152447 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.507190977 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.581718326 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.606510857 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.908913308 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.217162422 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.627687192 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.522407548 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.670520201 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.900629393 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.511772581 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.148555153 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.492465346 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.21513182 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.535596527 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.492609507 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.508939608 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.514309014 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.696741585 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.673186015 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.150087901 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.533386001 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.148154239 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.719238747 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.508595735 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.509002318 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.513214683 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.214929157 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.172789977 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.719570966 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.676686221 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.755237307 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.495936406 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.510228354 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.49455524 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.605620222 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.510059973 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.217987802 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.173002683 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.533996274 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.512481831 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.512208659 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.512937978 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.733018498 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.243284782 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.629030922 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.140045609 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.911474255 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.890411404 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.513491818 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.585702181 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.533560017 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.890842574 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.514264859 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.584619593 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.969274366 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.892019988 seconds)
  done (took 182.465919026 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.798683295 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.914534968 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.616199468 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.667416126 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.192224246 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.117010269 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.902930288 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.671867964 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.642994939 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.808498111 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.865470599 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.603674527 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.724009096 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.602192895 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.337465632 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.616944639 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.642439664 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.676700645 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.6494627 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.641642616 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.239538541 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.844079153 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.719994753 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.591066148 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.620497046 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.407552209 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.133629604 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.072791616 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.719283474 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.017716893 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.107149828 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.760219681 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.642445791 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.312776663 seconds)
  done (took 73.297525955 seconds)
done (took 754.020235372 seconds)
SAVING RESULT...
DONE!
