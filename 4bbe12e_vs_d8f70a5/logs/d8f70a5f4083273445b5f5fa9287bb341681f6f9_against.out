cset: moving following pidspec: 31586
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.497159445 seconds)
loading group "string"... done (took 0.49967991 seconds)
loading group "linalg"... done (took 8.502947698 seconds)
loading group "parallel"... done (took 0.172569775 seconds)
loading group "find"... done (took 1.354492892 seconds)
loading group "tuple"... done (took 2.013053457 seconds)
loading group "dates"... done (took 1.317231829 seconds)
loading group "micro"... done (took 0.208732974 seconds)
loading group "io"... done (took 0.589592785 seconds)
loading group "scalar"... done (took 40.929178931 seconds)
loading group "sparse"... done (took 12.776749214 seconds)
loading group "broadcast"... done (took 1.03754884 seconds)
loading group "union"... done (took 14.145732253 seconds)
loading group "simd"... done (took 4.868844369 seconds)
loading group "random"... done (took 9.792192585 seconds)
loading group "problem"... done (took 2.124343225 seconds)
loading group "array"... done (took 24.204664511 seconds)
loading group "misc"... done (took 1.076253653 seconds)
loading group "sort"... done (took 3.631867574 seconds)
loading group "collection"... done (took 20.887232447 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60027666 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119770306 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142936025 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1701111 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204086348 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136783754 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153538253 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.547087087 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.033551614 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204363772 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140475481 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.542972301 seconds)
done (took 5.745102232 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225765943 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07190665 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123796614 seconds)
  done (took 0.874536622 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072266115 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169846057 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090148945 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106666114 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107886354 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089391865 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107007001 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106881343 seconds)
  done (took 1.458665288 seconds)
done (took 3.315879501 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.804635498 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.820400448 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.497711407 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123961314 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153435403 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.134353649 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.307852013 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.155845549 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105744144 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110862819 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168353507 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.360991761 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.469110112 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.951743717 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.10393923 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12215138 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078621742 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.71488609 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079130216 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126352258 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506715393 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108525324 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113936608 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122263196 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204275946 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126906117 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173907722 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.091610007 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.690066389 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099992494 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182941671 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095387651 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155669076 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.233210964 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076835775 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105637965 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673773545 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.186561786 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108370229 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092778071 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675936251 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078424552 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184316636 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103762102 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106392546 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187146084 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.097999463 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093094809 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097107734 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08548046 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156343024 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.466120629 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10379821 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.138074347 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095891085 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69666318 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09394465 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152784169 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122418123 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.104222442 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.0935563 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088943366 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169796365 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097149872 seconds)
  done (took 19.549443131 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110678606 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135680174 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090995913 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136442976 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135775765 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093072178 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080735201 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.089645669 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10500688 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177654163 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132798095 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138160158 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071734655 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092993675 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.096707906 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243889851 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116067887 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098636552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095159493 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085039635 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138027743 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107489143 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087645034 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106132595 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167242365 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202600296 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.119424127 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119264442 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076809361 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11076662 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137843382 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142280063 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089896274 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074732302 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175764914 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119237215 seconds)
  done (took 5.001479057 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193707841 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094024787 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202278426 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172989348 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144078503 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16196995 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112937277 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25707818 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.218436699 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159610787 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124232998 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108068821 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075716042 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092371852 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074734198 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.715214696 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.172493101 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145457602 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101836274 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101762759 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09502276 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368367122 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08113417 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093596435 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081260209 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084967875 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169346705 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079877556 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.209690738 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114036686 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084258666 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129348529 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197628755 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123890981 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134487017 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081284105 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095724373 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206862053 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104364902 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158301124 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073885811 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11990549 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129570448 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110993663 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098111373 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.105662304 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222368286 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095431609 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096619323 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.039050227 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193655696 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090855502 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092172237 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326009203 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093606584 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100545444 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094337013 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280063645 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110667575 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095362905 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07371417 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099032824 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074176521 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400032714 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084864291 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.916742163 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09414878 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152875135 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094757001 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099937363 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08297675 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097485613 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098421892 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092400467 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075995226 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075341943 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092937954 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078704433 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1123325 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097242803 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074924947 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159261862 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097186983 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113747873 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119982414 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07958814 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07474914 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126406205 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094136367 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075236757 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096198905 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137451807 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081952874 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112484826 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09478113 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122826578 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094205873 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.180249855 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078809913 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119081773 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095806406 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108347115 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113300195 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093223378 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080096124 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094232424 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074313383 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093867049 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142991878 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07801513 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091657607 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077542395 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094379534 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089076786 seconds)
  done (took 22.966751161 seconds)
done (took 48.194355332 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.411037881 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105942073 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106566826 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107756995 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104597472 seconds)
  done (took 1.591697018 seconds)
done (took 2.323784684 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316558627 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192918227 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096111342 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186421595 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083225379 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191940453 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15946448 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094853376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203154544 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079639746 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180815778 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07922386 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100201144 seconds)
  done (took 2.721566827 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088568827 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112872073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076772149 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103127461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071443026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086750243 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102885587 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106967851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104291111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080389862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088569376 seconds)
  done (took 1.749761553 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087559199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111418686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07837338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08605221 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088836051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086839426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103870681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096859105 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104523003 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081416211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088530556 seconds)
  done (took 1.744203935 seconds)
done (took 6.936600359 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.033002972 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.738643862 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118964267 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168596069 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.328398518 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208588281 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.556521799 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111253424 seconds)
  done (took 12.169483978 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10658735 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111260379 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076248565 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093908413 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075421066 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096759261 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077026055 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094766777 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076270894 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095648521 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076343885 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093833295 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077831893 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091919317 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075910992 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077642669 seconds)
  done (took 2.189558503 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111897777 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109987063 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099552639 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084875515 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097400443 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07971834 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10003805 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098350317 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078885114 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09670746 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08497247 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101467477 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083183093 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095080717 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082355925 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.102812428 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095724473 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081787144 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09987944 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082568538 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103181213 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079948212 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.100672363 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101188366 seconds)
  done (took 3.088286004 seconds)
done (took 18.177272065 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160624356 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080560095 seconds)
  done (took 0.97406918 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096372622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114591671 seconds)
  done (took 0.951692074 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102381163 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093866836 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130507911 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11169153 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078187228 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076695676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126983721 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095283736 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076959421 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094824637 seconds)
  done (took 1.729182507 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081748193 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097771504 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085835698 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115069181 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088583743 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095909786 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082508392 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098102015 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100155832 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077006365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102347549 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096786501 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101349586 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114567876 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082589274 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101260615 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086510545 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09885024 seconds)
  done (took 2.447630667 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077081994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078946929 seconds)
  done (took 0.901726289 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079737569 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093172619 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079897394 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097152634 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075890573 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092239351 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076087397 seconds)
  done (took 1.341384656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.470254883 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.246234734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306194572 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110682922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12788815 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.488370851 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129053517 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090350734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108730246 seconds)
  done (took 2.86505578 seconds)
done (took 11.945844559 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.0868073 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129440199 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.492801931 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112591539 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073738359 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156694567 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.253598868 seconds)
done (took 2.052655115 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337918772 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118367906 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085300109 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075543183 seconds)
  done (took 1.360763652 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075414181 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081603267 seconds)
  done (took 0.905441345 seconds)
done (took 3.01699346 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075336561 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074993333 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09056103 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075594615 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089976588 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072013579 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074568329 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091640403 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.126022761 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.073780105 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.074639782 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093739023 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072461461 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091487614 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072414615 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092819873 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072684272 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072740242 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089315947 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072532304 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092248648 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07275427 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072774671 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091431648 seconds)
  done (took 2.761003999 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.0997731 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09326288 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080476891 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098336355 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079485107 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097982367 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081090925 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092820432 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.097647151 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077888271 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096263387 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079685387 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094370824 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079606925 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095055607 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078620807 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098602646 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075982254 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095088165 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.078745486 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097867405 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075418452 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096339668 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080771437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095702148 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096769602 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077200535 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.076066059 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098088255 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096750562 seconds)
  done (took 3.414706257 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084013846 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072720771 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090680752 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083692118 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090894022 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07674957 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090811426 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076037683 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095211743 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073150999 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077494053 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090450201 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075353281 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094337283 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077848807 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098575237 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089989385 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093438876 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075143203 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095579327 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07772847 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076077287 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093207251 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072223451 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090350375 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072232594 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090416749 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073071736 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073114998 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090646154 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077775627 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096806177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07272558 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102614388 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078841889 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090027641 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080596068 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072504557 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095594138 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072681255 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089713132 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072564193 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093821402 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083792182 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09300215 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073790832 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075752966 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09502754 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076625377 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096704348 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07301571 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093822069 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07889757 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094982131 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078854938 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072695818 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091696458 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071932719 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094993851 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073014024 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089966784 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072610202 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079562355 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090792556 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095205451 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101164948 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075634454 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095051249 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077088565 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097975753 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078918397 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108995741 seconds)
  done (took 6.842421443 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077634615 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100560146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076308484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074362146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088821081 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073612348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097917516 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073884033 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092483552 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090740773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09113242 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074813525 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092084181 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076731256 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090756887 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075180516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101199984 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070909299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090363743 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076147757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091290296 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080390588 seconds)
  done (took 2.613041745 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21413492 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10060865 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137416319 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090562932 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110533431 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10883838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080357413 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098950951 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079679298 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100400521 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101325873 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080789771 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111051665 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100535355 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083433452 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101894756 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079608208 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101760019 seconds)
  done (took 2.640722645 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088464486 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094620763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099418814 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094051755 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076012157 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096886845 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081859695 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108495647 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078094112 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093434875 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089003302 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095685142 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079065717 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094898744 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077736388 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093652711 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078543291 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093842311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086123462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099466351 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100060112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086255894 seconds)
  done (took 2.744208271 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092567765 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095632448 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09891919 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099057063 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074954527 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094936409 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084051419 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094834436 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085603421 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095700699 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076731683 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094965288 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083591965 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094118883 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081967032 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094891752 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079017165 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09397261 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078287409 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092389387 seconds)
  done (took 2.549062004 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115500384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10827391 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090619761 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119517329 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108711835 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091214175 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119662516 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090703265 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108502132 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121284259 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090851064 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108903394 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102049745 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11580533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108820774 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101981313 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119269593 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120022977 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091159251 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10953351 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120929024 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090675081 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118742948 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090716428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107931827 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091841645 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108960888 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09783013 seconds)
  done (took 3.73126951 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076048893 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075654789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091372628 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073301766 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091519443 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073520607 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073596577 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090725834 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075861179 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091871978 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075819335 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093437298 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076858518 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075503007 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093655381 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.075670525 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093151026 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073323816 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073278303 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091638829 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075829777 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09437789 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.076323547 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091462835 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073156212 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076204682 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091757059 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07338257 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094392499 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073772599 seconds)
  done (took 3.221724275 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084509579 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099772576 seconds)
  done (took 0.951933361 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073617889 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111234691 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073332157 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079368936 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100412679 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07738668 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104014777 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099830016 seconds)
  done (took 1.485251507 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100704571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113930937 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082244976 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105796772 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094927414 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113024277 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160028805 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083643246 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103178455 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078240955 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114698434 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07672066 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104755078 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082482333 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104370989 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091558533 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095773267 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086772082 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102908483 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080228234 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101338893 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092953524 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104786807 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08437366 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097468791 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088400516 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108847675 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10680453 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082023477 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107143536 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083955827 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08856689 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081795183 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100630371 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077702679 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112630385 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094057373 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100271622 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08624512 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101202705 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086671687 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093552897 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087350895 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102309603 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089516111 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100684026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083003803 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093820626 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077730418 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098893337 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076261499 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098808612 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071740498 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103975141 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086655958 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113740935 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080324568 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09953888 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081630149 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098822757 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084389349 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099324233 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087594775 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098850788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087714386 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104083279 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085829125 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093872999 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071902548 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097007975 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087001152 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120306223 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088760882 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101589562 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083909685 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095947785 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083629853 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102120735 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085255574 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106406363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0997888 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084515315 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106724431 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080784025 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.099363631 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084614533 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079690605 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09856003 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078146765 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114962356 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097956047 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078187534 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077654688 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10581658 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081173298 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099324593 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079005639 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104632364 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071992145 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101473324 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083280379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10256977 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089607199 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101440297 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083787295 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104023573 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105731803 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082288338 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080679116 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092255488 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083444703 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09782729 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086103427 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089134399 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083092679 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10103068 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083196561 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105477389 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080282503 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100552834 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089082056 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106324931 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080117249 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091605429 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08204548 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099527068 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087195116 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107947136 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080385053 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093636383 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075719697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104777428 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082078566 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102168668 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082865214 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101592281 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071537553 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09644617 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082567329 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106200895 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080741434 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102435846 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087650783 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102219734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081635727 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106149381 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081360441 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096111458 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087487681 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099376825 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075661822 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105888986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08157004 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098337949 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082216044 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105905195 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081887215 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101577458 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079994035 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100731353 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084313108 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.095725538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083106763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098694295 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091147576 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10058752 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075908227 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093145426 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.084542306 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097044148 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081726171 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097023844 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082742518 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102497561 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079479013 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081148626 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099828684 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112089531 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099948251 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102026694 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085541618 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108257175 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081885893 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102536107 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082086977 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103048654 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084185472 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105341687 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085779434 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101420552 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.082395054 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092846411 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084805446 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107106193 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078294671 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078699614 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096389927 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083109459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108407407 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083494481 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101903951 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080309763 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102485643 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087933143 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100581704 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083022148 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.095889652 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082462723 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105154494 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084977823 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102596284 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090036669 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102490193 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077117167 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106276063 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080108556 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105400365 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07735572 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096781365 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079560605 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105862433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080951149 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.099687296 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072924262 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106773238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089276425 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10194605 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07893424 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101289386 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091731678 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099428055 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085155059 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101258385 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085536474 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115394645 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079128609 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100804524 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090656755 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101571914 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071533599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104671737 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080106008 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096061006 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0808601 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098658314 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084372913 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103207784 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084298629 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090621515 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081801745 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080163962 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098326905 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07730679 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105924409 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083114253 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101211198 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110682524 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084992169 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102273173 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084038798 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100646271 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084618766 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102695555 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083313439 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102113629 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081066642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078581217 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101863014 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078580596 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097868076 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082089779 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101743752 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083273774 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103755567 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081370185 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106026961 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083474215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102129281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118446936 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079595179 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097990814 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083350248 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104210571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083012876 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100720323 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076812586 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106578198 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082306454 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107382594 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081476371 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09355423 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083736712 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100770275 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084417063 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102021101 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084758982 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080442187 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100621688 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082259672 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110547337 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097251812 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089317334 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103102838 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085369187 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101584537 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083752118 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100274898 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.078978361 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10134995 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084417075 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102635299 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081887166 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103785522 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083912376 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100539378 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081212995 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102964877 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083551088 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103583496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.072743755 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078307207 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097540879 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083285739 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105258795 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084699354 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100599069 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080775389 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104158042 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082378852 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093954799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087828641 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104035179 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084814013 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111029065 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079054602 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101743331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093264169 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091258378 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081200693 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098244978 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079507261 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108344567 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084724207 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10733927 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084667705 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.097804221 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.075985965 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103463293 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08186217 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072717163 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097415912 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086513388 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.099673668 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081318023 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102925906 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086216679 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103859346 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086921061 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100501753 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083298779 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102313745 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075769062 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098164421 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078731967 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10144622 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08471415 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098570994 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076422151 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100819913 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083013905 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10228622 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083643126 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082241922 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109394982 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082678539 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103050525 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10774655 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074127056 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.083919844 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102790843 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083823021 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098428932 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085037145 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10418426 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086193461 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106928264 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083576669 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103971511 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083636219 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09918143 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083599535 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.1026811 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084471918 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098063812 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085340275 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108417238 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08049742 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102497556 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08455746 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09967741 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084862532 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103469611 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083585267 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106982023 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08414323 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101968823 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087030742 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103052008 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085011337 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10345712 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081508037 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106858271 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079756677 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109862599 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085006538 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103816739 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082049904 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099021553 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082661525 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101448773 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082724265 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10725611 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084970971 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098119322 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079563928 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080084288 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102549227 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107591026 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090149988 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102855486 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085374951 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096987046 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076970301 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086216116 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099945443 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083840703 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105339885 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088918517 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.1032249 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081330699 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100950617 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089132457 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107380281 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086518323 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100146569 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085735688 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105279226 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083010806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.100604855 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083319695 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103766897 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085862577 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101856704 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079686022 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111546683 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107412272 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085940928 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101103011 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085972153 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101871573 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078159009 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084885435 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104315386 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08707072 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103200313 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084576324 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113019737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097967375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083084033 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107675349 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08268859 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108455625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078401113 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103422205 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085739624 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104276892 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078265888 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078721853 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099383106 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083995298 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098664459 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078531946 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11320716 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089098668 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104266854 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0836671 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101091651 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078419842 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09692199 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079507892 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104845588 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083527545 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111510609 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079141776 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098820265 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078357525 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102580729 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085723473 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104658098 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077101033 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097095801 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080519407 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083885163 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111669802 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100792482 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084618856 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084731012 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103014152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080945418 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108740959 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076657167 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104504944 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114394165 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086051985 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104708867 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087473407 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109517631 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085283233 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097358965 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085803286 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103000449 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085656627 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104757625 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087188949 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119734738 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085768825 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098217291 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085843179 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102706037 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079882339 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110282834 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086816526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105217976 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086685396 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101684447 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087637499 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110321451 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087011208 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103550336 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084708729 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101811705 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084729576 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100899637 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082636794 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105573804 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086089138 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102991024 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.087118665 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099184299 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094656259 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110379109 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085186394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096201944 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080396889 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099006196 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079199275 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105291189 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079320501 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082452284 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.1006628 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082309099 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105454381 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08627465 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10299939 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086673227 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103072565 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074860461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106831638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085156375 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106768963 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076573582 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103970818 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086129145 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108760721 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09031739 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101660834 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084378048 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102091598 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086855243 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098161419 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087967511 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101791767 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082530449 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099330875 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085596674 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104577079 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086136432 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104805971 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087076528 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103222046 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088178468 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107309233 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076999166 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07735912 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10757878 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081146008 seconds)
  done (took 56.151471408 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144087086 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08542183 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075316014 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095041452 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121722826 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079680663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09479577 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080327875 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098633297 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088902012 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09447869 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076047449 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117240074 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122022297 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119450884 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089767443 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095501044 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08031885 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093934444 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079827598 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114553147 seconds)
  done (took 2.864004525 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100098447 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11257815 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111343914 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098665041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106031467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112560271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092002552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112863157 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116411711 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08782391 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11709961 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112844013 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087628831 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106840077 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107224641 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090509672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116488367 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105438034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.095041663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111163233 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109263337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091940561 seconds)
  done (took 3.115442416 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089109012 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082913606 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108013515 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.077854622 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103060884 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.078130315 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108013598 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.080089417 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108101886 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08393497 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100322007 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.083546558 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108016465 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.077778094 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102281747 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.080689149 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108509298 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084157986 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085404256 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09833384 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122298557 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.078221993 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098357126 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081118161 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112186288 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085177624 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.103225931 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084472631 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080695262 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102927058 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.080452714 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105056297 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087547444 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101054635 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081440567 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103881027 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084141352 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097270625 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.080961955 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106088258 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.079711894 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103619411 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090950949 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100133001 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.080754433 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085276112 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104481414 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.077989595 seconds)
  done (took 5.266725907 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114936585 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151119133 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.082531572 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142568839 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118660811 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093018806 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104481218 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141827475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078298434 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103985999 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120366413 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.097482653 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10484998 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089826585 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103779702 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1027814 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087446175 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098550873 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090384366 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102854869 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.088726417 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106520699 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117207232 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.095683792 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10900411 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082794829 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100613158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10840705 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095365239 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109240706 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109066786 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09233195 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118621956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.084931039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102867282 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105976403 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101794504 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104670307 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086800544 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097812058 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086240021 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109934932 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106176614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100021146 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104553331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085207804 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103658444 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076475365 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115468105 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106510765 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093937228 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116820071 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107870024 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085043553 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108868586 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118204148 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084753723 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102108181 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087517627 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114414578 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077654535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108393043 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116226949 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08610885 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112552816 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116912009 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08597487 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107261716 seconds)
  done (took 7.936766141 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110936302 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109871587 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100012192 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120415275 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108805123 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089154775 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10926694 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108807971 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089313674 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116033511 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089128515 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155544527 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106365342 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095314297 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110246921 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108777429 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089961904 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108345001 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088607852 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109171247 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.08849484 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120388657 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10894016 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120234145 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101335452 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106714739 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088410539 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110264511 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120149411 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089697583 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121700487 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109640285 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089431747 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119920205 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121207971 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089679579 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104281715 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089429967 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110311536 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109046837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086958967 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120748505 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089179163 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108232332 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108410724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08995269 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12130039 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12134892 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096360937 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116622839 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109757196 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101494178 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109736827 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108957377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100797827 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129614167 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121140958 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121489347 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089413477 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121902749 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121141112 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12951927 seconds)
  done (took 7.495121306 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082008028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080669488 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099164691 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078981034 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100637251 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079420133 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080639027 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101530423 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081432324 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10131332 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081498745 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098429851 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079194176 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081333925 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098920316 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078762687 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101613499 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078946803 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080473089 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099872661 seconds)
  done (took 2.59513562 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089907517 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122266286 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082571647 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109285832 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084707769 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10933439 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082806401 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103905899 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082459465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10393182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093314018 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114664048 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101927062 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089119603 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114441339 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108603682 seconds)
  done (took 2.426483161 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101414478 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122773274 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127014036 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086674579 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100092635 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.089384006 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104539156 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.077809351 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077021811 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111238183 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086678792 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108813703 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083232855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101045974 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.082252122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107585766 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077029382 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105785566 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08484627 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126262433 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106764842 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085364674 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105306582 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084809513 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104616011 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087453741 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108826852 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079634967 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100222281 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085960568 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105459884 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09027596 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098373879 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086826464 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100213559 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.079466979 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10388431 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086254776 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107347927 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085494514 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099718589 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.084885607 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105035839 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088085007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077115802 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107107497 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077054514 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109252448 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083522291 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104786953 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084386918 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110883388 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088452628 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114167155 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111911876 seconds)
  done (took 6.13255902 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096984488 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106272036 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087221511 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100115018 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085794097 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111167852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086462295 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104641815 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084276694 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100294647 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084931734 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105753885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084423093 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105539727 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085036103 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106409494 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07690179 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.08302947 seconds)
  done (took 2.529668399 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087555636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081058607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110650909 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081096508 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103049587 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08421733 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098210385 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080221174 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100839715 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082434981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102403529 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084510932 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100572575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085065968 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08147861 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103784819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084105657 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100678934 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081680014 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097781471 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084914717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100872381 seconds)
  done (took 2.857837797 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.099516551 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.133071933 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.096038251 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143621515 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.106842696 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.08571309 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116779959 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.086402047 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.125039746 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086105869 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106135082 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086539014 seconds)
  done (took 2.110015405 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106391156 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139445033 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08345792 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105413102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096101807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108749132 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107055363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087001438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12088062 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120645647 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088231103 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12198835 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120046704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119017288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09655752 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115948396 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08664241 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108280545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082558034 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129431559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108152271 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120571405 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087385458 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108583462 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087476348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118857408 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121030704 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12111814 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08788803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121822211 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116726554 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088166518 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121846696 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120223272 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085903791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121706358 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087372125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130533675 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117081791 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119349893 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085028411 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116834712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121569889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094410452 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120956435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107900488 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094554687 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10833807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087537688 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136823762 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118129672 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119468181 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117136509 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100741297 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122312202 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135084632 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121602565 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119041647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09647501 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121419356 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119703592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095541871 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120312414 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120966587 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11669146 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098537536 seconds)
  done (took 8.097278759 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121169069 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104964512 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086991713 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121728264 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119539542 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10752451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088453057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108000946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087459366 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105045715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154754958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088612304 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120206283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119746221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087951149 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108943021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087014521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119225387 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10509598 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136194568 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087558461 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120807143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119294637 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119562178 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100757301 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117003678 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10800868 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088406828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108758701 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087892249 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11606317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108122749 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099189713 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104361338 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119469955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08819961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107924839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095043746 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107982381 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116721795 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099829484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130409459 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108343019 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087958277 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121262859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107942953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088283538 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10535583 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088496696 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105056632 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122249371 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100406063 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121388787 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120388289 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108333807 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088401441 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108390479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088681558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10871647 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095974469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120327926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109146761 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13623453 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088080309 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109200243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120164824 seconds)
  done (took 7.938766804 seconds)
done (took 151.222359772 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100448927 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138378295 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096642319 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166967605 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082850289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1381263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116439036 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118827058 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08410196 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104517453 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083297618 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.106743592 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149126045 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082963664 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105457261 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086383911 seconds)
  done (took 2.60580818 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17918739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281967951 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103028255 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109612343 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089347738 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107430929 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088344143 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110453376 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085291506 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117676925 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085628727 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107055825 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.094844805 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108225001 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.084062836 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107331034 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116472549 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086381422 seconds)
  done (took 2.91598018 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114419649 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148748739 seconds)
  done (took 1.11776304 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119214466 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181509877 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298834523 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136509321 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132835529 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125899242 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159862312 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.104321799 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.428302428 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12736479 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129491079 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110623785 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112937571 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116525215 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093215906 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111670673 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135697608 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091520591 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111662294 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091405528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133847297 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090763181 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116567406 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090921458 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17885102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126657224 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.11152988 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090057208 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.1118577 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091002792 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116789694 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124737377 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124949886 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167407111 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094545502 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182514499 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096306726 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10972697 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091248834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110071077 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114932543 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.093580395 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125652515 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090295172 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111506137 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096828088 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112055832 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110678517 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097416884 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11900845 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096961443 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115707403 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158906811 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120218696 seconds)
  done (took 7.692863517 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.77589817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151552293 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088267627 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.896273043 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141125633 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102015332 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771290845 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132458107 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241224385 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.770249762 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126959917 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12449712 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208639511 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276796165 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.14730548 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314281844 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.678855198 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101907754 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141574056 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154076998 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094882405 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138652841 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129999044 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454504468 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087997766 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111074066 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116294811 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101707727 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162317168 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.111539621 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091478742 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206651006 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267203672 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206036687 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089405412 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109062338 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08746792 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170602886 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269595738 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21911665 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177904109 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085232234 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10944355 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101909617 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130746675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106195279 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167377399 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175785105 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176682743 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115363455 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122773826 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098324721 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122999387 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165351454 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107339375 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315071004 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345258236 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110392659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096861695 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131626586 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267776821 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088048656 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228862353 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137546969 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214362334 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089021413 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788637153 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170234859 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087268317 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120969914 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117758647 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094911938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122626975 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172795105 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.429537346 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125252765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093329111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109407872 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215216108 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087499977 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111566463 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167890922 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112123139 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097331974 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128446447 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124684527 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175688409 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248711642 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12631951 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1184971 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094592416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122976758 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.090298385 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214790478 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22161883 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182940727 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217742163 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101866563 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.190911801 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169499376 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12353182 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175531335 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117812604 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107622997 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12497041 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217833364 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146337631 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09012763 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115480087 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095638957 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149326474 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114877706 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097595287 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171086724 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.507577136 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169191549 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107852804 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093833922 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119925356 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168354782 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094963697 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268082135 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120999532 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172786187 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118926302 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087144935 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118683113 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169556575 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126098103 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097029019 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124607313 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118526544 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255911944 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222258474 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105219666 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242865235 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182811743 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098699811 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200326292 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096837899 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195317852 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099287685 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123471444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089671711 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782075103 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124401327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096544768 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117136819 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195665766 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087812672 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11297849 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088882454 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107546464 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79554961 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114483691 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086552787 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.11288875 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099427546 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119578009 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094183821 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117600393 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165390668 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236344279 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125866344 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095828865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11279072 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165166638 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11262597 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089688982 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111253011 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.089772523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120285599 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093815047 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112411166 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177408491 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162817253 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223803896 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575216217 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089415697 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088229491 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234346135 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11150199 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285310505 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120166484 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230292495 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172757032 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10928143 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318573891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.197704986 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196028876 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093121952 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174654563 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109852673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09438267 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.192942867 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088858727 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119089783 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163473121 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128540142 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103279725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158737541 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111154407 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235593502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084770454 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19537987 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091307997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124614493 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313404298 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089370662 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132285256 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166245674 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116017366 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090732945 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.049451611 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089821338 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122227438 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099572318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227417269 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169866209 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12023956 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119038563 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102412226 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188429286 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.214746134 seconds)
  done (took 44.5840722 seconds)
done (took 59.764163998 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302872598 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264578588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.294455018 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195405209 seconds)
  done (took 2.007224309 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176102479 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151866629 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124153104 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10809624 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153140308 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087270217 seconds)
  done (took 1.679070509 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.474411759 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.372172232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.343664886 seconds)
  done (took 2.074471464 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253520783 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.281598767 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.319551473 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424594032 seconds)
  done (took 2.264211163 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206531385 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126112633 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.098860631 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.138025423 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.170697647 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17569088 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142771024 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15472846 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106587451 seconds)
  done (took 2.244840764 seconds)
done (took 11.151061477 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.272641834 seconds)
    (2/286) benchmarking ("sort", BigInt, false)...
    done (took 0.28606234 seconds)
    (3/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091243211 seconds)
    (4/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.230978662 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115534737 seconds)
    (6/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.234487021 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099510235 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124903222 seconds)
    (9/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.18233271 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093998001 seconds)
    (11/286) benchmarking ("sort", Float32, true)...
    done (took 0.224935154 seconds)
    (12/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.232677863 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.235015539 seconds)
    (14/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215704087 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117449625 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104580523 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.251002074 seconds)
    (18/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.172627346 seconds)
    (19/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.246396198 seconds)
    (20/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.193997568 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.237878698 seconds)
    (22/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243979401 seconds)
    (23/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.206674188 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096627502 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.157093558 seconds)
    (26/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.196266861 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.21905386 seconds)
    (28/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077432689 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122302757 seconds)
    (30/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097288616 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142340845 seconds)
    (32/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.153554033 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094712231 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136449588 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.240901353 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.209164637 seconds)
    (37/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.222954853 seconds)
    (38/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.222270798 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.198442409 seconds)
    (40/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152928023 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.225465749 seconds)
    (42/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.193102395 seconds)
    (43/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.126543347 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080392824 seconds)
    (45/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119136175 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095121997 seconds)
    (47/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11463427 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116626486 seconds)
    (49/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192280074 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131558206 seconds)
    (51/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.210652428 seconds)
    (52/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195225689 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116662215 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114805821 seconds)
    (55/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.139070484 seconds)
    (56/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170918211 seconds)
    (57/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117048368 seconds)
    (58/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.082404086 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.135704177 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11269257 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193016092 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128420492 seconds)
    (63/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.229377424 seconds)
    (64/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097641456 seconds)
    (65/286) benchmarking ("sort", Float64, true)...
    done (took 0.228148738 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127456162 seconds)
    (67/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140045654 seconds)
    (68/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.15042489 seconds)
    (69/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170807737 seconds)
    (70/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086809274 seconds)
    (71/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.195615376 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.102405051 seconds)
    (73/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.167358895 seconds)
    (74/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.191094713 seconds)
    (75/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189844859 seconds)
    (76/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125822496 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.087838981 seconds)
    (78/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076706391 seconds)
    (79/286) benchmarking ("sort", BigInt, true)...
    done (took 0.270560904 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10381245 seconds)
    (81/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110098813 seconds)
    (82/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103728885 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.12305972 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.143817356 seconds)
    (85/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.151778224 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.101808256 seconds)
    (87/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.183511765 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102077303 seconds)
    (89/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.099324886 seconds)
    (90/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.104436426 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.149958525 seconds)
    (92/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076279476 seconds)
    (93/286) benchmarking ("sort", Int8, true)...
    done (took 0.21631973 seconds)
    (94/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190350497 seconds)
    (95/286) benchmarking ("sort", Float64, false)...
    done (took 0.172269534 seconds)
    (96/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077977964 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119995056 seconds)
    (98/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118032047 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117420939 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 0.19262626 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116837188 seconds)
    (102/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078296503 seconds)
    (103/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.101938976 seconds)
    (104/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.124836816 seconds)
    (105/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166066046 seconds)
    (106/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.206767277 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.125753282 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092715612 seconds)
    (109/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123636353 seconds)
    (110/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102563502 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.141124262 seconds)
    (112/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.180054361 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10172697 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.118667196 seconds)
    (115/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09189936 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.1134067 seconds)
    (117/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.193392468 seconds)
    (118/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109811698 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.183830249 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.123437951 seconds)
    (121/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076214385 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117877654 seconds)
    (123/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.180689464 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.177078299 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123203882 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.123104748 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.111942745 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11661986 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099668123 seconds)
    (130/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115873791 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093824638 seconds)
    (132/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191769333 seconds)
    (133/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185579773 seconds)
    (134/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.115496197 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099308457 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120329986 seconds)
    (137/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091796473 seconds)
    (138/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.101054832 seconds)
    (139/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076033732 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086417479 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11768393 seconds)
    (142/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.085114587 seconds)
    (143/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.097702923 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181059043 seconds)
    (145/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103560255 seconds)
    (146/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.124121914 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09390171 seconds)
    (148/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.099852394 seconds)
    (149/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09263731 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09969274 seconds)
    (151/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0932703 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122640567 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.090164257 seconds)
    (154/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136119063 seconds)
    (155/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077674364 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136605187 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080490131 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111172853 seconds)
    (159/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091451674 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.114591744 seconds)
    (161/286) benchmarking ("sort", Float32, false)...
    done (took 0.173807701 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081954192 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11728657 seconds)
    (164/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089971531 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077513015 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119437759 seconds)
    (167/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075041586 seconds)
    (168/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.112951632 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076396623 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.170661711 seconds)
    (171/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114571074 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.079172435 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07669576 seconds)
    (174/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.099628972 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095199503 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116602245 seconds)
    (177/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157181514 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.110436465 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123946122 seconds)
    (180/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099153373 seconds)
    (181/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.106239528 seconds)
    (182/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07634104 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.074689058 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.241168902 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094980917 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.115473738 seconds)
    (187/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104161418 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117535605 seconds)
    (189/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092437088 seconds)
    (190/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110367146 seconds)
    (191/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.15994114 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100848678 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094713251 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.100266532 seconds)
    (195/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111040978 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12775451 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100865916 seconds)
    (198/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.158969908 seconds)
    (199/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149629214 seconds)
    (200/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095013064 seconds)
    (201/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.09979166 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184318558 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101098692 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135290009 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090245546 seconds)
    (206/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122728124 seconds)
    (207/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088318384 seconds)
    (208/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101560738 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094931125 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115648996 seconds)
    (211/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09085807 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.115338223 seconds)
    (213/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077045899 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117573699 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095149442 seconds)
    (216/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.116462837 seconds)
    (217/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095011572 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.115679757 seconds)
    (219/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.075787537 seconds)
    (220/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181816276 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093396776 seconds)
    (222/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.099940942 seconds)
    (223/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103487357 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118015348 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166501722 seconds)
    (226/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079232005 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080446747 seconds)
    (228/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119261147 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075911559 seconds)
    (230/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126453136 seconds)
    (231/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093260212 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126510286 seconds)
    (233/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087425971 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111418777 seconds)
    (235/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076954584 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.101940217 seconds)
    (237/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.087596823 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.097806471 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079814117 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094138242 seconds)
    (241/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.102379207 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082228293 seconds)
    (243/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.118120632 seconds)
    (244/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077446581 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119255911 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101570514 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141384713 seconds)
    (248/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.075927904 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.116676575 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076415441 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118049641 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.079974716 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111723094 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077536128 seconds)
    (255/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125504455 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102097248 seconds)
    (257/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12010865 seconds)
    (258/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091169104 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121769908 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096675397 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113476024 seconds)
    (262/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.083212251 seconds)
    (263/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.151011228 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089698047 seconds)
    (265/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117915104 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.176050748 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10153767 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13704472 seconds)
    (269/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.083108822 seconds)
    (270/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.108043878 seconds)
    (271/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076769227 seconds)
    (272/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117280086 seconds)
    (273/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.08282089 seconds)
    (274/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0748198 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118232591 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091944626 seconds)
    (277/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103972951 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137118209 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.077213802 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.077509517 seconds)
    (281/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117441923 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09006259 seconds)
    (283/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109195766 seconds)
    (284/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091575551 seconds)
    (285/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.101326881 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094538471 seconds)
  done (took 37.618362287 seconds)
done (took 38.508764506 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101738888 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152270805 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099817468 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139968109 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.099964842 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128721238 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120659587 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099945498 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123157283 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101904052 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125521645 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.08296417 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121836731 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098750817 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123870227 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141362749 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101291159 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120458741 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.090157973 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114209184 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09087382 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115375505 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.093339228 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.105838237 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098786889 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121156178 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094393861 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122129514 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091832583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112533208 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089803627 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.093514412 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.11355014 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123728801 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09323858 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090511314 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124269578 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097092368 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11782537 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091338828 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119918398 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091656209 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118955578 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096237049 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115634112 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090517033 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114647465 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125169866 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11804826 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115578859 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095778574 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121761475 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099868877 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118919939 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090548684 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.115037704 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092396282 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141612739 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.091290761 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115790565 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.113075438 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.119099824 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.090536611 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.114961045 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091964404 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121277947 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097388897 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113384457 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097594332 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116903099 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086766353 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114659976 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090420775 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08809215 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.122255474 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098855177 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109876906 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091922721 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118379151 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094162505 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114374713 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089816858 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117594575 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093191384 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113052144 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08373422 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112882229 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094452569 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114248962 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091977907 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117212498 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09502109 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117815125 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098020791 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115855473 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092606617 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115695446 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092481073 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117152026 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09043145 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110689388 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090043579 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119893404 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089400432 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092035809 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124716532 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088532963 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119253593 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090930192 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115348489 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126978368 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098229052 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115787123 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092719244 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087837063 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12047424 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089142734 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113274344 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089149695 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116740401 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091997226 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.116494702 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089568648 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118730017 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100023347 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.112508282 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090554443 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113211425 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092751245 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118433818 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092108847 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113263842 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09098232 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110414496 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090000294 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113288825 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095471517 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114191968 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091008746 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115529455 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092446544 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116469898 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092880348 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117301271 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089957834 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.108564938 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092386853 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089592726 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117682296 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092272209 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115757974 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087640752 seconds)
done (took 17.048930832 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102077028 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184742524 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.147909301 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149728104 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.122093206 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.132731826 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126124167 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145714752 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.099700303 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143026548 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145967346 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113563161 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151069424 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123370368 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.107973207 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.122501701 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.096634539 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.132171807 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154548143 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116780917 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148861354 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124198772 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.142558709 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117638089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121893715 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141671025 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.101597149 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12156603 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102409979 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139351441 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114136935 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126081916 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124393471 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.11015786 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129618632 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096059237 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.131686411 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094379217 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123429681 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.122258626 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110808475 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133101732 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09509116 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131233849 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122629586 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.102294618 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121502156 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.096981086 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123460755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092970213 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127780625 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14368093 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.096786436 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124364439 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.122745744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099613731 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124154814 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.102128343 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.12483612 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.101638794 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123291135 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124835804 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10310877 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138763386 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122352769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100519215 seconds)
  done (took 9.005264602 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115954905 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.149573241 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130127977 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105175337 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125008441 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088394849 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111305478 seconds)
  done (took 1.784388363 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091512224 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142722958 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.121545491 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145497222 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137581917 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.124596275 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130366852 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089108103 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13689988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.099032661 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143160078 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1669088 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089893679 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.125289921 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147786966 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089270068 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.148006481 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089875415 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120815585 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120611624 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119194187 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135307442 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102493611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11538705 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110655452 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.118606361 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.181622721 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101905811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115770047 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09670311 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11956661 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183042887 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.111392931 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124329138 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088271345 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141798227 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13495395 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094695762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138509067 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094279627 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135286868 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096556774 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122266498 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094693993 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121334468 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104252629 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12573615 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123150125 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095900892 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142878911 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.10097584 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136426278 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091028757 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118955804 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099354413 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121302352 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103871255 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120423077 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11713787 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121496816 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.138808236 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115316943 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135627429 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140168425 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106523616 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136113966 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.111169818 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120776713 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097145883 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122065729 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140029212 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094017951 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125260468 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104655253 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123760037 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116978501 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140599607 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094372719 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127850267 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094177413 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117601994 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091131531 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.131526206 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09410976 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117078055 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107020375 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127413284 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119803203 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093418934 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.136569094 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094787802 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126704695 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.101192858 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1183584 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129927603 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117565205 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.126050916 seconds)
  done (took 12.474235407 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097773497 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.092299485 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121305436 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.092173035 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.117357866 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092060169 seconds)
  done (took 1.578362 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124059979 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118784483 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10587208 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12240276 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158359742 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11388145 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139214905 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100495366 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1362646 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13145974 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.11375111 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.140318196 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.120541976 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122925394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138977589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098548968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140739929 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094774017 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13059687 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095453641 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.132067041 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098109738 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120522942 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112490509 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.123947821 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098127532 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123636602 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131335564 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105350367 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125812657 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09907864 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124085889 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098292014 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126171591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.140323435 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098096036 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11853769 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.100525679 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124160374 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099588101 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.141849306 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095033095 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130597451 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100781973 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126319268 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122585962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100729239 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.121817735 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114424648 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126036304 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100247614 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123737615 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098784902 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125518642 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098798157 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12599108 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101030376 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139818759 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123490127 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09806121 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120977597 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099719508 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126448434 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099389641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12349985 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100550422 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123422926 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095039562 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121144493 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097835122 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126333335 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095445214 seconds)
  done (took 9.363909748 seconds)
done (took 35.156159982 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.681858279 seconds)
  done (took 1.645732747 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.832115428 seconds)
  done (took 1.799742041 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.550755602 seconds)
  done (took 18.539901712 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502179361 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.594358674 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.983973278 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16483751 seconds)
  done (took 3.21016206 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947028383 seconds)
  done (took 1.929115103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299401689 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261663422 seconds)
  done (took 1.532051995 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.794279544 seconds)
  done (took 1.769999774 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.536100374 seconds)
  done (took 2.511150187 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356400333 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201289408 seconds)
  done (took 1.544717999 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.570470694 seconds)
  done (took 1.549743825 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.750880715 seconds)
  done (took 15.735630026 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2456594 seconds)
  done (took 1.236920526 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304954752 seconds)
  done (took 1.288320166 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.641329194 seconds)
  done (took 4.626414759 seconds)
done (took 59.894796582 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105026471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129469405 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104352771 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.10165022 seconds)
  done (took 1.417608008 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108977059 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123996756 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101970728 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123801996 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106176502 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.125275206 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096602629 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131036844 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098543317 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12620052 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098612404 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.125727699 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126512125 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097357305 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122605377 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100984524 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128680089 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098819766 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124202946 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100594079 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12323468 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099669235 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127208523 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099330734 seconds)
  done (took 3.701305009 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104707107 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.096161423 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122760945 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094798674 seconds)
  done (took 1.410141908 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109565333 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13729794 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.110485109 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131243108 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.111678036 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137076934 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119892688 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094740457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097693122 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132426669 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09581095 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140625695 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137538596 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.089523575 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131521579 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092788817 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117235103 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111375457 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129827074 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106126935 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120189497 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104274678 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.127368566 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108631466 seconds)
  done (took 3.787888814 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.18223721 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134711507 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144226845 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.101645562 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.17075188 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14629977 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.093725237 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14632487 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094438152 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.142674838 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.123523239 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.14616417 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136253262 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123559606 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.09569603 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.127702494 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110410154 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.140573217 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.122883369 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10739547 seconds)
  done (took 3.585666424 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105405911 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119508807 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090974316 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.094578255 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126776045 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096847099 seconds)
  done (took 1.631824274 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094842007 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.089789593 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116067045 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089782977 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.12015257 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090186374 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088895419 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116570884 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090368029 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116321586 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089920446 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114677731 seconds)
  done (took 2.214839448 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.384391939 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118682832 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126561137 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094450161 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.137299821 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093197954 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133024992 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092250656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.15280401 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.099746699 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119331044 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097377826 seconds)
  done (took 2.641325467 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215197328 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099108374 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266381378 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.422497057 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158434434 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168708811 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.32921017 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165271612 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.187060926 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141392305 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197632622 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160585038 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157249991 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183774448 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144307601 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.179252325 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179322682 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204191055 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15220747 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207946951 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167189911 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171605851 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183098311 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155739026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114376267 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159665568 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122134077 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104553229 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175070821 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200429334 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177161554 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151648958 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115036222 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232333581 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217077581 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18137035 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.388463876 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135001473 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.194090009 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.185218251 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229009958 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143234174 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198314627 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157728704 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134360731 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184334879 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161132685 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184014011 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134807715 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11708041 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21173792 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180317398 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183355341 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112255439 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374691598 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149161856 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150109548 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192149112 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190059778 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193668162 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171273853 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12508899 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224148261 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181359963 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182348104 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148192822 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.169583281 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128619459 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180508626 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196827086 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180152225 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170582778 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.214833311 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110032091 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167398898 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171605188 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157105088 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182139676 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16488009 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123757531 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127270408 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13976155 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131145148 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.160771307 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126289915 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205883199 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138776199 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.270909228 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217335014 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162558539 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164390734 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167948945 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170881056 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151764966 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094918171 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151130512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164332958 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162801471 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134313442 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13327692 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149847792 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130259011 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158376889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099408097 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162967959 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137262828 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171808561 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168262097 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104207602 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168407367 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153340222 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161679902 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176191229 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190115816 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107711881 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136078946 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197762898 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163118564 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139884993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178136089 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188755209 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.168779653 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113116895 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199916058 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19850074 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118289014 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218739435 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116855679 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136952723 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153912981 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165065164 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159124276 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.130532406 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134488453 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156331718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197622399 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130317488 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111571804 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178610868 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129741604 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103946751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148341347 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140090152 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.117949752 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152903749 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143651658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159800421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164640548 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157920098 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161618583 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117478677 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224926208 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108401482 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164082023 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151661882 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093888667 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.210835314 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18643311 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104978068 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189083637 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173609063 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265523555 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166440217 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134079182 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184877856 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10537409 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124043876 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170571301 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164923686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166189579 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185377567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261814996 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171726339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1287752 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153941474 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170509308 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.177643713 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159705519 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.149315956 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166512236 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172032022 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098346326 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127820854 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130100535 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117433026 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134304804 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108337791 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21365192 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169949322 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230045041 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163135266 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144633477 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186154365 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129868227 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168798521 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175251983 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114967521 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186391715 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18633106 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1718574 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145964696 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174745623 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124473587 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10149851 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13715615 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170128175 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107895408 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139173614 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147576963 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185082584 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18050296 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153969333 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268048381 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174624009 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195873102 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097955841 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167689173 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17532039 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162556387 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189722744 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111024498 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163923684 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181628395 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147614945 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195477874 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167256567 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172783027 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201278703 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161513557 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134729213 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152760348 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172171256 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114956951 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165517564 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150125338 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138357801 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131399399 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139078895 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129567259 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186642724 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149715151 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184045646 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160766476 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177555805 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101322897 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14582928 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164848162 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151586836 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093564727 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175312515 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218476067 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118276802 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16333731 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17808716 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135082256 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.354878372 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219403922 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189954897 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140219982 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1182356 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165605925 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162797409 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170142058 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185451603 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147622674 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185078948 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161863615 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.117684345 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140169311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151745564 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126266422 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157732774 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136253216 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157221349 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147320645 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19046695 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148217739 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134073729 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168842501 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152158536 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158420262 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116383358 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2334762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162717585 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181730692 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131398254 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.170661197 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191311536 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128241967 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131661354 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.102776752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185326037 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137553432 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16296376 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.224591674 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272830683 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1636437 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173838855 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113764127 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129519324 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165341351 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152462278 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241775965 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143372453 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142060709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196924862 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15641883 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105505039 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166849892 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366068521 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147221053 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179425455 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.096905889 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.342865388 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104110068 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134794724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134126026 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174324638 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136695448 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188002053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170099166 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119763679 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16533739 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143022855 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255253305 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222762725 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176014396 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179773841 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14801986 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162693343 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169381957 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182108909 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1472586 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120204489 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167956074 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187457947 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.186718314 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.137978016 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168651645 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168874883 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163518734 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177707889 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108696709 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221342038 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1067199 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170616706 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145774791 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099182155 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164935813 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.253627523 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136921057 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181211861 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162523218 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108044925 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130427523 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154852869 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134737472 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147237076 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133542756 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184941075 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102819397 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167440375 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184478333 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135516449 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159171503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121323539 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13587694 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14770156 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120456856 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139317418 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173480623 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188166185 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106649035 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182120227 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205499314 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170029558 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163551034 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120783779 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665872875 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103189706 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186020941 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152949731 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190407255 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153813507 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172794178 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165777044 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15478414 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173781247 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154005792 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.195920623 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171168508 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161758157 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135952921 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147248402 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121498605 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135557727 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155953911 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167210555 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115575973 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.141460252 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16144376 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150533773 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.119661367 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144052828 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18871495 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152480292 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188554062 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186752954 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143122341 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171173259 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178119967 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105529488 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165115656 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175194623 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14612283 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155333815 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106156541 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139614173 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185223606 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099073428 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166031545 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168123544 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166979839 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169158376 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.138713206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163884723 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117714147 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166085481 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130931594 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159033946 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161181934 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10628954 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132037156 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159290714 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136008205 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161865851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13073217 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150483545 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180987759 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12981776 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137539365 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333792814 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164851417 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197567285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.15780917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139011217 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120568393 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159835136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160222797 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164787693 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.103091023 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137197281 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135065307 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183847534 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.130571361 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162691069 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199654897 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166766677 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193729952 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.14105295 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266670465 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113776083 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161132132 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1342539 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10516274 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146285625 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138563576 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120026152 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.258835683 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183691698 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15802344 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147800052 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102866652 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132035995 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10835412 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166231996 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159989277 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163648633 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147545527 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093582594 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148922936 seconds)
  done (took 79.38650838 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153129777 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148445594 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152732393 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199041805 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170526132 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246343497 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209579521 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231657326 seconds)
  done (took 2.591146243 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107071882 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.137796322 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142660754 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125912561 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095404257 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328488886 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140802575 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126479466 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.124733573 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140579685 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.121822404 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.566703953 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.097801161 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128330259 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.11817544 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094354061 seconds)
  done (took 3.670727927 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.279682836 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545509878 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.130988316 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.249391075 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23234626 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.155003728 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.758882774 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188142324 seconds)
  done (took 12.623992583 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130553137 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143014628 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.142158873 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.168029372 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.124907207 seconds)
  done (took 1.78983399 seconds)
done (took 121.430371488 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101420519 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.100387851 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127039531 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129223337 seconds)
  done (took 1.527210795 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.113751479 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.084117291 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.115467544 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084225581 seconds)
  done (took 1.474745633 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428510549 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.1140405 seconds)
  done (took 1.660901984 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122064242 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136774432 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.109393526 seconds)
  done (took 1.453084274 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111810776 seconds)
  done (took 1.19981346 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104903852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.102584971 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.144878076 seconds)
  done (took 1.44172261 seconds)
done (took 9.844398877 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11913084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.43954792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387864337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141909451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727833218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38296161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029951844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160277645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140420803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122373466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111018986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705995591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018754496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372916334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005701028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372099061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675524757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124987701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100148464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124387141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980169257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12192484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094943111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124849781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673455653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427955832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094473932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.385010867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094064289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127573713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383754463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122810155 seconds)
  done (took 16.971686541 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104186342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182770305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.101686252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125378494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098189233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124647195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104046486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137267994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183716141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094256819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140897217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093512301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128947358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09489208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143805723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094523429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126043385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096917982 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13041398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096630114 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142050696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093927134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124964186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097229619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121899726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106989031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122722509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10762181 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122582313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09898999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128067742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095779325 seconds)
  done (took 4.856512905 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149829435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192885506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131752215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130077184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174147247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096056182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.207350561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162794462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187240303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124700787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112112524 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122663942 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129561236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124617441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115341929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122635457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097344463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125560844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10108991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125250268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11413642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123922074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096712312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125813987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094777862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137987217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094434277 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137532968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095161696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128637735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100039486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123595307 seconds)
  done (took 5.205882964 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106355621 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131977605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111556093 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140345168 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097494359 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13109587 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.103802828 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126138847 seconds)
  done (took 2.041792842 seconds)
done (took 30.163834128 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11661123 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.099834679 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.137513327 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.107513239 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.133497442 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.118113586 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123235741 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105711266 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135943334 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102655667 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13932424 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093458527 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124502163 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093575889 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.107888029 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129174012 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109091944 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.133417859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.114352814 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138027279 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095451666 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135419686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104132293 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.143864093 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.115253241 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.145362022 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139533584 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101494051 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124218023 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097056183 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.111593991 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.148579808 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126407041 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111213338 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129037027 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0997704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.095829549 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.125493543 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.109806535 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134803347 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100394076 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134848856 seconds)
  done (took 6.07823908 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.125226095 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.166799693 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.09637398 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125862751 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095916875 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.161814713 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.159308835 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096487598 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.095949428 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.149487022 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.149579985 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.096452958 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.094895605 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.126376763 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.095636421 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.12492508 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.11906012 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.14898813 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.153749883 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.124578947 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.168641584 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.155341853 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.129184264 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.147932475 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.135841605 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.15884943 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.14510266 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.130278682 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.150575703 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.094424526 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.156305837 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.15552106 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.096002789 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.124215621 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.134951189 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.159330624 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.150916545 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.134268895 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.154921018 seconds)
  done (took 6.289341146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.118081008 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137907096 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117686874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191184753 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164244553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.108104273 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105359507 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.144629846 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140234195 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.095601937 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.105220305 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155784846 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140371872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103386462 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1004546 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141185121 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.143076838 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0987354 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09958709 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145168526 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115773587 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.139179098 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13735309 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106045195 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09537061 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133316565 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098325545 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.141599311 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100749656 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13227115 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099540397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128753349 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102132753 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.135690998 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099229238 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.13167291 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116612745 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13364081 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103867106 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158519453 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13718434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.099498652 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145636439 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134795254 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.125005999 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102779507 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131382689 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10467145 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123036662 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114098265 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134923455 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096833296 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.140523423 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096439212 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124547018 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110997486 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125789773 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098825603 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103058027 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133855576 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.144024975 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100827638 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11078824 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.127221356 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100708472 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125060382 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095843856 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.130446481 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117296171 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128535009 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165510403 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096481786 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.101310391 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135196799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10208406 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134778109 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095739626 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139560275 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105048935 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12949398 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.105779252 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12873863 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100716725 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142595467 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.109927306 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132125611 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101425055 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131654392 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099533775 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126161474 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109252272 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128660168 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09997002 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142773853 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096611862 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128217012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103372856 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129761759 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095272702 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138163508 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102003073 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124962962 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106648847 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096543102 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131361758 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105976191 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129588243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096024444 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129974815 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102585374 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125587303 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099752222 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130129943 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098178863 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.137880369 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103667379 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128220812 seconds)
  done (took 15.147562189 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24419991 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.222602624 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.198605573 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.306516794 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149768511 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.122843466 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.218004784 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178354295 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095799103 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166477598 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.181106007 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.193273128 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.181637799 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.191713526 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.1830761 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127731378 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117157816 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.178529786 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.221399806 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.302763256 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116084723 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.142487586 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167917728 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.166106082 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.115557895 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.144125098 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.154940946 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.119726561 seconds)
  done (took 6.02156343 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116729685 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166021229 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.103882138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157318841 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153475995 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098385878 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.13207335 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097159762 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140562985 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.110512346 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.127976309 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103759122 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132819691 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106320357 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.127541997 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105764407 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.136871571 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.105966451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130644485 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100177965 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144766413 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.114267243 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134218897 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101995241 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.145885073 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.133688406 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.098495295 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148043395 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.134803768 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125701439 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124708351 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105659104 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142050273 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096860269 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134238456 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.099399435 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127822763 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098550721 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097994456 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12500403 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095976346 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.118284792 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102447931 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141985256 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103389168 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128528185 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102117492 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131362908 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104054202 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.124431671 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098858364 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130218966 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101361689 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143238816 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100390139 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133593312 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100252788 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126824891 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106331724 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.099812181 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.125076844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102244482 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133396919 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.132100677 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105535021 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103132 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.1314564 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098727131 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.132830199 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103688957 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.130711336 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108305861 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124428597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098418466 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138369267 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10847434 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.131740211 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.10180134 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134152591 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096697816 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.117783431 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09597859 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.084112746 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.132911378 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095498552 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.133352229 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099809135 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133570133 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143514321 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.10613542 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135294067 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09742283 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132969874 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101668075 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094884247 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133028224 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113947351 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148615711 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125997991 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095266476 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.143315808 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098517268 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094458352 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118996399 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106544805 seconds)
  done (took 13.53878206 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141203024 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.178569675 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128776308 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116228744 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.162168962 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.168814185 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105786399 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105998407 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130149033 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116809029 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.134312459 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105829329 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134465094 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.11231254 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170692461 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138107524 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097779869 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142758625 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102590086 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.182213653 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147078233 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.136861351 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170986242 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.134581935 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.101846601 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.164772706 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.172227937 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110803276 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.1405132 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172447943 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110424673 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.172422752 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173620134 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102474925 seconds)
  done (took 5.82146767 seconds)
done (took 53.986935947 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.212738191 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.444263535 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.191281278 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.193134331 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.252534886 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.214792686 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.196102028 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.388622304 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.010255458 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.182816678 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.192286243 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.19474393 seconds)
done (took 27.799378243 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.27565983 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.362310386 seconds)
    (2/2) benchmarking "String"...
    done (took 1.508275432 seconds)
  done (took 3.989618522 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.194492595 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.193542737 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.440338482 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.20660941 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.192999326 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.208817289 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.195391103 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.197700331 seconds)
  done (took 15.756251442 seconds)
done (took 25.334283702 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.25689964 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.384680509 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.469631454 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.207248723 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.192222386 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.191487234 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.211076433 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.244757572 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.19637015 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.205999739 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.191578876 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.462921236 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223842992 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.578473569 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.207800132 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.194874299 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.214564427 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.409510682 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.196745937 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.200475548 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.197181984 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.201231086 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.210577226 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221343471 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.228396638 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.195653846 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.209706134 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.193394029 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.408783813 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.219446905 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.243198153 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.196688908 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.210845367 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.198308098 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321783657 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.227653485 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.379744188 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.209469428 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.18303032 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.203217257 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.383452682 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622658463 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.196183599 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.203051189 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.208319082 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.242837092 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.1895796 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.922904066 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.199108039 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.20773323 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.24536544 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.608684137 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.203384112 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.205077898 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.194808933 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.431484321 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.203211151 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.247426729 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.236571102 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.196748533 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.196209418 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.194483632 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.258505038 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.21035584 seconds)
  done (took 143.229640445 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.198368708 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.20329059 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.200944601 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.21867484 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.201785726 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.203583943 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.200440361 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.200783453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.200987184 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.226355476 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.203863769 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.196229881 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.204290086 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155798151 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.200445169 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.223595068 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.20299182 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.203746291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200314658 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.2045284 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.209590666 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.204183589 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.215620846 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.201738751 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.201049072 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.274977197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.251944816 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.206977509 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.199227449 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.204935174 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.247771756 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.225368907 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.837828043 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05735187 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.208275693 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.229439065 seconds)
  done (took 80.153294998 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199552252 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20282968 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201194305 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232152793 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20408136 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.800183554 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79934418 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.934465895 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.617594668 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.621640475 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523084026 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.206865171 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299214207 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214690649 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202298914 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221557517 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23106282 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202559989 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202234248 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802773 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220189087 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.437038754 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378467581 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.217648365 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236517572 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.605372432 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199486549 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235994094 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54234654 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251247224 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199500315 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613789134 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.184536591 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318007574 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204120052 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237902053 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207713655 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487925236 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201426118 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202057201 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209194745 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209362102 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915990249 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208229349 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.809652403 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20549442 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205279531 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206985173 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204621567 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.553462856 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.949729471 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22275239 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206066636 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209919547 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205473548 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205203317 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.239760521 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.482504376 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.32097993 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207096692 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210468706 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238990218 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.209137548 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.408121609 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202336597 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.653160904 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.267221245 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.417088521 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80313301 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208651214 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304708487 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324440474 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202184824 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20738055 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209508471 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205157361 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318766689 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205402733 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.6435937 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.380976019 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220734959 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.638674449 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308717913 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205990964 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613277605 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206575606 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209168392 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020612847 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.210394956 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305618712 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203793969 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.207613904 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207225123 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.641669205 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801822453 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482287644 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210219069 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.929192575 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208571024 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.648938451 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.780860341 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932047367 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212623139 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323833432 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.382785637 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21756339 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.212259027 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208019115 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.64266151 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.213236803 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21020823 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209181222 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269749227 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60601861 seconds)
  done (took 368.733956287 seconds)
done (took 593.237336455 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.939262132 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.887909383 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.025077951 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.915365987 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.880408493 seconds)
  done (took 10.778710276 seconds)
done (took 11.908763433 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408151444 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408564001 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272660278 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.408544161 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243310041 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426727104 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387911529 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231007318 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316531006 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.296528281 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314435819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267801852 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246601141 seconds)
  done (took 18.360588021 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554599354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.212200782 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294322829 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.597156317 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25232173 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545008901 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42402091 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.229767681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423527737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227326095 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221893143 seconds)
  done (took 18.116347446 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.56197836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.213725953 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296683781 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.572244522 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251952321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557160077 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431435588 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.229285669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416321435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227488199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223452122 seconds)
  done (took 18.115833841 seconds)
done (took 55.726642684 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.253347596 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.381652062 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24575372 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225196887 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22038786 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.223334612 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227067665 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232237684 seconds)
  done (took 11.142872942 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215461152 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216623964 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215092142 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216064827 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214738848 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219932412 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218116224 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221058049 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21508391 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219060795 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218470688 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218581765 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219113501 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.713269282 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215419781 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.217184458 seconds)
  done (took 21.108200954 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219401452 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.216049871 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215197118 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218322284 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21527672 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215650064 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217141521 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.214745356 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215716213 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216496811 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215826871 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21631191 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214493935 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215323294 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216213345 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.215283924 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215670934 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217603105 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220957154 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214342044 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217896697 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216501915 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216843766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216169411 seconds)
  done (took 30.329290536 seconds)
done (took 63.711662273 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.221996092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.230346263 seconds)
  done (took 5.584191631 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.276292948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.279001166 seconds)
  done (took 3.691013752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222465082 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218548632 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.219529261 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220373783 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220817943 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220399089 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222425495 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218925464 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219924794 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21769206 seconds)
  done (took 13.334905696 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.220108715 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218444234 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215909902 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219820322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219428918 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214196205 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220166468 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.22020998 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217648869 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216677768 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218138695 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21588603 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217650743 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216114164 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219398845 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217535259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216187384 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215983473 seconds)
  done (took 23.054430338 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232110491 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239523529 seconds)
  done (took 3.603798632 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.34713573 seconds)
    (2/7) benchmarking "second"...
    done (took 1.258539762 seconds)
    (3/7) benchmarking "month"...
    done (took 1.325992521 seconds)
    (4/7) benchmarking "year"...
    done (took 1.313851914 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.256972608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.238425488 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.25732593 seconds)
  done (took 10.132787915 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221639313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.411421571 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.528543783 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.817408105 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222479519 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224657097 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090094488 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224224585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224939209 seconds)
  done (took 14.099531849 seconds)
done (took 74.632822699 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.213751094 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.245985175 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.221844907 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.222581958 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.511695179 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.232019692 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.213083594 seconds)
done (took 15.993788772 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.207384448 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.198301032 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.222167677 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.211343301 seconds)
  done (took 9.973128402 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210990924 seconds)
    (2/2) benchmarking "read"...
    done (took 1.557990564 seconds)
  done (took 4.901468789 seconds)
done (took 16.008439717 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22000699 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.217697071 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.219052316 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.220064173 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.215740285 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216597225 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.218489349 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.218105582 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.218831526 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.217914087 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.217333758 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219653311 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216940188 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216723398 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2177819 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219744465 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215135901 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217719886 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217138721 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217611207 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217823318 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215944728 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215825602 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218928403 seconds)
  done (took 30.359071003 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22084116 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21559805 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220722124 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21943224 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217005932 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22003699 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219762956 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.217760091 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220592508 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220508678 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217530302 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.219302773 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219804891 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218308261 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219036244 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218584901 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221017955 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217729328 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22107059 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218089876 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221416506 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217708277 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.217701853 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220806526 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218542462 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219421718 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222100874 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.219352032 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222297576 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217949595 seconds)
  done (took 37.716139622 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226700208 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231195215 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.221344691 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220496608 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223725957 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221154487 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220414809 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221192251 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220860796 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.220672099 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.223489577 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222204099 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221865253 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220457265 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223667321 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223299721 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.220178364 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223127444 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222670025 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.223283831 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221972124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221495492 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222652416 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22389515 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222439899 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223436734 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223115462 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.222131552 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222736743 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22423464 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224684638 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223124969 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22369189 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222057549 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224040999 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222392524 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227793411 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233588021 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224654581 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223891876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222870243 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.222415843 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224135411 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224247142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224365354 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224553867 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225032461 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223148086 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22376626 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224104464 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224344186 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223004707 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225237042 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225492172 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222187309 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222696378 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.224805829 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223511389 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.221336591 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22392565 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.225213971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.225216411 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224817984 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225335359 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225782326 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22396945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224103215 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225263714 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225091913 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22608013 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225111252 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.2253479 seconds)
  done (took 89.244913023 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226416066 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223284272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225161615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223408638 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223690728 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224850601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222289888 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224612348 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22325257 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.226543265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226825625 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223813033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222491268 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225634421 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224767877 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223748468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226997329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221917625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22485582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225960363 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225887279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223376661 seconds)
  done (took 28.080052193 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227522532 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225962055 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224769392 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227721167 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225405121 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22570403 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22840482 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227563663 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225801194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223529725 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221788839 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22702461 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224401763 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223211653 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224431308 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226605138 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227673531 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225502641 seconds)
  done (took 23.202694445 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226336863 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224681609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225449764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22667173 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222482404 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227066067 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223969381 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227105668 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227615082 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225979254 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228235321 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227646961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230604406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22567628 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226331217 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224659146 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228540463 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224618473 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226970554 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226779511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226228288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228871421 seconds)
  done (took 28.123898463 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228145137 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228818997 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226274354 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225535697 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226750526 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227186995 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229766921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225860935 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.231137218 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231153146 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226851487 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227715447 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228188683 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227958356 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225750668 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22560079 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226941372 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227647741 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229343177 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22604588 seconds)
  done (took 25.695675213 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240073447 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237936783 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24007746 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239900641 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239320189 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240298735 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239492832 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237597152 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241417977 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240449739 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239797566 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23954809 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242454024 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240585893 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239721135 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23937134 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240916492 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239751649 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241488847 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238511403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241978673 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240520204 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242432277 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242350287 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241308138 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241695383 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240623607 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240494861 seconds)
  done (took 35.874712866 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229368366 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22898013 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.225094232 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.227640844 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228556381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.227360375 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227297899 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.224808628 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23165344 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228305178 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230065803 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229310498 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230492528 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229400555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230158281 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.229607952 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231261533 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228626101 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22842249 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228518319 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232373809 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231600407 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.231111397 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226777887 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22875377 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230247141 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229117361 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227272928 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231759343 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226941656 seconds)
  done (took 38.015482293 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.275856597 seconds)
    (2/2) benchmarking "in"...
    done (took 1.276076937 seconds)
  done (took 3.695887433 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229000439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231660457 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233486609 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229075736 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229967498 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232188657 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232642908 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228799174 seconds)
  done (took 10.99110287 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23279913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234656309 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231033418 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.23282219 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230827339 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.231235516 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240453677 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252428034 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.231678513 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233970099 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240327624 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.239710863 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.233801748 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232014812 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.231984106 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235399922 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.233817334 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.231950373 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234806476 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.232583737 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23010467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23388332 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234737567 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230629906 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.232548036 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242753238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.238501258 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233342418 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232310201 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235164051 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231610522 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228134597 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230254375 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.233185072 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23475222 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230517703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241739844 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253031137 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234686952 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233248587 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234197904 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228650014 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233008149 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23141721 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233390744 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232513705 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233730139 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229375826 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230874694 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.236465089 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240950772 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228980686 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.231227353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233294121 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231350735 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237162831 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.253998512 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23640642 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.245387272 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242490981 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.245666389 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.2560817 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230222708 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.233016701 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243522153 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258967797 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242083428 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250204759 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.229785659 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233376925 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.237973304 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244914754 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.257719401 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.232356736 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234263712 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233042266 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230669886 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23193273 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238273704 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.255234514 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233280857 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23521816 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243637684 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258343957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23363213 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23390077 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234243847 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233927123 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235187144 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24891103 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257228663 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23720536 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233018281 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.235067235 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234385941 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235672341 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233394619 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235253163 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.23243272 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235572943 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233959504 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239150416 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.243069106 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234674715 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235797385 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240757979 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.234216794 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233114919 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239911449 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235987722 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23757011 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.239047267 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24081106 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.232864919 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238333478 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243566384 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.234622287 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.235989964 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235442408 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236931651 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245512012 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263094265 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238123727 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237608783 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23962495 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249141547 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236778256 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238578411 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237660776 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234069795 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234197981 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.237990441 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234602493 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236583746 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237763841 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237660306 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234528693 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238122829 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236679448 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237956168 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237127712 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.236753759 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237090721 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23933421 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238585567 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.239885824 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243323789 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.239021642 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23800253 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238540483 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.233657034 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238291825 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.237335022 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23896607 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.23850407 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238582291 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239962431 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239926545 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240369297 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239817408 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239380631 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238815533 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243711742 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239687095 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241546962 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241214299 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235264352 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239799006 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239826573 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239020172 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241122479 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235544977 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243358667 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250169192 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239485356 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241340543 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.241764081 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23962098 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241800848 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243659644 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.245669797 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247525232 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238475732 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246699669 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.241545243 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24140538 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242836532 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238554402 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23740752 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240603934 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243781893 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250473175 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251051909 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265415583 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241522326 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.244139179 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240088363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245313258 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244341934 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241066216 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241627984 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240305409 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240991379 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240289446 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.24100412 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24081427 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.239538929 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.240127319 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241651118 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24136184 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240941914 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.239267615 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24161055 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.237641515 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240247587 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23825242 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.240514039 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.237871734 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238651047 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240238692 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238570083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241387052 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24655788 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239597906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238148586 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240104539 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240666908 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238334391 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24171311 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240323039 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23840565 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244249494 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26034569 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.240287032 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246111093 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261272737 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243142158 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.243079455 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241929701 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.237024229 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242723192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.250005036 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.238634899 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.240141942 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.242201058 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241073159 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242419216 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246381369 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238529162 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.23903677 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242047712 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241240936 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239134423 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241697267 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241301132 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.240450354 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24086106 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241457013 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241938776 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238540686 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239653921 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241132929 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241636507 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243976571 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249045236 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.244272302 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241563745 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.2422859 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242282732 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246222783 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.237900577 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.238874252 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241123167 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251393659 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.264508577 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247837323 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.244359244 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.239921215 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243436829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.241976178 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.244747273 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238900511 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241838658 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.239700578 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239544042 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237595473 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238327517 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.240627928 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238724418 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24246796 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.245674333 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.240844138 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.2408265 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240870594 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.239977375 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240420442 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.237725791 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.23944483 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.239109753 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241129019 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23871066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.239504442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246541711 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259373774 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.239922114 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.239908805 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.240161299 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238303635 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242453279 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.239387675 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243200874 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249688408 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.244705005 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.249978227 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.24095503 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2485968 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243124638 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.242682187 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.247535323 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239251029 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236417493 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237863108 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.238942918 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24604935 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.258363344 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.240189548 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.243813082 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23900858 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24175373 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.241773568 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.240335918 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240831579 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242591134 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248868564 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.264805443 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.244763863 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241035457 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.239179422 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.240634919 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.243128989 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.239459329 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242825648 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.241869292 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.240828861 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.240223237 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.238822013 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.240761492 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.241487054 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.243217959 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.239203983 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.240606284 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246597585 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.260485909 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244803381 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240821621 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.244931823 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241234073 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248752696 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.260376846 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.241865074 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.241864755 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242815934 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241016866 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.240687841 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.239784006 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244201217 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.243115443 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.247147077 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.241876862 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.244369673 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240105302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241669447 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.242291209 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250772527 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264511752 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.243511056 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248150874 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24010737 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.241641663 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.246804067 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243416747 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.239812437 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.245582994 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254945788 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251496866 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.241425602 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.24194573 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245085546 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243824735 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.243520995 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.242633309 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.243470244 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243996803 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24206558 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.243349068 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247049671 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.243775063 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.244563028 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243915454 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244092608 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.25342702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.244906865 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.24560745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244065991 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24635043 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244338476 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.245159832 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.243931803 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246836365 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24615702 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.245110945 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252238088 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.25298105 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246942003 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.245005113 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245382594 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244548207 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245152913 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245793948 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247701569 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246436865 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24771322 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.244333417 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.245667121 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.244295492 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.245074398 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.245562012 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247215287 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249861104 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.253816641 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245221564 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.24408732 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.245625945 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247006065 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.245071244 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246072194 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.252647001 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248967323 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.259975407 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.254720593 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.253351613 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.247698346 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249265999 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255314876 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243549091 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248125527 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24683123 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.246721525 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24897731 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.249154638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248504327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.253555047 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.247247627 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.246719659 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256745874 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.268607042 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247466275 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.249598719 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.253845784 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.248160167 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246190594 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248595749 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.247697325 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25391972 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.267909141 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250303297 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249879102 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.247302108 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250097141 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252341184 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249535212 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.248044513 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.2462559 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.247785388 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250295739 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252711674 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.246499929 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.249011327 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24975942 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25104406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.256608633 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.245879802 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250606388 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.250595411 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.250875159 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249662425 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251893504 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.24606281 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.24740489 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.248765184 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251238183 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251923588 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.252671381 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.249882456 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.251629031 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.25325004 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248555029 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253255654 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.259154755 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.259811497 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249223575 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.249970099 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250394046 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.252134263 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253494098 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.25154634 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250204902 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.252761537 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.251858039 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250464159 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254227483 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.252971529 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266450395 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.273904758 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25035831 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.250266138 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25386376 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254383615 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.249540074 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253015159 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.253439754 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.255135728 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262286805 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253094235 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258893685 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271914086 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253340334 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257613092 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.256481739 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25912605 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.255572914 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25321393 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.254353591 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259022168 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.267923521 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253935594 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263483554 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281002014 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271535763 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.255640909 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.25648806 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255056017 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25551593 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256376982 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.254975221 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258310178 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256712696 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.256054844 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.257624653 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261310089 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256800349 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256923138 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.254827978 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.260450353 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.254331371 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.25973793 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257472803 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257047419 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.254780443 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258140196 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258926892 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.258159294 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267614479 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.279897209 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.258006173 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.255832412 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.255941291 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259095811 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259183434 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270709005 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.265412948 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257282819 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257836908 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259696724 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258385189 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.258166495 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.256514242 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258054464 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256668743 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252646015 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270002338 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282675412 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261876785 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.258759169 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257145902 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.257463624 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258299597 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25668095 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255802493 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.256085147 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260629002 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262022029 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257982383 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256682502 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.2593999 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264792217 seconds)
  done (took 743.161078812 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254650172 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254417185 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254722738 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255503372 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255384532 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254612744 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25433284 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25485477 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256223176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255074806 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.255348105 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255773187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253668453 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256558032 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254248763 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255195662 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255220786 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255917165 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25807313 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256164854 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256011765 seconds)
  done (took 27.529263869 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.258687515 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25668201 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258271545 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25892093 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257091986 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259306749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256015807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258841664 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258258523 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255664869 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258250017 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259597324 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.256998592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.257764602 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256700737 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258703965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258613002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256595222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260599864 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25857733 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261497195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256165651 seconds)
  done (took 28.847813946 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.261309713 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.262815088 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.260335324 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.258270401 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.259618687 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.258997036 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.259125018 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.26255021 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.262462745 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.260103804 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.25984654 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.262519335 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.268818375 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.26543142 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.260786867 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.26129522 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.260545182 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264368883 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261429547 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.260727293 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267940933 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.262651438 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.258573588 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.260421372 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263089913 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264568334 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.263470113 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.262328662 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.265295928 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26999159 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.264633986 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.261172066 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268068789 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.261643088 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.26455878 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.267874208 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.261897125 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.261810334 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.263257068 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271978421 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.283015682 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.262513679 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269244919 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.265359179 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.263677209 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265284722 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271652799 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.26342014 seconds)
  done (took 61.829183808 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.262006681 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263185974 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.260550942 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262391466 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.262056746 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.261983356 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.263506126 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262801429 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.258692043 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.260899531 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.263884312 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.260372743 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260173761 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264894323 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.262871252 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.260675232 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258567127 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.259657271 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.261895253 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261360595 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.261741516 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.26375605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.262458511 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.260842864 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263896963 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260518256 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262437149 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.265389674 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.262339491 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.261605065 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.264867284 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264194395 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264704299 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263750903 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.262648542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.266606449 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264212511 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261933135 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263902075 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263404869 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.266182085 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266246987 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.265318039 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.266032247 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264027186 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.262947514 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264179133 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.261949146 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263077603 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.265853527 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.265885653 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264177486 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266662466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.264430214 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265242673 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.266864305 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265409453 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.264214282 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.266553391 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.265653754 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.263419585 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264925758 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263300661 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.265817602 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.266494842 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.26350697 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.265117737 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267042445 seconds)
  done (took 87.091951234 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266737315 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.269866039 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269031439 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268634852 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269346072 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.265544066 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268201613 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26868507 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268585139 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268428279 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267135543 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270112777 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.267522578 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268769595 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26565547 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269762744 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267334645 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269116466 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267981632 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271354488 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.268544534 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268799195 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271389088 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270358287 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26994331 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270369691 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268872244 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269681828 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270796382 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270367295 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270862328 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.269517506 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270267867 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269655341 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.271523753 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.271417686 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271002154 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27082039 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.269528992 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274168583 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271249681 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271324683 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271734096 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271196296 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270051837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272150767 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271026352 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270817792 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271372433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27026328 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270999697 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272229296 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270829019 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272995011 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269935425 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271389183 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27086557 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26960373 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273278078 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27117578 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273704724 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.275025011 seconds)
  done (took 79.926244621 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273402653 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272105035 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.269273605 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268132132 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270340608 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269718124 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27041263 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.269988522 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.271705411 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.271959636 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273833646 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268922916 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270836014 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272438781 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269116717 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270961289 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270820908 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270504757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272493062 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270227582 seconds)
  done (took 26.595995889 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.271232724 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27292525 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.271469808 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269951136 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.272955133 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270748463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.270378818 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273548775 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271034632 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272302861 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274727523 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273789031 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269704423 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272302851 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273172256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272731093 seconds)
  done (took 21.533489779 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.272052208 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.274709864 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273186684 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.274250229 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.273813757 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.269004456 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.274463676 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.273270476 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27235354 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.275191698 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.275582722 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.276603433 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.274064597 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.27456458 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.276038304 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276418658 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271577058 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.270948019 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.276187668 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.275301687 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275696956 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27420737 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.276754871 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.275925305 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.274039145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275066246 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.273585281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.271005869 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.271779359 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.276623397 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27279477 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.273680601 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.273034277 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.273346701 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275808426 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.273269556 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.277248095 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.275557082 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.275960218 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.27656524 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.276514403 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.274322033 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.276564996 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.277365281 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.273191973 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276399629 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.274598211 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.273970509 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.272876113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.275257961 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.278250624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.277037004 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.279527695 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.279231764 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.277914943 seconds)
  done (took 71.296822854 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278683513 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279470212 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.273992765 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277737805 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276798486 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273517023 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275303598 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276051479 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276063172 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277810827 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276259546 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278256074 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274482045 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278573893 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.276188847 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27731793 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27632614 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274893648 seconds)
  done (took 24.16269627 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.276578776 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276100422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.276709146 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276894396 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.274691621 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278285624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275780745 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.278277247 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278738163 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277479555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275544613 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.279558034 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277386155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.278653648 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278677307 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275616567 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.280369984 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278560827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277293359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276970735 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278828522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279179936 seconds)
  done (took 29.289866142 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.277841123 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.27787963 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.278025205 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.295900972 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.297492961 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.27882089 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.276881248 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.27890683 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.303524643 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.332973238 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.328492027 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.303084352 seconds)
  done (took 16.716692438 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281332973 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280941143 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282574578 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283935603 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284450128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283683703 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280182687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279146285 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281309177 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279205717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276949054 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282133707 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281487428 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279176249 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279858282 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281064676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278491388 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277144813 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279390228 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281129406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278844754 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280580354 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279219161 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278901638 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279967864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27986092 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280145955 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279609109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277318538 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281749837 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280483505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280427036 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280858132 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278803693 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282500048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283168196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280309721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280967712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278642055 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279800288 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280957431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283808981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2834037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279400329 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282833236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280806521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280786142 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279440574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2797892 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281729809 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280284737 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279496085 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281110679 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282841949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283460372 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282774872 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280414388 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281319409 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283543492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281517635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281276105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283560665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281979372 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281208345 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283401024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280190363 seconds)
  done (took 85.728242381 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281486149 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283244077 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280867345 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280858787 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283378146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283064185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28177593 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281462291 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281596313 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282623499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284843937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281581424 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282869073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282384156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28239869 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2808345 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280011527 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281832967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282405783 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285405031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28483636 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283924206 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283561384 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281199393 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283497496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286171857 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283242319 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283865676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284628065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285066647 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283968621 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282473811 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285657841 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285045451 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283968637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284609425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284078001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281304115 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282011441 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289175539 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284001239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287372212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285513039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28411733 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285292614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283124651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284655492 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286747016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285738652 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282934242 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284825371 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284407965 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284255192 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28441157 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28404844 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284170395 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284306252 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285000331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284223166 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287970202 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287485929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283258664 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288014008 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285593037 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285063247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284938493 seconds)
  done (took 85.932516503 seconds)
done (took 1741.773223153 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.450571241 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404703905 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.286681701 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.297032216 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.283570124 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.280858446 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.293777816 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284608899 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.286985482 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.285351853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285937064 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473344775 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.281923184 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285592139 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284782871 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.381269894 seconds)
  done (took 26.342579752 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.315978141 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.294655129 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.399733712 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.30832988 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.31428988 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.46959602 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.345822625 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294040699 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.454836263 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.334212079 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.283843397 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317025213 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.291105516 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.292355861 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.311333966 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.467825506 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.529606125 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.28923973 seconds)
  done (took 28.508610521 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.714766034 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.288314866 seconds)
  done (took 5.199527522 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.312412413 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.296298719 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294292905 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294037816 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.282985015 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.282982767 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293045414 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.286216754 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.280616871 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.411209049 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294513975 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.302930461 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.309947282 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.294924144 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291228937 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330940932 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445056746 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.290199906 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.289873141 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.295675416 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.293383227 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.375709569 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331701428 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291509423 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.409691496 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.29235272 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.294322819 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.299207653 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.489243321 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292962467 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290855251 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293925727 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.2945271 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.20937656 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.720460921 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.292825221 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.316184765 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.301931335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29124678 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.438319937 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.294692584 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.301158306 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.286129058 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.699348065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.435062009 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.407421044 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.296622494 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.292690949 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.296397293 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.353106639 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.292039213 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.295347509 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.336369453 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.071002873 seconds)
  done (took 82.858587688 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.296519659 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.2840252 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466815428 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.312008602 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28579047 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286857606 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.28327991 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558395182 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333756779 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287053172 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.577783049 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817321593 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.302573277 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.333745071 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.133616399 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349117109 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285351215 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299509564 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.289702408 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.285643598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821051433 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299129154 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.287244036 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.510165936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.323354547 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788595632 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28261356 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287344849 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.286809904 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.283130356 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.781852848 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.300832494 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.34965335 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.283238832 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.558635533 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653851531 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609097726 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.286909629 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333523539 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287576474 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.286774351 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769950586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628060666 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.28758249 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.287662244 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777440662 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.285223125 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.300189388 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.289901037 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533849417 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.289482958 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.290367949 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.301335017 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.286866048 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.286773365 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.358312851 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.364629613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796889029 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288911564 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.289630677 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.294771713 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289837094 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.292151853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289987478 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.294931505 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640069491 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.437458713 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.295892405 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.638460186 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.775755647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.306586299 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855705879 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306660354 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304392092 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.428036016 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296397541 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.29563662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787657323 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.312871193 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285810281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621011951 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.289212068 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583806639 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.307943168 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288210926 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835506444 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.300438688 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.343232253 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.289417349 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.303939115 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.291428327 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301606523 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.565306315 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.33493585 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.291490001 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.291372053 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.335448274 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286422634 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.293006066 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.300090686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843457642 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.315367704 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.291961666 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293210796 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295264049 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.287183155 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.295407095 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294024102 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554453114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294504975 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.294822279 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297497731 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.288104244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.297687584 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.52375835 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.301674623 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.583870925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.291376078 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292802016 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.295922825 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290358197 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.2991728 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289283837 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.293701011 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18285195 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.592227593 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.308038992 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.303314225 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295237709 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293286557 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289375622 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295069098 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.329051655 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296453602 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02212299 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331809949 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.32135165 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.297186947 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.299650812 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293878343 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.295144818 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294768909 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583337949 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.565489847 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.438288852 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295741147 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294680461 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02336591 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.355015593 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471526518 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309750318 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295925033 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542499615 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.520709971 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.296065117 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.290804705 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.298039392 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549137124 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.29643428 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606129495 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804509957 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.312286738 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297294013 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031008265 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.006631348 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.299455258 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.297858692 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.573683585 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.314620231 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.295892583 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.297445786 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.295465258 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294878927 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.302726602 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.304694173 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.295624197 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.298217058 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.41424695 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487270011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315061157 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.305018659 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794933977 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.312461404 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293548413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313212864 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293680246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.296546859 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358537252 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.303101122 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.335431746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.297184947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.30506766 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85126781 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.300205183 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.301070552 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489427869 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951561673 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.311650578 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.300125181 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.314070282 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.19240296 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816873509 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.369027667 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.595735105 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.305835165 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.335818814 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307601726 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315254394 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817393119 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304199846 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315775859 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92623641 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.316513967 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.148061976 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.295581464 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.302289534 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875450183 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.315497342 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.304161492 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295865753 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30322827 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593612878 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.302104219 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.319795222 seconds)
  done (took 489.09441714 seconds)
done (took 633.197224694 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.300649081 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303616559 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.28968967 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.31006543 seconds)
  done (took 10.414492933 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.314649071 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312197871 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324185597 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311139708 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315671587 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.310694182 seconds)
  done (took 9.10137944 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.303539405 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309561129 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.309295263 seconds)
  done (took 8.136367708 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.502005537 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.326813635 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.613148098 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.318514008 seconds)
  done (took 8.973647337 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318844053 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.32214576 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320932334 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314168729 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315526684 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.313104246 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.310064356 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.312709834 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.313367862 seconds)
  done (took 13.05190191 seconds)
done (took 50.886101811 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.194838722 seconds)
    (2/286) benchmarking ("sort", BigInt, false)...
    done (took 2.323051314 seconds)
    (3/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.367954221 seconds)
    (4/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.639492543 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.575584297 seconds)
    (6/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.311835671 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.386187117 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.34303589 seconds)
    (9/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.110667359 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.345767957 seconds)
    (11/286) benchmarking ("sort", Float32, true)...
    done (took 2.302003617 seconds)
    (12/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.015049861 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.32350196 seconds)
    (14/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.292414607 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.131160904 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.304280858 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.295000969 seconds)
    (18/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.350606127 seconds)
    (19/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.303371753 seconds)
    (20/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.433585958 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.291250893 seconds)
    (22/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.308860205 seconds)
    (23/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.291862265 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.499012785 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.177185861 seconds)
    (26/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.824061239 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 2.303777432 seconds)
    (28/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.291916492 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.435129546 seconds)
    (30/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.483140033 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.11729158 seconds)
    (32/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.643919472 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.332231151 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.302644508 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.292522693 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.313040372 seconds)
    (37/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.159289387 seconds)
    (38/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.29329449 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.292992414 seconds)
    (40/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.169409381 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.293675063 seconds)
    (42/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.894127779 seconds)
    (43/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.400707005 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.292541428 seconds)
    (45/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.320364215 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.499577307 seconds)
    (47/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.506877915 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582837536 seconds)
    (49/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.291303559 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.312094901 seconds)
    (51/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.293252251 seconds)
    (52/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.292782266 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.305872728 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.392309703 seconds)
    (55/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.87739086 seconds)
    (56/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.307125232 seconds)
    (57/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335960802 seconds)
    (58/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.293021081 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401273349 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.322846374 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.294533736 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.036026394 seconds)
    (63/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.309773958 seconds)
    (64/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.340492526 seconds)
    (65/286) benchmarking ("sort", Float64, true)...
    done (took 2.296743294 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.408957278 seconds)
    (67/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.297054508 seconds)
    (68/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.6356524 seconds)
    (69/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.411739033 seconds)
    (70/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.548171352 seconds)
    (71/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.309155264 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.279976584 seconds)
    (73/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.279246651 seconds)
    (74/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.467151458 seconds)
    (75/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.174612419 seconds)
    (76/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.028075822 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 2.292199862 seconds)
    (78/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.270241805 seconds)
    (79/286) benchmarking ("sort", BigInt, true)...
    done (took 2.282368835 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.285115488 seconds)
    (81/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.283082944 seconds)
    (82/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.292171385 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.292909318 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.275520309 seconds)
    (85/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.25203649 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.256604657 seconds)
    (87/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.254953711 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.649688672 seconds)
    (89/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.323763499 seconds)
    (90/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.285269741 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.253712153 seconds)
    (92/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.244403537 seconds)
    (93/286) benchmarking ("sort", Int8, true)...
    done (took 2.254298937 seconds)
    (94/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.855482773 seconds)
    (95/286) benchmarking ("sort", Float64, false)...
    done (took 2.258396226 seconds)
    (96/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.266598183 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.263137484 seconds)
    (98/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.282915017 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.472589691 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 2.254115275 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.073820945 seconds)
    (102/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.249212361 seconds)
    (103/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.24329375 seconds)
    (104/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.832871885 seconds)
    (105/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.25424427 seconds)
    (106/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.244603405 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.789575604 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.982005923 seconds)
    (109/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.382557026 seconds)
    (110/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.33859999 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.634667266 seconds)
    (112/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.257637303 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.277719269 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.275966994 seconds)
    (115/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.460333165 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.207000084 seconds)
    (117/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.25982741 seconds)
    (118/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.262061275 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.800505631 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.283242315 seconds)
    (121/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.201785854 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.25642308 seconds)
    (123/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.272487346 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.254774577 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.527841327 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.298155306 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.073220823 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.002127073 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513423227 seconds)
    (130/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.680934636 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.255896846 seconds)
    (132/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.829172755 seconds)
    (133/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.249290492 seconds)
    (134/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.266749584 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.350645997 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.329235188 seconds)
    (137/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.311844595 seconds)
    (138/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.247702192 seconds)
    (139/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.807535039 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.994031634 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.276344323 seconds)
    (142/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.405194367 seconds)
    (143/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.236826824 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.351532889 seconds)
    (145/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.258718346 seconds)
    (146/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.368335735 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.566616156 seconds)
    (148/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.250349332 seconds)
    (149/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.260878623 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.233213027 seconds)
    (151/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.331614218 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.269090908 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.34836513 seconds)
    (154/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.256982398 seconds)
    (155/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.248306855 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.247414638 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.238078816 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.003604034 seconds)
    (159/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.251089197 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.341508287 seconds)
    (161/286) benchmarking ("sort", Float32, false)...
    done (took 2.246355463 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.23733111 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.269713665 seconds)
    (164/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.371768525 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.234633942 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.278593712 seconds)
    (167/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.240129966 seconds)
    (168/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.278520354 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.242413236 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.276970706 seconds)
    (171/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.310977362 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.234786586 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.257842308 seconds)
    (174/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.258360969 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.296612498 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.132305545 seconds)
    (177/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.239904341 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.26054453 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.295488864 seconds)
    (180/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.246839249 seconds)
    (181/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.254029286 seconds)
    (182/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.557607567 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.087591686 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 2.252912688 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.281160067 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.306086727 seconds)
    (187/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.248524454 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.578429509 seconds)
    (189/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.332597825 seconds)
    (190/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.707665344 seconds)
    (191/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.243669275 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.852768275 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.027295514 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.24116292 seconds)
    (195/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.248908716 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.191397519 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.451363056 seconds)
    (198/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.235933192 seconds)
    (199/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.440091131 seconds)
    (200/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.278901348 seconds)
    (201/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.237103831 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.372749929 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.33369803 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.258425685 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.277558256 seconds)
    (206/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.376955354 seconds)
    (207/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.335980911 seconds)
    (208/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.245405381 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.281348978 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.250604816 seconds)
    (211/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.256200488 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.302157632 seconds)
    (213/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.55931219 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.859011522 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.858184656 seconds)
    (216/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.379333401 seconds)
    (217/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.393164643 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.275608141 seconds)
    (219/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.820735677 seconds)
    (220/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.242119741 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.151112206 seconds)
    (222/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.247075484 seconds)
    (223/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.265219542 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.277361774 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.277511125 seconds)
    (226/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.238607873 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.242033641 seconds)
    (228/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.29798653 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.251495302 seconds)
    (230/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.394607466 seconds)
    (231/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.301453484 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.262463575 seconds)
    (233/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.064199682 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.459637909 seconds)
    (235/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.261127712 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.242799573 seconds)
    (237/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.259223616 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.592733272 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.243582322 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.276813624 seconds)
    (241/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.235547306 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.264345041 seconds)
    (243/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.3372348 seconds)
    (244/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.235824645 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.250469068 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.654741607 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.287273521 seconds)
    (248/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.408082023 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.256474799 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.020631798 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.636924037 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.256435211 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.080548905 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.236621657 seconds)
    (255/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.273106307 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.242370156 seconds)
    (257/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.323629346 seconds)
    (258/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.431295017 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.126151011 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.355364973 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.330088885 seconds)
    (262/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.234449132 seconds)
    (263/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.150660447 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.417738761 seconds)
    (265/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.25122785 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.22849708 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.268128561 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.25836824 seconds)
    (269/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.602886369 seconds)
    (270/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.97405924 seconds)
    (271/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.029708555 seconds)
    (272/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.333018425 seconds)
    (273/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.59237362 seconds)
    (274/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.240208631 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.288414606 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.260605474 seconds)
    (277/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.231284239 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.30408902 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.23568103 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.234878446 seconds)
    (281/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.244402347 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.277943204 seconds)
    (283/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.23628773 seconds)
    (284/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.251485175 seconds)
    (285/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.237308841 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.626183957 seconds)
  done (took 546.826463589 seconds)
done (took 548.039074393 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288779623 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29973982 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.254876306 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.289280458 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.368207235 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.431068288 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.264653397 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.293366098 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.302800084 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.303946847 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.26082534 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.430028986 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.255768062 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.255314178 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.254945296 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297081641 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.244368146 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.273660575 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.270697846 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.293147444 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.271623182 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.261061141 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.304118933 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.432030912 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.25823491 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.257495959 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.258290818 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.278018188 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.371469024 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.257781195 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.258749689 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.266750283 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.251727227 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.263570217 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.250993495 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.27909443 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.267395545 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.265830482 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.288699373 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370497758 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.257268726 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.26244737 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.257932191 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.257083241 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.25600667 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.295427436 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.257797224 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.313155819 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298237035 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300174041 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.246533503 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.271187621 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.265932585 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.257762225 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.267304709 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.25650896 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.315064676 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301732088 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.277167865 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302873492 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.248513948 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.261574251 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.295024012 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.274187748 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.267840608 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.249336912 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.255522147 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.297472645 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.257293032 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.262169398 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.250596216 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.269163859 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.260153581 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.27355235 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.293580168 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.249020316 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.271436344 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.257509173 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.269899283 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.257912192 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.305543812 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300496182 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.309028456 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.259579617 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.300995913 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.435595675 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.269487407 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.260219505 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.293610755 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.279606631 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.270898556 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.270732665 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.294410839 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.261317568 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.307507691 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.316950237 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.270514175 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.270394869 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.310271107 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.270669137 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.259966476 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305973392 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.256042434 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.256861368 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.260473018 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.381949905 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.260587625 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.261275103 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.293651776 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.308520302 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.319746478 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.25439778 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.271064232 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306480393 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.270186036 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.321101241 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.262604967 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.252913068 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.25153194 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.384456806 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.263141684 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.267508925 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307083706 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.321456757 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.260521238 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.251078046 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.263287431 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304942089 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.383182167 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.272953341 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376521381 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.262156685 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.2655982 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.296239361 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306068155 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.297507932 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.322689519 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308073765 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.277805799 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.263129317 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.273306666 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.274238638 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.264493919 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.321030351 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.26124786 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.297307326 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303988605 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304980345 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.29516615 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.385516858 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.266718771 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.253333644 seconds)
done (took 212.625213044 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.323953549 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.257747143 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.369493316 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.260091617 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.358952656 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.360125346 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.260274676 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.257595858 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.257653724 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.639124847 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.25709545 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.257609858 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.259152785 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.258463196 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.342489498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.260365852 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.258156755 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.60038464 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.259512273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.331980152 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.26055053 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.25928509 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.261163579 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.641214312 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.260704851 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.253932575 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.331062475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.261178848 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.607543587 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.255510392 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.257359666 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.607303675 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.351131164 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.279265615 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.273538709 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.269570252 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.360436568 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.280920453 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.34275435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.34262298 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.372240053 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.299944186 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.25830984 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.261015873 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.263218268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.262360608 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.260122737 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.289568072 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.261589074 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.260942399 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.604961874 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.272849127 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.269828784 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.262592452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.259592331 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.283752441 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.260773778 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.264095009 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.353398821 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.264854963 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.327408146 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.645158015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.642023909 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.263870253 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.259420988 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.260985661 seconds)
  done (took 99.643649286 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.329574771 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.339866428 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.373632818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.267378676 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.315765676 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.376321258 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.267741325 seconds)
  done (took 10.444299995 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.271277145 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.264320265 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.313340825 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.314547596 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.264499419 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.480585409 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.265032638 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.27629186 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.262966555 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.344108253 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.275443758 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.265428193 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.271198083 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.263510671 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31423048 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.278404965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379879891 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.265991136 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.265917823 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.419435057 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264212464 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.272583478 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.3482197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.277380787 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.276954253 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.275951063 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.224864642 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.266419033 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.263629335 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.265145963 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.263661922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.37774384 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.266877036 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.266322353 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.264067034 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428085674 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.26631643 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.262993947 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.26641928 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.26613061 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.266360939 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.266943113 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.267365023 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.265609396 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.267508167 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.290901887 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.266526529 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.267127156 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.267672048 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.267306263 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.345585153 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.268226614 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.265356278 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.265312176 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.345293336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.274160162 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.269185429 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.266870074 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.268342718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.265612565 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.421559725 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.316099045 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.268905262 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.315301834 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.268562381 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.269504691 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.269077724 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.26848191 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361117498 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.26990088 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.316567427 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.266848053 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.492453208 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.292765863 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.269610781 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.272358659 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.272429311 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.270297497 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.268251421 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.277770187 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.266747895 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.26963916 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.274345073 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26689366 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.266661644 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453077835 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428535055 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.267509944 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.281787778 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.277355541 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.267759308 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.344965354 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.269671759 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.266831857 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.322564975 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.384998113 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.351775948 seconds)
  done (took 131.714124562 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.274748451 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.279235492 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.274917626 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.293427177 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.271063718 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.270660124 seconds)
  done (took 8.845454679 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.273314168 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.271584312 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.270345229 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.271285402 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.271308698 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.281267043 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.279937258 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.274001327 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.274457321 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.271727357 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.281703107 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.272962266 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.274868023 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.272059966 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.281750648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.273065811 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.280737985 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.270184099 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.272148448 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.272157944 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.269658641 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.272284061 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.273061573 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.274262757 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.286637439 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.274279815 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.281005196 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.273231228 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.272413226 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.279305604 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.2910824 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.284411902 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.274710097 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.279183774 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.286220461 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.275692237 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275581646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.276249973 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.272453728 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.284947394 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.277253877 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.274046125 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.274268993 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.276340761 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.277264744 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.278701012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.280138149 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.282925352 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.284354249 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.275604292 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.276120732 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.274999783 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.284538113 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.277263938 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.276537131 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295291237 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.280031696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.284477833 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.274716681 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.276847957 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.275649515 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.285178622 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.277082066 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.28835541 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.272412932 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.277080882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.277340508 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.27837999 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275932809 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.275688658 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.277514617 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.273651999 seconds)
  done (took 94.146128781 seconds)
done (took 345.965676179 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.684444132 seconds)
  done (took 3.869084817 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.29668749 seconds)
  done (took 3.483103056 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.743079077 seconds)
  done (took 21.930771765 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.319753915 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.287906336 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.291354082 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.26984765 seconds)
  done (took 10.356701057 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.499744181 seconds)
  done (took 3.685345725 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.277507746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.274735868 seconds)
  done (took 5.742808816 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.497325519 seconds)
  done (took 3.68464707 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.56649372 seconds)
  done (took 3.75452082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.291026952 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.286061002 seconds)
  done (took 5.772124619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.258024287 seconds)
  done (took 3.445638754 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.809485442 seconds)
  done (took 17.000238564 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.274729156 seconds)
  done (took 3.467714644 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.304021603 seconds)
  done (took 3.4909559 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.721205722 seconds)
  done (took 5.908160285 seconds)
done (took 96.77683663 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.274175569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.275743613 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.275356299 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.274806979 seconds)
  done (took 10.287369644 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.315039256 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.312147594 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.313987986 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.323591591 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.315906015 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.313076662 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.30515754 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.305731857 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.324199707 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.31561629 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.315692457 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.316304747 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.313262785 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.305084844 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.316132281 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.315007807 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.32448403 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.315162709 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.305230706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.316532981 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.28105877 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.325389344 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.317239082 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.281946829 seconds)
  done (took 32.681161044 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.774580245 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.35169805 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.43463641 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.334035758 seconds)
  done (took 7.083580685 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.350635833 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.349417814 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.358932479 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.403377829 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.424821708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.361181005 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.306663412 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.303242352 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.288518095 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.350369257 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.409652441 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.346672503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.428462166 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.279610151 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.555507985 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.281437529 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.280350674 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.360281726 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.397752265 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.410287508 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.281923141 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.359335905 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.360106671 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.347323646 seconds)
  done (took 33.786580636 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.282778485 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.300703787 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.281318032 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.28081913 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.289631716 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.282275522 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.282648715 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.282798406 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.28107301 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.788169804 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.285842278 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.29459512 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.77576835 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.288281657 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.288355672 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.283731084 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.787334797 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.779326932 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.287716913 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.288505465 seconds)
  done (took 28.903176979 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.277034149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.276763611 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.628603885 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.533924809 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.277073407 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.276134302 seconds)
  done (took 13.461984823 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.353724201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.49484377 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.286422338 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.631335519 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.712572871 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.292974009 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.288285256 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.528554137 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836633547 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.820455551 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.348074371 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.357561368 seconds)
  done (took 19.145796877 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.292061444 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.28346304 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.296318628 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.302690024 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.338462251 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.288504519 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.295234351 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.278476945 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.343335143 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.346545765 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.2886294 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.341261757 seconds)
  done (took 20.890133957 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376228943 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279909438 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285555635 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305754369 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284516824 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125382665 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298355841 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015582473 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.308404801 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556649649 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28502125 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384064729 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.538661894 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291453382 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287076913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277892021 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518328757 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77079283 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289327732 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282854586 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337676328 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285446449 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29925248 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.499525214 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289464026 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281958316 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.544378898 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284132764 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565211263 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30276933 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294625774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284282688 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55915521 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940850526 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410661946 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494168326 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297250235 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309180669 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.273936889 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.298209526 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304419074 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.291939189 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295448817 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285364535 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.285797861 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285957537 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006296394 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.311253438 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.283047449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285713172 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53865389 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388878576 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.29140407 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286270424 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346718012 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290931918 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.290730708 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284871648 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869610217 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286054692 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298511446 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.291829109 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294291484 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309736867 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932300189 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.297875209 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.290296398 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291196848 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286182775 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287955891 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326462451 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287400719 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.312592109 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287413031 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986151596 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299647912 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294414031 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84873574 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292431388 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.310842671 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.51937133 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287777173 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288010914 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.2862976 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287748637 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997349562 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301285836 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.273497996 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309958561 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016330337 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519658002 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313794311 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319852956 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.51395699 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.276103182 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28878059 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.289123308 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294870028 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311396252 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.002235183 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308185939 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.294515563 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548330178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.501435629 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299725444 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.294968746 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770678755 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312143817 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.309557288 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298481377 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.506453208 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.874455352 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310447218 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29060248 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316302688 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29110521 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032040502 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296684125 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39682866 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297176797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564984424 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.084737953 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297866305 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3583803 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293957248 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290028359 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28925984 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298657639 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290314045 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.495543365 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325544629 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.308071932 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.300783953 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292008027 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.290401795 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30753548 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.299162341 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515103774 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29502494 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573899906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291703723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29272114 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292217314 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.51710016 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.291016713 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.634817096 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554554285 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302931626 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309206953 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310176484 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311681975 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399103181 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313059402 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.296253065 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.554155638 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.296758518 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.296680423 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291086843 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301453632 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298516455 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.300414908 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299680956 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875831281 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27916115 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.300683084 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286712846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.307261338 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361086959 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.300403289 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506418335 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.295900952 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337094364 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.32167938 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.293638766 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524212938 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30477397 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.293062973 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395195842 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.766954292 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898267205 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312756917 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.29520048 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.292488852 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.292696135 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29464539 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295059169 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294659651 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506079996 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314678528 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32402182 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897375283 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303921848 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29496717 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.306531979 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308483815 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.30016149 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296664568 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.293159608 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300102249 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308400789 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.31239533 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439996558 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.309955998 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29623781 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.814107636 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3016643 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295993952 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297286397 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331947247 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295494161 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11916223 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558628543 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313249298 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574314303 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303732071 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.318173372 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.294839681 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297212104 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307327976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.32417453 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329201796 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.308123228 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296035124 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303604047 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872884508 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023102633 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835329725 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304751808 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.303838787 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303004953 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020788996 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316752694 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298539105 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532648049 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014549345 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316292951 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776311994 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.319701806 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049949259 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559221031 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537420099 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315325209 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.308136643 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561732634 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517519884 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333058259 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301407018 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304895873 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.284576442 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855234753 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318380792 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383864748 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012557495 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329935525 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306884975 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.358165035 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.322622071 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707825139 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322492298 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300148626 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304191382 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306370216 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111647685 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307483564 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300768917 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936965068 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318880952 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.780399301 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319047661 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.514306201 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.317616527 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.303941108 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.30169255 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.297281013 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.560576116 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556962635 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306898273 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309173707 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841832898 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.180141541 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.30748126 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301406886 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04584594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322673956 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587151328 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.315294763 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.306166688 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308858276 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302004556 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301994295 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.30191146 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.306094064 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277828984 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792061594 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.327420816 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376877486 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312809837 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309185206 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559347163 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.317451607 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882424898 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5395264 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33543076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34567253 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.307146128 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317204368 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.298429299 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303084945 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302758833 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357606655 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530566825 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316358193 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.295623801 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320290552 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521459365 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303974432 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302939357 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550668141 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.306524653 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.310309148 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038466348 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343208696 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303639709 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311925509 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314955818 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329296366 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381789679 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520195946 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.320496706 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.316395819 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709786936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34057172 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312938857 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.31979251 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401678174 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308000083 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.310630216 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.084396594 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898637207 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041682197 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897700708 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570244743 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312028883 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309534343 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307256653 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470768694 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306615309 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580721924 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305777468 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.328207577 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352151757 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322860598 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319661913 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525580687 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582835556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306071582 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320414459 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311846927 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.307714374 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318191887 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.519460485 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801893613 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872628466 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31438508 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311752404 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035352795 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602298389 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30787327 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308472279 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307896675 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.309947928 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331355306 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.318022033 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308978797 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456801498 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562028874 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988185942 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.337299944 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.334696073 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.082194301 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308694348 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570049136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306275496 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525052072 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899860728 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011963148 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581864552 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380444849 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523209308 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.31479562 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473861619 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.319165061 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314611765 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309977142 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309448641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.306645887 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.321994383 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900383033 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584098988 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.314822928 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.320773806 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347694596 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.320071639 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535130845 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033047141 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540982116 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321236259 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315541792 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310377629 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90070882 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575659198 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317345597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.314930565 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553873478 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31858554 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337377033 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.764895294 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.310088785 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870650622 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.289279734 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334024132 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31995997 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017487235 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907057449 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.322818421 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812769973 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319906676 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312539717 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606535823 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.318046012 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312071375 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611384217 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.316405269 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318056732 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534973704 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.902760319 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075848901 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.325516947 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34273877 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.321472992 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314226324 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358976798 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319511583 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323028992 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.743655324 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34321268 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314502456 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327016651 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.322634243 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32065972 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.318580822 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315202537 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.320067027 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.316803067 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.310889613 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321067564 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.319826073 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882057793 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34009661 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.983555476 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.64089648 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.570726417 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328131403 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.306460108 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.319384974 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315474637 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316981584 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31504722 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338006909 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899813987 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.333008003 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.331133168 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318551732 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.53325562 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527505209 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316268023 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554037047 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327091979 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337295491 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.302659252 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316673314 seconds)
  done (took 944.742728521 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.334212508 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.328323866 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.325834156 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.344086416 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.336380615 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.367059214 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.328221207 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.337678955 seconds)
  done (took 19.930187687 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.324423136 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.331522464 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.321438596 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.332032543 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.316809573 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.79092196 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.339502846 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.332043433 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.328797798 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.327315383 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.329261798 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.005301926 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.348787236 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.321866058 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.312351617 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.332834995 seconds)
  done (took 31.62522911 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.249074045 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.447415067 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.188222443 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.351738621 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.361212964 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.319462497 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.551039464 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.333671283 seconds)
  done (took 26.032549142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.329814544 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.33290743 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.329697906 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.330580197 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.329169922 seconds)
  done (took 7.882783144 seconds)
done (took 1197.643050975 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.323167355 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.326156248 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.323827794 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.325984594 seconds)
  done (took 6.528377097 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.30606393 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.307198723 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.305637996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.321340097 seconds)
  done (took 9.471946606 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.016679276 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.954313984 seconds)
  done (took 5.201760906 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.320773698 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.081780689 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.056558933 seconds)
  done (took 7.690796196 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.620615705 seconds)
  done (took 2.850923468 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.743142885 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.690039649 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.507191448 seconds)
  done (took 6.172706482 seconds)
done (took 39.14654672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.324489111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.568182062 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.480030694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.322404436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.481210329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.478183201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.055842482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.320605565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.346027319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.3353172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.323145354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.482989762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.104664029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.56981985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.105058973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.569927519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.482284643 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.327770879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.334290701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.319690556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.072583235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335317847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.319868639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.319670188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.487183797 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.470158349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.32893592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.571121425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.321237579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.324681529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506393482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.322398103 seconds)
  done (took 80.943287666 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.334784286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.322216025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.335813087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.330345806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.324272731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.339761233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.325765987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.325285397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.322519019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.32790438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.329323058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.322704894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.324605065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.322693528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.343645922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.32243686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.338430161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.345948667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.339441933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.321820719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.323877072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335270332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.322965299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.336670112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.325451087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.326428984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.342447483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.323843202 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.341663694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.325292376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.327878639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.350828618 seconds)
  done (took 75.816826854 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.333338586 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.336892248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.327881616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.338744784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.334067707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.332927645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.329705545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335494554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.324839437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.328483551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.343448551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.341487114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.325209196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.326173641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.327584065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.324251558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.324590577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.360923904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.324794635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.32566986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.342599159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.324184869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.342357847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.325104798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.343671199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.328275717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.340381613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.325099788 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338484284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.328818116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.333403622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.326230605 seconds)
  done (took 75.880783665 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.607662665 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.333225868 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.332252785 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.324668709 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.334509945 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.33403802 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.326728582 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.606694532 seconds)
  done (took 14.436458419 seconds)
done (took 248.307618484 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.334043504 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.336355761 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.542825952 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.354336145 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.332368455 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.360045608 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.355551674 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.54669483 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.303191062 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.571384023 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.344171824 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.371557345 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.336769588 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.352285861 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.603016396 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.477045243 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.220948141 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.327100222 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.66650942 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.352067505 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.603178105 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.334268063 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.602067367 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.285581757 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.35857018 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.335712224 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.345760665 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.218149229 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.372056043 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.677468296 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.353755562 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.322239602 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.418612819 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.435834579 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.544720409 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.486698666 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.343495697 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.416516001 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.554001121 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.330141062 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.333215862 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.127606051 seconds)
  done (took 81.127124987 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.336164154 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.457776022 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.336909917 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.336778579 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.336069756 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.456574833 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.431941886 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.335938774 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.337750681 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.335699242 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.336976031 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.336963985 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.337081651 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.337056364 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.338617787 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.337407837 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.336837033 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.347534021 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.348071264 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.38374539 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.463442818 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.362403453 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.331501941 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.336243947 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.440549452 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.479544754 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.336843455 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.332158587 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.381419183 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.337226819 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.344273549 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.384869983 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.33806822 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.339694185 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.458453969 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.439181021 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.350379603 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.336985607 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.454757628 seconds)
  done (took 54.631176589 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.344913121 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.590939667 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.766880226 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.345804629 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.340230883 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.34502979 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.417408846 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.342689286 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.343770469 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.345065009 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.506428037 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.343345354 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374355739 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.789247887 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.343466331 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.3398915 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.341507087 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.340691194 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.601543835 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35065818 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.437916401 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.344575545 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.41773446 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.355161358 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.364903927 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.342341697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.346452125 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.911569297 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.344536112 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.508085572 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.118188657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.419614182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.849450619 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.780709981 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113613548 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.348826125 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.342039458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.512611641 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.344228721 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.342253854 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.417419904 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.349878965 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.773798962 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.985654758 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.36127147 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.341341794 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.928088624 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.513341594 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.581152384 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.352302574 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803501871 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.346763855 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.343999628 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.344067941 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.582097075 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.351131358 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.342357451 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.913710537 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.366294999 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.419217533 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.344519339 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.344494989 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.60390579 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.346525978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.592302533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.347720564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.351432252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.364230277 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.782713997 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.349287008 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.017899082 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.361834321 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.344538402 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.510728781 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.593974298 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963701728 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.348943381 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.609616954 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.865328343 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.419110447 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.349874611 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.899000135 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.422726223 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.350055027 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.346702534 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.347217332 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.345139843 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.395268909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.418153051 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.945114119 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000101148 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.954425315 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.440960457 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.360975461 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.347022246 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.914415525 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.394897027 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.345874073 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.780130974 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.019946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.364270939 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.354759784 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.016471888 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.366827053 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.423622513 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.353585982 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.783809497 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.34828849 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.398418864 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.346291471 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.35355558 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.37122471 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.422395945 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.35127204 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.346128907 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.984215062 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.538165469 seconds)
  done (took 177.687848201 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.341313001 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.356540338 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.340953327 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.360197091 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.340708779 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.349449255 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.3388425 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.341056015 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.347959147 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.339963828 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.339890096 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.341309663 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.340132123 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.343344218 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.352329603 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.347980466 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.342165847 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.342516658 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.341321172 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.341432582 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.341851459 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.361117657 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.342002115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.343126209 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.343257105 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.344422246 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.347676091 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.344624216 seconds)
  done (took 62.907910537 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.348207256 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.896529637 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.350531672 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.477548904 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.370430328 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.347206139 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.475591221 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.404817523 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.351899313 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.346240095 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.346539045 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.64199509 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.351506631 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.857809098 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.542415745 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.47858086 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.857391557 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.372988718 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.347634704 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.346691035 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.479802447 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.360455019 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.648170306 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.903897404 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.351895419 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.900228551 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.341921219 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.351847917 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.349342766 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.906975323 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.351926997 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.651085019 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.431072586 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.408748538 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.902298502 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.852676845 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.869591421 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.495108278 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.351392202 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.353258065 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.348909394 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.342509798 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.910819923 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.358124631 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.354384912 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.905973342 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.374404091 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.351639751 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.35829809 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.350294484 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.409667785 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.415254834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.653744083 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.922530052 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.433683485 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.365153796 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.480986861 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.714820707 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.355883989 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.854477562 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.344188438 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.913379628 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.376218605 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.343324378 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.353214682 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.358401306 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.499396585 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.482817648 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.856472897 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.371849548 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.864163244 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.523260544 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.356200883 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.351947379 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.354494951 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.910318805 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.867569099 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.523348553 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.485757987 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.545517907 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.345488295 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.353003093 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.346180354 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.429761113 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.352277946 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.908044248 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.880745887 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.376721995 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.354996129 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.354653872 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.356566473 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.531149666 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.911623549 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.431230469 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.855122517 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.670587514 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.656445648 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.358998972 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.413659531 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.373178166 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.654182643 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.357929529 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.412370573 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.776461694 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.656284056 seconds)
  done (took 161.090966874 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.592863231 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.375542571 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.451285566 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.504658484 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.953491507 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.932761901 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.360454568 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.483299152 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.46487431 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.613156585 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.367934221 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.448645183 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.568156281 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.436321395 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.07503131 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.431263398 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.447290197 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.506021082 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.499334504 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.356663246 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.990409581 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.672272205 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.541757213 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.384575681 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.462690424 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.124669769 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.932653551 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.893111913 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.530774684 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.358847584 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.908361295 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.355635263 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.273771218 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.020208801 seconds)
  done (took 63.577920749 seconds)
done (took 602.260973894 seconds)
SAVING RESULT...
DONE!
