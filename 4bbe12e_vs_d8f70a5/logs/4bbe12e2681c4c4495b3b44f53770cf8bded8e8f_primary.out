cset: moving following pidspec: 27920
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.520939972 seconds)
loading group "string"... done (took 0.537456996 seconds)
loading group "linalg"... done (took 8.546110682 seconds)
loading group "parallel"... done (took 0.174697678 seconds)
loading group "find"... done (took 1.357126236 seconds)
loading group "tuple"... done (took 2.042890663 seconds)
loading group "dates"... done (took 1.339733602 seconds)
loading group "micro"... done (took 0.211606162 seconds)
loading group "io"... done (took 0.603020794 seconds)
loading group "scalar"... done (took 41.748262893 seconds)
loading group "sparse"... done (took 13.349297419 seconds)
loading group "broadcast"... done (took 1.095328752 seconds)
loading group "union"... done (took 14.871959752 seconds)
loading group "simd"... done (took 4.889885447 seconds)
loading group "random"... done (took 9.791655622 seconds)
loading group "problem"... done (took 2.11568009 seconds)
loading group "array"... done (took 24.24782916 seconds)
loading group "misc"... done (took 1.141333588 seconds)
loading group "sort"... done (took 3.571732935 seconds)
loading group "collection"... done (took 20.940105943 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.601905462 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133428091 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145288748 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172642557 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206797826 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138338169 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155785309 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.55034868 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.064836672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209075295 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141762037 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.540303623 seconds)
done (took 5.798276667 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227864224 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.074587464 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127321447 seconds)
  done (took 0.887532908 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074891041 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171696092 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092862659 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108526407 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109270895 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107925261 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093000772 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10923055 seconds)
  done (took 1.480425718 seconds)
done (took 3.359421008 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.810471558 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.817881786 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.509818411 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.124051346 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153499922 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127682518 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316009575 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16351111 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10368274 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113223592 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170256858 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.372917365 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428869742 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.968011398 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093471694 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127563588 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079156349 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.715904156 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080770444 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129389058 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517549334 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.111169331 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117049974 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124610934 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205227668 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130849332 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.182609863 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101301532 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.68693539 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101912867 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183110512 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098168951 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16042927 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.217265912 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.078945232 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105740238 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68837407 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190070721 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112660319 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100348332 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678993639 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079835125 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191534169 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107913737 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110476571 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197921584 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120533441 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077180011 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103308517 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103235927 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161572981 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480614806 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10611918 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.142530559 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.112760422 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70293166 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095638156 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156334734 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124218377 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109339872 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097066894 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115195598 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166353402 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121910539 seconds)
  done (took 19.816672578 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115932627 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140319425 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09430328 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139182144 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139034066 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095916732 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083279708 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094422004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107848926 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182436201 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13482298 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141634809 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073805816 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09625107 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116541644 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228562558 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119388731 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11851347 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080536041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104848565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121050072 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114123515 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107578369 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091273131 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168326472 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207090708 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122539475 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125194388 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095716878 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097498235 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14303635 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160983943 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074021229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09369301 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178513462 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119416616 seconds)
  done (took 5.134268926 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196843999 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11437817 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188053556 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175649066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147019522 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165195511 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116831706 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26190341 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.239185871 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163424624 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131579641 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11170872 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078242245 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096156795 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077737168 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.767999085 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179874179 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152887485 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105997154 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104418772 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096706125 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371416795 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083601941 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0958643 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083935939 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087294291 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173351878 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082704344 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.236022786 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116011614 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087081584 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131988915 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204363448 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110142602 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138350502 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099488116 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080727764 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.208393465 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107471587 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075461327 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121015388 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132307482 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130334419 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081319904 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107036293 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.239936405 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081209827 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117177254 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.038883966 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198330928 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144481087 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077213313 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332923946 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117066284 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101022065 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08051271 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288004377 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129751343 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080496083 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096031745 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07767896 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100329591 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077400555 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38831249 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105033179 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.011326845 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080946209 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154406061 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098783136 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103162353 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084148345 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100625856 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098872974 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096559209 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076938073 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096177862 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076484097 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099802353 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112713713 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083748759 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094884904 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109320175 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161965685 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08180928 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114550986 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097948621 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126497283 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098733225 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077753322 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128878722 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079330931 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098451381 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.142420204 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084124834 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115408334 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099175194 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14154321 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080041927 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188777827 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081664133 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122840838 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098511258 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111745521 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116547128 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096392976 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083431148 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097883107 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075992576 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096738809 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146758664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079415302 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095906681 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080547186 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111300625 seconds)
  done (took 23.515054987 seconds)
done (took 49.150201217 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.421764433 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113181196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111734609 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112026137 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110583905 seconds)
  done (took 1.637213932 seconds)
done (took 2.374289257 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.326279861 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201961686 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098778259 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193495995 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084921653 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200013356 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16349468 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098189497 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209248872 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080739962 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183800853 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082060372 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105173505 seconds)
  done (took 2.796620615 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092618118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116010801 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080858755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106451561 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074562294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088645808 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107608463 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126964244 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088927831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082365248 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091433728 seconds)
  done (took 1.787394193 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092552512 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114571691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079057489 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088519254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091536661 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088489649 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106408264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099103232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107199202 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083341659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09249466 seconds)
  done (took 1.773274771 seconds)
done (took 7.087152941 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.123928425 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.755276278 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121637935 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.172015674 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330571652 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.218551531 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.63700547 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133934399 seconds)
  done (took 16.409427522 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109339861 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096082999 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078161332 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112236618 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080085447 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095165817 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082032992 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095045299 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076914367 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096750666 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080025607 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096129893 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079501599 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096018748 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077870683 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096481702 seconds)
  done (took 2.241553958 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114458716 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112428825 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102472711 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087355077 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100653536 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100881364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.084888742 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100095722 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080865963 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098447661 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087273752 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104053767 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102251859 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080325296 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101151109 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088943659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098267789 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084846237 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101726088 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084362502 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103670463 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099257196 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085888049 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104077824 seconds)
  done (took 3.149532036 seconds)
done (took 22.529253478 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164202896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082236579 seconds)
  done (took 0.989843566 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101131574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118971768 seconds)
  done (took 0.961983022 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105144543 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095594946 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134126366 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113067355 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080814464 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079203012 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.128585759 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096826661 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078884838 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096030124 seconds)
  done (took 1.754315024 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08517854 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099986647 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088264633 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117311304 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107696442 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081173129 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101269044 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08341422 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101629174 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077928489 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103701254 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097459572 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10268938 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116404301 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084464234 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.222555761 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105798969 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083777576 seconds)
  done (took 2.60701636 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081384874 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080623581 seconds)
  done (took 0.912140804 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083472643 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095179995 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081842891 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0978702 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078080975 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094669536 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077464615 seconds)
  done (took 1.358853665 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.474875035 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.249075029 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306785265 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111987838 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129836115 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.353082745 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.131698733 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.092602706 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110342743 seconds)
  done (took 2.767740902 seconds)
done (took 12.092987463 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091502318 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131435512 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.470532879 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11458137 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.076351693 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156386502 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.259772091 seconds)
done (took 2.050456796 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344436676 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124587736 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089445009 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08004147 seconds)
  done (took 1.389910589 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078945399 seconds)
    (2/2) benchmarking "read"...
    done (took 0.085632149 seconds)
  done (took 0.921282763 seconds)
done (took 3.067855954 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079677187 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128865745 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.074457504 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095575555 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.074130918 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075620785 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.093844553 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074007317 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094858214 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076751392 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094025317 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.076580474 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076135435 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090225485 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073640421 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090854738 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077143321 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093253523 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073624676 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073614963 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091899224 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076490671 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091494841 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074235107 seconds)
  done (took 2.812329912 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10558393 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096056168 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082047737 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10051991 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080394534 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101380337 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099886483 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.077130128 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100570903 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078964153 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097895314 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081330954 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09670153 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080628873 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097373863 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081203125 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100101475 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077581296 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096752452 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082152037 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099217678 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078198564 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098544575 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100226108 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080905401 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098297032 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080245338 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095314145 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083106177 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098604836 seconds)
  done (took 3.484573709 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087470532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0767528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096187657 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086892978 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092937616 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078763251 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092934103 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078689978 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097019892 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.074473823 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080344815 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091910342 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077838372 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096363578 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079217796 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099503066 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092238919 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095128378 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078106506 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097377751 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080172606 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095574963 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077704686 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074609835 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091735115 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074726449 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093161216 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074463293 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092500313 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075106245 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09685722 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081232976 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073803775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104862525 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081103738 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091323349 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083103543 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092086554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080460334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092509775 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074241793 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09297106 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07789339 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08636612 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095403932 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076205511 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094942673 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07972103 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095811463 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081175498 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09157276 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077941133 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097792544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081174024 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080656106 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092507027 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075757912 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.092152056 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079065063 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091532721 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07490153 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075035751 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098044579 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0757443 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115220891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103382673 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077750415 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080567682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096376616 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082413148 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097332741 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092820325 seconds)
  done (took 6.999730829 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082460951 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103691814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077332748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094430305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073178633 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075232356 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098727263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075445914 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094095977 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093065898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093033963 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076701091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094068934 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078981769 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093955333 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077292569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102488343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073840246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09356878 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07915442 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094060531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082676083 seconds)
  done (took 2.674388991 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222286752 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104957928 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141508767 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113535156 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09593635 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110779405 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082688219 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101589388 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099026932 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084480507 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103293537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082677134 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112198787 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102425542 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085158618 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104724408 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082622916 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10440318 seconds)
  done (took 2.702186612 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092503801 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09595227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102241221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096624403 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07878944 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098288983 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084888629 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113796052 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08004522 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095885919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.106065255 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080460668 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098444846 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078270984 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09753176 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078642932 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098026128 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078660082 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106201077 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085300623 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102482967 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08845041 seconds)
  done (took 2.80148185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097369566 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098461463 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098200544 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100716694 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076628962 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097463571 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085922084 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096010404 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08855643 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098514276 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078684808 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096577735 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085646702 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096839115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104121424 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07923216 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099098472 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079147787 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099217054 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077733599 seconds)
  done (took 2.603138032 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121234631 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110713943 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092908946 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121743282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11131041 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093149976 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12286413 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092414915 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110534779 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123824793 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093462447 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111669088 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121492927 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.100514446 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111302852 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104846952 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123765996 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122177296 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093248324 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111517795 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124173671 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092761181 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122273873 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09281441 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11112659 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111313696 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093357049 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120159071 seconds)
  done (took 3.832021886 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079738517 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07755473 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09383748 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075881915 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094253905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075436058 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075397861 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094036965 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077487952 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093252634 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077818773 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09580771 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077551277 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078083575 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095191257 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077291048 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096598225 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076572792 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093302163 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076153446 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077448773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095285921 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077363901 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093897808 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075149521 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096160906 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075903707 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075266148 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09599415 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075599014 seconds)
  done (took 3.288518598 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089284501 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108560158 seconds)
  done (took 0.972167658 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078807657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113199976 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074992056 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100057834 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084799792 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097898437 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088275442 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102278328 seconds)
  done (took 1.509479282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105568107 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117256866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084914018 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108447275 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097273166 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115015072 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162232137 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084929253 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10476481 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0800178 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116589661 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078806499 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107571963 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084133954 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105268701 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111332915 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080436715 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088611059 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104565782 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081640455 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103188607 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112656575 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089508224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104768132 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081621662 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109141984 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092577695 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109240555 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084584637 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109096688 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085966365 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091814377 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084249636 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103952168 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08029306 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114938744 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11430354 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084445941 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106943738 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085565503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107960267 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078084577 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108401343 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087843315 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111641853 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084993923 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10426163 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078541045 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097988449 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082589712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096115941 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08310095 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092382322 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089287294 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107156407 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097122128 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100884354 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084495168 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102118437 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082368173 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105221231 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08310879 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109085647 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082850452 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10818274 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090139922 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105954906 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078075721 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091968305 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080042516 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107201694 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102502361 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108752103 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103701177 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08541982 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099195008 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084625071 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10419945 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08689377 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108770177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084085898 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105117931 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08955322 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100895002 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083461301 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105065937 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082157438 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10050161 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080371788 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117334916 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082171198 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098364903 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08044791 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108619794 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083140877 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101456026 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079772463 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107769963 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073812373 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104129356 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086497046 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104742814 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091793466 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103761038 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086443314 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106456851 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090446127 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102779951 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083348295 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094323774 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085402316 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100154744 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087904748 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091839532 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085329528 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102648796 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085059654 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109999109 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081901591 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101903062 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091271664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109309631 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100469681 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076218868 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083903307 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103095768 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108034788 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090483744 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100290136 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078422318 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077981475 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107033224 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103026751 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086223343 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103588547 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084678006 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074036455 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099366311 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084936966 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110240929 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101362909 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086886935 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108754506 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087452394 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10170859 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089559472 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101260316 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080886542 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108500135 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08416414 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097907733 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090952343 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10277562 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082467262 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104061346 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089785919 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103036155 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085862538 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101079272 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085126339 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106013308 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080052475 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103486601 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082717928 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110709776 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084537865 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09721708 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077541648 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104925736 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080746427 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10274691 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081244437 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102623237 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086189287 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099804644 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082935982 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102313764 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096933823 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120851328 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086248436 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105955832 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091539915 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103673323 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085861775 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103359819 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086382853 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105298142 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089227658 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105496927 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085307026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103145669 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076025654 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105931615 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089538492 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098729501 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081250466 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0990317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084875488 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110182022 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084412613 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104624567 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082157686 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10563052 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08937889 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102793794 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08367082 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09811033 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084178612 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107429967 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086410762 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105418939 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091354571 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104154821 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079054214 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108426799 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082489188 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108062189 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078605503 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099581087 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081206148 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105959322 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082931935 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101613349 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074232895 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108936939 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091682314 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103821673 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080476905 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103681922 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093932671 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102427984 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090313683 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103280336 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08732898 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116651471 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080655053 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103983912 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092891161 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104023993 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074813366 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106915148 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082632599 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098336115 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08369338 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101849956 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086339455 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106524616 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086415758 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093413394 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084304853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102892413 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081221749 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098456167 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090286486 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104342971 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084858512 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112645859 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08676101 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105285887 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087170551 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103292417 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086172737 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105854031 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086015525 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105425677 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083211521 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099757674 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085059111 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099338674 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082093773 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102756417 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086244748 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104281131 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086968189 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102593626 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089574006 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104006567 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085981833 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120801793 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101207423 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081000084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105120255 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087111901 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102918513 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084237349 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09776984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090006297 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103805489 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091078753 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103760803 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077855739 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104460675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086188054 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106166973 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087164006 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105413416 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084274747 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103786422 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084939125 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113424616 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081618179 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11053011 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087263654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106348392 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085511641 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104987027 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08407912 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099563705 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084693547 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106716395 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085361373 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104465267 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087978835 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104772392 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084285564 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10198428 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087328274 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104502765 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087875469 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094237953 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080699911 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099649596 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085745021 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107848872 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08666434 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102562045 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084022223 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106217942 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08367767 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095959387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090020353 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107210662 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086778326 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113385865 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081196718 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103806925 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09464055 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093788696 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083116007 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100055872 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081508907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109626531 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087066527 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109749068 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086245507 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100737449 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077254834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10548807 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083779708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074563756 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100934952 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087761662 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102609609 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083095604 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105635108 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086928312 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107098352 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089054347 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103379029 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084496479 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105582041 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078078283 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100404473 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08138924 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104034148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086719459 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101384021 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078484728 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104341533 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084906721 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105047996 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085387822 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103397706 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091184777 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104585346 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085604219 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111238068 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075887093 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104790773 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08527493 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103695738 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081119372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105890085 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086976398 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106883013 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089501012 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104412826 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088259983 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104367489 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082353527 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104671402 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085416837 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105783424 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081486088 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106086466 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092293758 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101947601 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086205861 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105181177 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083184748 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106746122 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087313611 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104979641 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090370202 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105821908 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086607393 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108872843 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08644037 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106277125 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088107079 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103094097 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090133538 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100464821 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092608023 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105648095 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087156704 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103867455 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082366518 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104772484 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085231697 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104236578 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091230359 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107392817 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081650923 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100082865 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083416408 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105057363 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091931412 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111132188 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086198267 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105696826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079907849 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097872593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088106127 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101463024 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085082296 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107527976 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091014127 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105677811 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083696555 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103746744 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090423662 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109353821 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087816699 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102556451 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08777551 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106768266 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086324203 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104188289 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085304862 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107764936 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088553053 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104900151 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082063232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114381697 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090642479 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108594983 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084694177 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10803719 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085189309 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099996983 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087980345 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105658705 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10714212 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086554257 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085572806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116758767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100915951 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084648506 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111173025 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085564401 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110424914 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081002245 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105968269 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089002487 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107147685 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081189117 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101076268 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082773991 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105025852 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081653224 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08040512 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115450323 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110440904 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086674473 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104118607 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084517264 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099614214 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08101093 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081250587 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107898758 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085503245 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113946868 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101096339 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082212525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080242983 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105751503 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087771622 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107950782 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078636334 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099917612 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08230805 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106333465 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09321477 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103843375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086326179 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107055333 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085941448 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102537387 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092644325 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097970632 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.0876516 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117732955 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08683179 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108737692 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108510992 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092807737 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106916451 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081611831 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106960074 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087046036 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106116914 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087713748 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108576123 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100817942 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106422952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082029542 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104776934 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086323891 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102293786 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093212495 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107913778 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087474815 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108112617 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084601523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107819354 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093227599 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107680433 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08882769 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106844361 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084661266 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106309672 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083847513 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104136945 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088668525 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107598217 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086095097 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10884052 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082305234 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115850268 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111675651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088186401 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078354735 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102376602 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083199574 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100696591 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087961525 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099523636 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084496632 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103761928 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085100491 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108193278 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088510137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105474226 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088319083 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105986283 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076525533 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109449262 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087218666 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108630942 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078969195 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105577105 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08900706 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110452149 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091962474 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10458094 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086022796 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104789857 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089232007 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100243913 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089713589 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104520303 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085325463 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101866953 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08710402 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107480895 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088915238 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107154165 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090458186 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106263501 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091165994 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109371591 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079816652 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099414284 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089910166 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102241474 seconds)
  done (took 57.664009373 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148880245 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087450371 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077301437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098149309 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12381444 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081978731 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097438655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082191066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10080586 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091328293 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097102315 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077350783 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118473264 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124454336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122702677 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092723513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09733801 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081091462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09761881 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082436773 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117868125 seconds)
  done (took 2.917721958 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105636616 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11563803 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113419873 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099841253 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108473916 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116112735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094344781 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115444588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119091062 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089651395 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118816564 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115230518 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089683098 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111009851 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109318516 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093286995 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119427557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106935655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.095743757 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114533827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111790006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09438116 seconds)
  done (took 3.175220796 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093300577 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084835284 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110442751 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.079413711 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105941253 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080976826 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11105339 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083103008 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110529732 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.085840483 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.103679369 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086262334 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109889665 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080846737 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.103444089 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082712963 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110852592 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086370621 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107481711 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080301435 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.124507426 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080304369 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101039112 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083814148 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115611322 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088093499 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.106709447 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08602066 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104688337 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086502021 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10225008 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088516641 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10933657 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084613915 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103483093 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086748246 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105839208 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.08083451 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083663515 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110228527 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.081311908 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108125428 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092521659 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104080796 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083033904 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108136465 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086440967 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100582356 seconds)
  done (took 5.417969379 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.119953503 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154239739 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085757286 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145566606 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121655317 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095788867 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107075486 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143894935 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080208728 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106515439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124231731 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.099854748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108663782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112342207 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086799599 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106743154 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088782159 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10166718 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092124259 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10662242 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112006004 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090168837 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120290818 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118432436 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091972486 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105836332 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082638137 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111701602 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118868857 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093121053 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112870837 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094319579 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121013021 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10723436 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085601777 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109134955 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122688487 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086900328 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109965554 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080890028 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109518824 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092377478 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11020462 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123942695 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08773767 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108883936 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087055511 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099958853 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119133474 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089908286 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116010466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120486489 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091254427 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107101364 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09292345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121663175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105911643 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085574896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110714793 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097666768 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10230895 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091153026 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119276547 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109250395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09599182 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120565241 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108735083 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090902162 seconds)
  done (took 8.145869216 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117642839 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112929043 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123465674 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104115577 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112641132 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092147242 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11272619 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111100478 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092281844 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119039798 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091693202 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159571337 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.110127371 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117469183 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092626779 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113230737 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09283173 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112027865 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112058475 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093223141 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112119234 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10395553 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11417147 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123248549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124553824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089110768 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112746968 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092022472 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124397559 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111763047 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104543618 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112579785 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111125695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104356234 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124860018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.1125346 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087136611 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112560044 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091892186 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113031566 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08943967 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124146753 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112716697 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088754624 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112485994 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112187848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103805985 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124518242 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119129514 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098921517 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112466874 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123460052 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092820435 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113317651 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124093701 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132388918 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103986126 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125855981 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113372658 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123906032 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104937712 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132163087 seconds)
  done (took 7.700421948 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086799493 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083061962 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102258727 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081575155 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103619303 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081815904 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083092742 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104564305 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08357329 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10342692 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083495638 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101553112 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081405508 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082963138 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101875467 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081108325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101718527 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08146748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103213309 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081986167 seconds)
  done (took 2.648771242 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095923012 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124072957 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084186953 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111701715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086622516 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112671064 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085927087 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106665455 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087601333 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108189261 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116890623 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097914326 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105238682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090630421 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116847468 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111440335 seconds)
  done (took 2.483729646 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107629424 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.126869103 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129778089 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08999861 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103125713 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092292858 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1081159 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.079976172 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100631911 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093500749 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110346939 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090246961 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10770607 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082728838 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083673081 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111447515 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079553864 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109064613 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086303713 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130536616 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109745705 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087585612 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108349462 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086489584 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10835465 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089428754 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111271047 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082174669 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103518654 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087673427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107738816 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091874847 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101651953 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087782562 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104088343 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081981209 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108653714 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087534061 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110494259 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087291807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103016978 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087075034 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10757881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089938114 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100483697 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087502667 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100326185 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090652433 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107307605 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088044803 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108020755 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093023322 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112798174 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.095700585 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115845987 seconds)
  done (took 6.29173583 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103347353 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10936606 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089579509 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102541882 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087686711 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112842831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088994753 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107288715 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087090745 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102171438 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087241189 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109215004 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08727893 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109740417 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087115714 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109210375 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079681166 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10653599 seconds)
  done (took 2.611561598 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094311924 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084308359 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113857433 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083697804 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106859869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086823213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101681334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082407888 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103138145 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084883493 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104291056 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086769182 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103319842 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086781847 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104576386 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08572588 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106482382 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08345569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083808518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101556766 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085986995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103747495 seconds)
  done (took 2.922558463 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104298304 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136875445 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098117215 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146684737 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109505831 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088715815 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119071903 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089573058 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127512117 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.087692491 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.108867395 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088214216 seconds)
  done (took 2.148633254 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113866097 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142394094 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085506963 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108693682 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119497952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090594667 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11095182 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089914528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12422925 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123305007 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089644187 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124706751 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123270219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122214128 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098810631 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120196006 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110611209 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090232791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106555335 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132428786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090778542 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123549765 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090131546 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110836064 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110538075 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100767838 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124606543 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124094008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090041011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124466294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119868033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089769806 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124500107 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124618195 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08702098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126621043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109913268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1333262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09921319 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121697885 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10837786 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098752201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124351473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119415416 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102906067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112016713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11876376 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090809512 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111332294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139190921 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118250718 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101773472 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119545516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124205238 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124091362 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137508511 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102921559 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122650918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119558771 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123469827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101896399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120073025 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121938773 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123786032 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099055942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123348771 seconds)
  done (took 8.312937325 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127578099 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10802435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090266135 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125142915 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12347635 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1107983 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09098444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110798793 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090584625 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108279111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.397732706 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090023305 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122827536 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12264466 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090578595 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110677967 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11071852 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101938793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107831142 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141172781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08980726 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122120436 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122953532 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121883593 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122990128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099593851 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110435316 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089756314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1117507 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110341186 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097829616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110251445 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122031908 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087084655 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12220427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090477025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110495422 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118641176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08962376 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119087027 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122159544 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133635027 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090443999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111022751 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12379761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09031797 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110414444 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088452999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11049345 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086758785 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124563327 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124617469 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124601443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101489589 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112015589 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110451939 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09063371 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111217629 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090015498 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119150693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121919532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090460806 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138700051 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111499995 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089745321 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122543713 seconds)
  done (took 8.355002558 seconds)
done (took 155.233166332 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106589578 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140978087 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100001864 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16943624 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084091687 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14045402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117473329 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121566001 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084387421 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106304673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086040055 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109186738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150809026 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105791499 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085273952 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108446246 seconds)
  done (took 2.669834807 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182411758 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282356113 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105154324 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111752177 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091418354 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109021003 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090027898 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112202016 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086232874 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118922592 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086893154 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109812122 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.117498063 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088340225 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.105923054 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087078364 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117835571 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086763539 seconds)
  done (took 2.948473328 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120000738 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150143759 seconds)
  done (took 1.135057405 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124093034 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181250502 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298201162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136396962 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.135726916 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128138396 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160307924 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.104260944 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.211848922 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107508091 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128496858 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112762455 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115225229 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118245899 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115293926 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091626756 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138509976 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093382233 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114624917 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092656582 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136239841 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115464328 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097186879 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114551452 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181730902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127199166 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093193487 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113817656 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093221491 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114397931 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097587257 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127208907 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127278225 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.166908169 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.119229599 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.164068057 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120840721 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091176327 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114555321 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091476251 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116999945 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115757011 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1075103 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112863778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.092604818 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122108516 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091964147 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113655268 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.120726295 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100960503 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121703263 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118328439 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.163080528 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121329557 seconds)
  done (took 7.59586482 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792990308 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155137803 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091181026 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.909917731 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144625777 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10552324 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.788876095 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135790239 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242350315 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.808183442 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106110752 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128012012 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234025563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258236973 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149338813 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340639967 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674063807 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103382493 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145112326 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157173461 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119554946 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119441925 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133490668 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437009274 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113870947 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090863927 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119528393 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103652128 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188371495 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091553332 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116631206 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186965398 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269389008 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208256593 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090104149 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113267695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089766441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.195980373 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.252991777 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223293428 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176970847 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107938859 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090515352 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125715779 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111183368 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109797692 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168398116 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.199904601 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.179120489 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094534564 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126052757 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12181405 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102814646 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.188461679 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088939959 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343915573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346945586 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090344197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12228585 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131757913 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250574092 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113882445 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230004621 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117740773 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219706261 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111934537 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804058363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171843076 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114127864 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120964823 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098916134 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119912488 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101947777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153941937 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406477377 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129344318 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117899692 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090613177 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234165122 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092109371 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112595094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171486315 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091399044 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122441643 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129112475 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10432455 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.198631775 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256846584 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126972715 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099325342 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118792215 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12550059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092441532 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216380382 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222321711 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164415046 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.240090943 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104938522 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192094339 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174020351 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12407269 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177504566 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097969875 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132799276 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126393201 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2206181 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147788039 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092177651 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117080172 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098557498 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151204216 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115992646 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099471756 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173315333 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.489056938 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171207507 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109200942 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096140696 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121598122 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168939543 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119933722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245521574 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123541151 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.174031986 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121049425 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088790085 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122996359 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.171067624 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128083186 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098302993 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126635323 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121858236 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257496254 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227412959 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106771721 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244984439 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181837292 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122851599 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180961697 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120516369 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176084238 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100019836 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125778783 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114571725 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795121255 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127169866 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120889394 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0969227 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207193897 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112991243 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093559221 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.112284862 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088455349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805941157 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094526758 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110060744 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093204913 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122963609 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099356719 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120018017 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096394959 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190027623 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238593699 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103842476 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121059625 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090950146 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.188736822 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093045189 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113616594 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092461881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090933253 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12365029 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117590591 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094514216 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178215207 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.186344155 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.203806079 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.546111013 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113010946 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092361944 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237574698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090314173 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310838394 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121450414 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208101945 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196380485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087914147 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343544151 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178352165 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195809425 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117007978 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17735028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109437173 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097558927 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166992813 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114748003 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12010069 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164723536 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10714905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129443731 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158807376 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09035215 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256436252 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088225629 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175581068 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115154482 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125344147 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292597432 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114601977 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133423075 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16985991 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095185197 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116182028 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.81276743 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11512573 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101778193 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125426382 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230543705 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172384397 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121754623 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120866545 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104262618 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169007698 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.240137263 seconds)
  done (took 44.948231221 seconds)
done (took 60.154386793 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306602249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266249391 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2973249 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198562763 seconds)
  done (took 2.030888698 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181359314 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154474256 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12590096 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111391612 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155711258 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088375183 seconds)
  done (took 1.702879925 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.481566079 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37717275 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.34710238 seconds)
  done (took 2.095255234 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257280896 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283675572 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324487181 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.428863446 seconds)
  done (took 2.289554879 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208651459 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128641408 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101934772 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.141677524 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174989227 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178701815 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146065404 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.154263349 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131221631 seconds)
  done (took 2.297612227 seconds)
done (took 11.304972029 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.265478206 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.161444268 seconds)
    (3/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.248522782 seconds)
    (4/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.317305731 seconds)
    (5/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.216844173 seconds)
    (6/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.247356095 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.167131661 seconds)
    (8/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122836473 seconds)
    (9/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.230448225 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108134521 seconds)
    (11/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248292796 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128529942 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119916483 seconds)
    (14/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.102736103 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.197635439 seconds)
    (16/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.180298733 seconds)
    (17/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106705647 seconds)
    (18/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128492918 seconds)
    (19/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195990413 seconds)
    (20/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.233468673 seconds)
    (21/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.254120586 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.163032938 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106346371 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139906087 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.218468616 seconds)
    (26/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104497718 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.134120621 seconds)
    (28/286) benchmarking ("sort", Int8, true)...
    done (took 0.218193111 seconds)
    (29/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.222131014 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.221991585 seconds)
    (31/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.188658529 seconds)
    (32/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.129544541 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.205457565 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124937547 seconds)
    (35/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171969564 seconds)
    (36/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.190630709 seconds)
    (37/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095947643 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.224574939 seconds)
    (39/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.19251745 seconds)
    (40/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120391348 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.100148852 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.18656177 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.223088497 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201639952 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.151241735 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.144710607 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09637965 seconds)
    (48/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.113613393 seconds)
    (49/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114935778 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143410765 seconds)
    (51/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181209117 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.145932982 seconds)
    (53/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093378269 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.1158373 seconds)
    (55/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.102371394 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18545091 seconds)
    (57/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181901857 seconds)
    (58/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19883633 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088676787 seconds)
    (60/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140015978 seconds)
    (61/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096476971 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119554328 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120077374 seconds)
    (64/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092687432 seconds)
    (65/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.152017967 seconds)
    (66/286) benchmarking ("sort", BigInt, false)...
    done (took 0.231386469 seconds)
    (67/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101908122 seconds)
    (68/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.108404788 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103179897 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120551179 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096840437 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11270761 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.088819603 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120049098 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.143030637 seconds)
    (76/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.174559062 seconds)
    (77/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.132199486 seconds)
    (78/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.238911914 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116653869 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092040265 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.245555357 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.213956018 seconds)
    (83/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.196806144 seconds)
    (84/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.126853004 seconds)
    (85/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.133368045 seconds)
    (86/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.125582106 seconds)
    (87/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089652587 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133453903 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.105727121 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.20388992 seconds)
    (91/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117701678 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103794001 seconds)
    (93/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.123219309 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117471166 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139559793 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112513506 seconds)
    (97/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159567001 seconds)
    (98/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.105714488 seconds)
    (99/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092421302 seconds)
    (100/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12896946 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09547409 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.101673576 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.102625588 seconds)
    (104/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.161762666 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126460866 seconds)
    (106/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.12915217 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.114688247 seconds)
    (108/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.104510726 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116396701 seconds)
    (110/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.205353865 seconds)
    (111/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103332253 seconds)
    (112/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.100137493 seconds)
    (113/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094568284 seconds)
    (114/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.125390703 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09570781 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.127016554 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.204414884 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100652957 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121218135 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.142281169 seconds)
    (121/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.088825981 seconds)
    (122/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.123898536 seconds)
    (123/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076871082 seconds)
    (124/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17451832 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094980643 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124197518 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081043501 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138317196 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.12385864 seconds)
    (130/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078388175 seconds)
    (131/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078217609 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.179301297 seconds)
    (133/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.161401267 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089380456 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121260714 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120320361 seconds)
    (137/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.16080794 seconds)
    (138/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120244378 seconds)
    (139/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095706744 seconds)
    (140/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136779885 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124454342 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.114974984 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.149325978 seconds)
    (144/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093928927 seconds)
    (145/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104001514 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104682393 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.105289365 seconds)
    (148/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079008227 seconds)
    (149/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.128150226 seconds)
    (150/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078536529 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119310071 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.171060054 seconds)
    (153/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095490444 seconds)
    (154/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077542629 seconds)
    (155/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143564531 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139051999 seconds)
    (157/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092402509 seconds)
    (158/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104919107 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109545835 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101659313 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097965389 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.103950589 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096712563 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118226012 seconds)
    (165/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08115229 seconds)
    (166/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116906715 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.10268654 seconds)
    (168/286) benchmarking ("sort", Float32, true)...
    done (took 0.229106285 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167478647 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 0.229532792 seconds)
    (171/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.152650942 seconds)
    (172/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103690171 seconds)
    (173/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123062307 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081608931 seconds)
    (175/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.105037158 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.22194705 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.094499303 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121952738 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081470744 seconds)
    (180/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.249691279 seconds)
    (181/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.102505719 seconds)
    (182/286) benchmarking ("sort", Int8, false)...
    done (took 0.197361221 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081761458 seconds)
    (184/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107315049 seconds)
    (185/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.200797898 seconds)
    (186/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078508355 seconds)
    (187/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.103018212 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.135720189 seconds)
    (189/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.108450906 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10305744 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118283423 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.105391015 seconds)
    (193/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.111076002 seconds)
    (194/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079573344 seconds)
    (195/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152575464 seconds)
    (196/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.084887019 seconds)
    (197/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.100120776 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095841017 seconds)
    (199/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.103102632 seconds)
    (200/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090937098 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116155718 seconds)
    (202/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096112623 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188249888 seconds)
    (204/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.088403185 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.14776833 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125979069 seconds)
    (207/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.096793043 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116579377 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097463357 seconds)
    (210/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.112237336 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.113517943 seconds)
    (212/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143881336 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095442525 seconds)
    (214/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186377658 seconds)
    (215/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.127028912 seconds)
    (216/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.188756759 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081837407 seconds)
    (218/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081519046 seconds)
    (219/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.10121538 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078726476 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.101427475 seconds)
    (222/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.07923786 seconds)
    (223/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118421233 seconds)
    (224/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.170253538 seconds)
    (225/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102273363 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090603446 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122178252 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097707606 seconds)
    (229/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116990119 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096630761 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113306702 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.078761242 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.187509059 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119981772 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096956102 seconds)
    (236/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127292855 seconds)
    (237/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080479704 seconds)
    (238/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110862747 seconds)
    (239/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.084966334 seconds)
    (240/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088352822 seconds)
    (241/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.106301122 seconds)
    (242/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095267762 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.122377669 seconds)
    (244/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095496052 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192571293 seconds)
    (246/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.103619016 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.102879849 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120763003 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140224767 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097569943 seconds)
    (251/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126599754 seconds)
    (252/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083074447 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.104828506 seconds)
    (254/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078803341 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137126318 seconds)
    (256/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096783141 seconds)
    (257/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102529541 seconds)
    (258/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.07883648 seconds)
    (259/286) benchmarking ("sort", Float64, false)...
    done (took 0.17545223 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.143809763 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121050598 seconds)
    (262/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.162885685 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.095314609 seconds)
    (264/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110156903 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097013358 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12213648 seconds)
    (267/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094149476 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114249731 seconds)
    (269/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081420541 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.116981461 seconds)
    (271/286) benchmarking ("sort", Float32, false)...
    done (took 0.154121916 seconds)
    (272/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.105249361 seconds)
    (273/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082206173 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128541445 seconds)
    (275/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.086257826 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117875848 seconds)
    (277/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.078047094 seconds)
    (278/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.102774103 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090493796 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116314014 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09660391 seconds)
    (282/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117846602 seconds)
    (283/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09572753 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.11955154 seconds)
    (285/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098552103 seconds)
    (286/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100152232 seconds)
  done (took 38.377708287 seconds)
done (took 39.26673251 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105897367 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154190406 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101999261 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142819295 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12648644 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106718711 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.123879477 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101700911 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125856406 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.103916037 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.127838733 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.085295733 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125090787 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125382803 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102233734 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143702413 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103876774 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.119772126 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093189453 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.116850261 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093467639 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117218898 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095875126 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.1082711 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101956286 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123396479 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096376978 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124846419 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093404531 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.117603445 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093373296 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121775573 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091481529 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126026527 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095984593 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117199721 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101729896 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125034753 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.095810567 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.118141195 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098265713 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11805294 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096695527 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121764053 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094840729 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11628227 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093231493 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127829859 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144790749 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094771332 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097868921 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12648056 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126519286 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097619121 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115635944 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093979067 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118337859 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121585002 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.116860994 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095094877 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.140367877 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097954203 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116823697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093448399 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117106786 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100715413 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1234669 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093327256 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123621368 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.095978206 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112477836 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093319427 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116189261 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091905399 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.122757611 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100536188 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112030459 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094835496 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121163598 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095279659 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117466482 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092698657 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119751039 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095102697 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091334861 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109947733 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091985953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120198352 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093077993 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11704349 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096516169 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120343967 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096200647 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123596959 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.093130463 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118922305 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117253111 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094357964 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120006353 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092053456 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112950345 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0924344 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098690065 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.114934825 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094680034 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126020882 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091109959 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119890027 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093408171 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117550612 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129434785 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100348456 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118299963 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094841486 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090627103 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12287631 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115851268 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091981536 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115523617 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094289565 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118414454 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.093689376 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092651369 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120571288 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127103732 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090858379 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116630594 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092211227 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094804803 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.120579751 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094472176 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.114902198 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093315288 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.11189442 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092449147 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.115297659 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097549454 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116641988 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093975942 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117509124 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093928566 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119830908 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09530696 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119132677 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092326186 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.111031048 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095226883 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116105222 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09560749 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119100925 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09419176 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.114055707 seconds)
done (took 17.455983616 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103633673 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187358125 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150774188 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.152791171 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.125817209 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135386621 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127915392 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.148359554 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.101745123 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145840708 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148838377 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.11537045 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153798474 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.125991358 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.109415732 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.124506926 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.098817779 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.133603458 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15772499 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144042052 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126619931 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125681317 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146729559 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143973201 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099508247 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.144554963 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102274876 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125153909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127458238 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116975165 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142647357 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103256066 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127067873 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135947274 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108638736 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122738213 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110056738 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121010131 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100453983 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125740714 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137345677 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112307111 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122407909 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132001584 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100554385 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12752789 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.098972426 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122877952 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100524349 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119401302 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.103776651 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146111734 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123131216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102339443 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125970834 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125698893 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102491642 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128814707 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.102720923 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128984849 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124802304 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103012864 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130346033 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141803869 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099903731 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127134078 seconds)
  done (took 9.182911207 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119489683 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.151261418 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131046082 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107588553 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12814631 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090141695 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114369425 seconds)
  done (took 1.79444955 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09588903 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146006653 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123269153 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147475911 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140305195 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.126263753 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132529773 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092014549 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139275203 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126411963 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119665172 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.170358398 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117784205 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.10404303 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.150603803 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091613559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.150388806 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091009264 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124059015 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.148654016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097873617 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137890549 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104402155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118330739 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137752384 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094252423 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18215043 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1035725 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115972084 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098094457 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122230201 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185695807 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141618584 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102039922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117454568 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119307618 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.139463636 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121737527 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.116884865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121235993 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.113635988 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123194389 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09968006 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122914051 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099477659 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.131935122 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127574353 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.100998319 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122707677 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120885294 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12841084 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114076396 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118141082 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096400448 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.126604484 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098357197 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131194754 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122365176 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121343682 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124837574 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117266585 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143588727 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138775036 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118057343 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13381222 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139187766 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.11410414 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123196944 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100018309 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123618745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118718556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121184133 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.102249093 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.133435929 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126340666 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119192173 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143910441 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097259336 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129789834 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095818184 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119897879 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092721193 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133168154 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096244297 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119596271 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108973904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129915798 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122755112 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096248666 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140148686 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.096571611 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128856627 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103512116 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122405345 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132331148 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119893483 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128339296 seconds)
  done (took 12.747069142 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09850192 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094856931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123638802 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.094893023 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.119679607 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094134784 seconds)
  done (took 1.59100677 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127951389 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121938539 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109141826 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125368459 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161797668 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.116974574 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.143959625 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102905676 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138444501 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133222649 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.117520867 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143932331 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148585756 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10064302 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142260768 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100697138 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143182403 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097451005 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132558495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097374147 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134284932 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126241782 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09798425 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141278296 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101577008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126713603 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10018182 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134855683 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108523039 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130257807 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126600053 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.101951105 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12492899 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103482857 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143616689 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125540226 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096471813 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128353014 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101761128 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126464449 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120123671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123412612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107366805 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127727261 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103624477 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125653478 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128794108 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099233691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.142333457 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.102708492 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128100125 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101453361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127226831 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.103215953 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125795696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10302137 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129596586 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143289077 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.10128233 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126520295 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097775879 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.126937993 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103764041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128089291 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101170797 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129038903 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126128451 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098006393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098048356 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125419549 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128085574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098001058 seconds)
  done (took 9.589647742 seconds)
done (took 35.852159823 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687054561 seconds)
  done (took 1.650168674 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.836927085 seconds)
  done (took 1.802307381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.963226209 seconds)
  done (took 18.956773798 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.508184476 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.601491977 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991189694 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169919408 seconds)
  done (took 3.238786604 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951130422 seconds)
  done (took 1.9405188 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.303411159 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265476657 seconds)
  done (took 1.537942587 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.806856302 seconds)
  done (took 1.78244412 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.553296666 seconds)
  done (took 2.530304276 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.359949377 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.203438456 seconds)
  done (took 1.555622757 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.578458162 seconds)
  done (took 1.560809583 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.671069351 seconds)
  done (took 16.656050167 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250491195 seconds)
  done (took 1.246167359 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308489179 seconds)
  done (took 1.295126404 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.700671628 seconds)
  done (took 4.684754347 seconds)
done (took 61.412310082 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106206643 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131808229 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106427353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129110756 seconds)
  done (took 1.452402019 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11207229 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127331072 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104514943 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126725392 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10903724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127506011 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100583347 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.184434401 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126249676 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102341641 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126647549 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100181144 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128611364 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099776599 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12474471 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102735818 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129889417 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100689801 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128570243 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128019078 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.099628848 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12792012 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103054356 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126542143 seconds)
  done (took 3.832552973 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106862967 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098059848 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125424165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096807839 seconds)
  done (took 1.415558537 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111373241 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140466726 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112950399 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133373894 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113902668 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138498642 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123092474 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097149309 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124967526 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107244341 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125259884 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117178667 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140410976 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.091737302 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.134151978 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094720863 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119547752 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138871853 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.107032408 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134486695 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096955544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.132296257 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104677372 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136907132 seconds)
  done (took 3.870720138 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.183795175 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136928277 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146953084 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.104265966 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.17384982 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149509162 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.096434676 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.149535569 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.097510976 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146080207 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.127690754 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.149978475 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.141273224 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12703822 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.09804457 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13029098 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.139915682 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.117002922 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.126161262 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.109526176 seconds)
  done (took 3.643158019 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106997455 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122053516 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092646603 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095732237 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.130107375 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098937938 seconds)
  done (took 1.647415981 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096291145 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09160452 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11833467 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091305563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121875202 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091786235 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116718678 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.091628394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091535992 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117863629 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090971755 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11629686 seconds)
  done (took 2.235817383 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.389406487 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12231881 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121542278 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096456097 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129464041 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095799666 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135152238 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094819879 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.152534776 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096161262 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.121576759 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.098900872 seconds)
  done (took 2.649895259 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217642423 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101485075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268993607 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.428324602 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159996123 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170521958 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.332195925 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167792396 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.217159979 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116658277 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19987075 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163447957 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159697495 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186119008 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145690749 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.181701303 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182404979 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206214456 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15540344 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211350829 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169658025 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17386708 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185143525 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157403826 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142197321 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163546683 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098289793 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133033031 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180051891 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176887868 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181164947 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154188943 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143814586 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207902926 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21802178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212195491 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364467178 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138072918 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19699533 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186819975 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259969504 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119911786 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22605078 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160425942 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109842265 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186815929 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162648257 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185758365 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137840799 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146460305 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18990772 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18243911 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185425963 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143609549 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37287867 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126706928 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.149371937 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193083134 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219291875 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196146355 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174360398 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101839782 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251882962 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18729311 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185933966 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152344621 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173109058 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1034719 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210276662 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198780551 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182524271 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173826974 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188717309 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138375378 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170210534 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174402093 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161152488 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183994322 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167748144 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09949345 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157400057 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143224002 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10657659 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190561284 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12785188 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209036822 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141746433 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.274132464 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220120583 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16392181 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167895629 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171095029 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173163631 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154003066 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097084358 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152799593 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.167187418 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166780006 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109462328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16300198 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151992834 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133135391 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132045969 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129959299 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165690977 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.138377302 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173829641 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170000034 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107738372 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170917117 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15629678 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164003724 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178426045 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191922268 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110053907 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13715895 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199872699 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166345815 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142758394 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18138065 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191257346 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.170431676 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143119822 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174730109 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201405556 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12023513 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221996983 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119087295 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138791907 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.15668914 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16502143 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163058473 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.132250575 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137015273 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162459152 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198857272 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133536499 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114489003 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180413823 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131913773 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133914523 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123727835 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142590301 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149566009 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154930449 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.117345187 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163282238 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167492224 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159950489 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165922558 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147523616 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199490806 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138279277 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.138933034 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154683592 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12484634 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.186917904 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189720883 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134494107 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192995707 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175300684 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266724243 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171873848 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109116765 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186158414 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135634273 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097964444 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173128888 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166796402 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169341674 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188457412 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269387539 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172869898 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159698309 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156674981 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175086999 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181163855 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162359718 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.12340921 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169229799 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173808425 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129686122 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129915026 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105591916 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147148649 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108448421 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139110866 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188655449 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171468774 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259501259 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166723475 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145948526 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187236605 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103751801 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171101776 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17872974 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145917424 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189369435 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188086037 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174491008 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148279928 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177438353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097776329 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13101772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139364169 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173033194 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110049819 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140423046 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148250676 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187275553 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18264722 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155076303 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244347718 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200735745 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197430212 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099675856 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169713883 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176529948 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164158189 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167954935 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135504966 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.166327443 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183731176 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149537828 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198006828 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169525923 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176165104 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204740349 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163180641 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137166688 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155028769 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175306565 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117886867 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167627846 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152684074 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140796194 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132663422 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.142317633 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13166789 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189467907 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150545305 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186578368 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16257585 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179170903 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13256012 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121207865 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166477095 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153941913 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095266827 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20621593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192767854 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150550963 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165389461 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180812071 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107887367 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.391819689 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197223269 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191173829 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143431084 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148721645 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139316341 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165021567 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172259332 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187734936 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149725473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186859265 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16548941 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150036795 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1120474 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153533335 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156612419 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157666344 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110816776 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159398646 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152814524 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191528397 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152608533 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166397674 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172821906 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124398417 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.160350856 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14798807 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207955169 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165916018 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185107505 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162881325 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173429401 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194817119 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101617132 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134568412 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13216023 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187427394 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110560141 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166365818 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.253376554 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250157242 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165348678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175606782 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144625374 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12916439 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137256107 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155866344 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27105683 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14720085 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112976451 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228593671 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128256758 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13726947 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169780692 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.343669563 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148218264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180725158 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127421828 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32184878 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131422491 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109563424 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166586343 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17649557 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144334662 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189247473 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173341136 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122920411 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166793211 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14499214 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257955159 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22370947 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17836846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182240511 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150414318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164879059 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171356887 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18385426 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149469648 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121915828 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169815528 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189781679 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.189726127 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139881676 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172352489 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170432027 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167090855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181531078 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111529386 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222539673 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109757088 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173866105 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148128712 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13095914 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138141222 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.255962804 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139060487 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18416545 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164772161 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109967977 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133364459 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158943671 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165949032 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121214838 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135565848 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186791706 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133755174 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141799483 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187851007 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138214097 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162229715 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124307645 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146052141 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150006938 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151477852 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112825516 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178174876 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189146867 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137149675 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18422355 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17964636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173351586 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167374081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150798787 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639130297 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135136868 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189840153 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155061766 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194104503 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155705697 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144001996 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16966829 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158277399 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175645421 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158386517 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225959789 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17461273 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165697793 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109210375 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152160256 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153563405 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137541733 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128945075 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171155778 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148944382 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144020313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.134449461 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151907178 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152811388 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145021446 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189815338 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125664764 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218888762 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190069396 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115444679 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17436578 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207773681 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107826065 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167640777 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178650543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148454446 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157259868 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108086258 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142414616 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188245104 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101603329 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169199327 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16873008 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172023533 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171822555 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140706483 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137652993 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148432515 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169470212 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136951188 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16018806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135632098 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138858858 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133851079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132539252 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167305059 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16479238 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133403016 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152585968 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184374139 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.131832821 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140664941 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334873255 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166699501 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199215613 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.158714808 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140557095 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121194555 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162569108 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160938623 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167799189 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134845936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10981874 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137797205 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185441805 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.158907482 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135844351 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201191774 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168478725 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195985295 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143311441 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.267177379 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115938832 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162397195 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137449198 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135977317 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118762398 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142043827 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151773865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232112611 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184946857 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160115893 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152183356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105749431 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134525084 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111025139 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16680104 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161753588 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167133751 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150984342 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095181732 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151652651 seconds)
  done (took 80.706513301 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156210752 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150753925 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15432718 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201541048 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17195971 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249156985 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211656559 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235680361 seconds)
  done (took 2.615175856 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109573556 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.1638733 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147033138 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130152656 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095998052 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.332630562 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143603519 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129443467 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.154229669 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1390654 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.098111766 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.567280469 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099849027 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130613508 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119780374 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095718197 seconds)
  done (took 3.732959083 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.341458561 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549540505 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.184538491 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.252257997 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23205134 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.156624218 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.769046323 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.189837763 seconds)
  done (took 12.762446859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131889987 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145865534 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.144858168 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.171515102 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.127379887 seconds)
  done (took 1.813708965 seconds)
done (took 123.358796239 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105300742 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131838153 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102032513 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133150332 seconds)
  done (took 1.550383154 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118679641 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086180689 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119392699 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085315145 seconds)
  done (took 1.493964042 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428737265 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117402953 seconds)
  done (took 1.671186396 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.124873499 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140378187 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.112426396 seconds)
  done (took 1.464561044 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113271228 seconds)
  done (took 1.205941531 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107902465 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.104111992 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.147697116 seconds)
  done (took 1.452319369 seconds)
done (took 9.931225873 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123216022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.441906926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391897105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143186616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727371249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384980945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031848119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162985275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14460714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124728052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114248354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704431397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01673117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345592895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001259453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.342987625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680116121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129167406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130824828 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098685359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009565803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096513702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097274112 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127691528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676906579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428525895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096183512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.389153731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12423489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100947786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413413185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096928819 seconds)
  done (took 16.975821396 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107004672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18574386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10401447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127750431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100429181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127581453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106056215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13940238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1881102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095247947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143007915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095277954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130337039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096512445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146015933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095690196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128446193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099326039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133328519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09840227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144783944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095501487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127422853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098254237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125676114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109207864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125591194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109378943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127065716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100663038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131889476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097109348 seconds)
  done (took 4.938433175 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152895932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195443794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134092136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131658511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176445448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126971056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.181511962 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165456581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190710249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125878398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114310486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125990159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13214961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126859153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117722909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126638549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09949965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128245583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103428898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127985998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144964443 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097551051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098125478 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128085136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096649603 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139448773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097325532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138680406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125081019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102539292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130220287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097924531 seconds)
  done (took 5.280323593 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.109542971 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135039873 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113304957 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142792933 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099413731 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133353615 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105800339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128765066 seconds)
  done (took 2.068942959 seconds)
done (took 30.352500853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119006371 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102066171 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140685594 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.110206152 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.139042185 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.12023403 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125017989 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108560348 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139497727 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10606435 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142840676 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096746543 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127760906 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095944463 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13914889 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102338326 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140745183 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106473411 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.146197653 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.112635848 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.127127604 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.109146167 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106055708 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.148009073 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.146362462 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.116917731 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142250706 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102654342 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126976085 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098194637 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.14035882 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118736814 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128323981 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.114114953 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131636926 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102249882 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127242175 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099286844 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.140647029 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107973656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132012301 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108101492 seconds)
  done (took 6.183860717 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.128585684 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.169662285 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097423775 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.127653517 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.099079402 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.165076749 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.161557822 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.097540041 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127167793 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.1222541 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.152731585 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.097763741 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.12699139 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.097422189 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126294814 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099093097 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.152146454 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.122032619 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.158228592 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.127288282 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.172536814 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.157817289 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.161813196 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.121763297 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.168597791 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.162006193 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.119021082 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.164020709 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.124581659 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.126918609 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.157353075 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129925087 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.127481341 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098486373 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.16723835 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.162872786 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.125370061 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.167293156 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.157841712 seconds)
  done (took 6.43946148 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111672412 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14130973 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119522177 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19444586 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136022871 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.142515398 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107160778 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.146217843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113668276 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.128665523 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.107250839 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157991421 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143277665 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104849792 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104386528 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142270084 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146334907 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099932602 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131732845 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116500165 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14510022 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.110564934 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139533834 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107546136 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126607869 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107108196 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130164734 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113255475 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.132211076 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105782415 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130698561 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102916568 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134732919 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110055115 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131071923 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106140032 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149912835 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106851603 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.136538587 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131336944 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139696749 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102445 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149701523 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168263949 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099322866 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134756809 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105663489 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105869301 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126885504 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11591055 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13716245 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09841019 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143132816 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127473289 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097235698 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112115816 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130647154 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100654747 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135102349 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105688828 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147239797 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102424345 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142584525 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098272267 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133860652 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097788246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127679459 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102362889 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149626501 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101034315 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166772535 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098131986 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.13470243 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105339631 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133310738 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106513227 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127161678 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111309815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137196046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102550558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137911937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101342375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131712543 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115898314 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142852017 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.105779054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.134543764 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13407418 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102887604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098333249 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14258936 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100159356 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.132138822 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116319915 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128475386 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100187474 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134883398 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10290642 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126730396 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110336422 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133214425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09818014 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137985275 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098260059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131918622 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107950145 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.131336147 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098054774 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132749022 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104885847 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127077951 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101600799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.131875932 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100584735 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141009746 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.105682268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100662312 seconds)
  done (took 15.41021773 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24769471 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22446402 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.200292707 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308896188 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151670614 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125381389 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220986483 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.179385037 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128998673 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.136816568 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.182460774 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.194971909 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183971497 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.195290015 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.185811268 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130454065 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118517607 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.181493383 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.225576482 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.308146059 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117873441 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.145420356 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17019818 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169541865 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.117040478 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145481275 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.152490083 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.120862163 seconds)
  done (took 6.09672202 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119722191 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165747102 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.105936104 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.156034724 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156544884 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.100126751 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.134551714 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099658842 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.143347452 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113501182 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.131086427 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106477732 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135342106 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108799503 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.129822394 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108037138 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.14005254 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.1083065 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133118319 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103357751 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143074746 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116467852 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.137135864 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101340976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146553637 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131973458 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100083912 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151396987 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136659072 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125054194 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12725024 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108747941 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144192045 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099124454 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101984013 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.134318832 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101198956 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131090008 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.10076544 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126990147 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09879628 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.120715461 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101522272 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145783293 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106047325 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.126979456 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104142866 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134514952 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106261572 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126503759 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101669552 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101613591 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134995734 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110705065 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.134176794 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.603090694 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.135048261 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102059625 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.138801042 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102005583 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.126748924 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100700552 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135838836 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103141289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137879241 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105450987 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130974107 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.100522037 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.135094393 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106034837 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.132080616 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.107954376 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.127033081 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100784489 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.140272818 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10793994 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133660166 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101380729 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132816107 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099188074 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087920679 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128981553 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086081182 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133794877 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098638935 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131406248 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102374249 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.135329342 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.116124351 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139120662 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107220941 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130400307 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102204982 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133773637 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096562522 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133957244 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.116739979 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149012509 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098542044 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.128269587 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11454155 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.13207109 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097324686 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121387498 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109485354 seconds)
  done (took 14.233497625 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143060682 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.180854213 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131717803 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11823474 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.16447168 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.17166817 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108080388 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138836935 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100212061 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119038811 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.133135936 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107347836 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133526075 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114356125 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171928617 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.140346779 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100279893 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145058664 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.1051497 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.183250764 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15004143 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.1380002 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170112444 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.13399496 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104768642 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.166443898 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.174502738 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113297031 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.143129664 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139626353 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.14405482 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.17410147 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17179944 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105071604 seconds)
  done (took 5.879774371 seconds)
done (took 55.33555628 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.202494136 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.439990204 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.196166653 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.195157797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.1998593 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.224280146 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193170539 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.395224249 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.982668863 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.18151488 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.196625122 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.197163412 seconds)
done (took 27.726260794 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.278955947 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360906598 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501518178 seconds)
  done (took 3.981297278 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.196699915 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.195714203 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441262541 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.199066125 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.213887308 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.210605438 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.197013043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.200433363 seconds)
  done (took 15.776038393 seconds)
done (took 25.351811701 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.263305052 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.373845942 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.444758209 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.218486862 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.200175924 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.210827893 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.198437833 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.248010422 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.206211984 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.198846447 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.194300623 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.455290674 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.226255487 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.571903791 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.196210289 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.197431458 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.219109207 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.418089118 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.199829057 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.203872611 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.200768753 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.187098451 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.218243616 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22186953 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.209213175 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.199898179 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.25686402 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.195014021 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.37662818 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.20147411 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.244590718 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.200728655 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.25880708 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.199616682 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.323968161 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.231523574 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.373984141 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.210406084 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.187547867 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.208827765 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.377226259 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.629586051 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.205263615 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.202634966 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.209323244 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.24978794 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.183920821 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.929336843 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.206187718 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.203164849 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.211744857 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.588757346 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.203652243 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.212012015 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.213584801 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.430604377 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.206300052 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.250667128 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.23692507 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.201816104 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.201015974 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.21139773 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.218124545 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.213609407 seconds)
  done (took 143.27130706 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.20047492 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.199638723 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.199759998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.222058355 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.201834049 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.201021908 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.20372183 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.203559085 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.200624859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.226185427 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.203711299 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.199335849 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.204851599 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.195727022 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.204691378 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.219504418 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.202812223 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.205935308 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.203095779 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.20321461 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.214294862 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.207550988 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.21807392 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.203673238 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.20709141 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.285447215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.224304248 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.206727466 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.205954695 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.204865835 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.24806314 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.221709061 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.838390137 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058896992 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.211630868 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.230212551 seconds)
  done (took 80.215020891 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203446601 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20272892 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203037301 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.237861785 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20317848 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.809538461 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.81124754 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.936816502 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.596992035 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.646125664 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545091348 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205974881 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301286635 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216039796 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206150668 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218874342 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.228450547 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206560443 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203440905 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810856923 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.22101042 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.226791857 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.402331987 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216606129 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239370077 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607121746 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203489095 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238684209 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54618198 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251576915 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20202756 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.628112458 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.469554753 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320986213 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20374017 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240644612 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206559547 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497187711 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203251416 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205903236 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.210409519 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921932579 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207578008 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.810919931 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207981109 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21556775 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207522374 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205508797 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.420207337 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.966282838 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.222773975 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205279596 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208718645 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207451126 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205273425 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.240759619 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.422541757 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.320454364 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209853963 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207200935 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208802189 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24074666 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207850944 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.206946709 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219999715 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.736879283 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.279496337 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.427110141 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817298834 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21108888 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306221114 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326657195 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204254698 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207676277 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208831654 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.207944796 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.322116265 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205460642 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.650957355 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385686778 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223275648 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208510953 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.65532096 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210822709 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305537529 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206347755 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.628513665 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20907868 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209023882 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.035352862 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31063748 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208295205 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208518378 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209901705 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.653196212 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813242882 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.47565566 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210286898 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.613853076 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210577926 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.655166938 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.784830226 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936378631 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.210148774 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326490311 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386520673 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.222397042 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.212188758 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.209302129 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.665529896 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.212210261 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271943782 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.213026986 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.614705096 seconds)
  done (took 367.590757372 seconds)
done (took 592.199151032 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.937686132 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.885615601 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.024494335 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.914032282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.880611877 seconds)
  done (took 10.773098725 seconds)
done (took 11.904132111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.411639059 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.411166216 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27372955 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411632474 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244266236 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430198163 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390843898 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.23291768 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320206633 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.297891904 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320179739 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271938372 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247298786 seconds)
  done (took 18.395067943 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.556186031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.212069931 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293190262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.560393265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252232171 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555147826 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428630978 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.235642133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434629358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229240314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227466394 seconds)
  done (took 18.119091829 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554053836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.213086408 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294976908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565674432 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253925898 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567353934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421711572 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.233688346 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417091823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231242656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22856578 seconds)
  done (took 18.115207396 seconds)
done (took 55.761614853 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257520822 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.383906297 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240336302 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.22920929 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22170683 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225092447 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227238963 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.221695367 seconds)
  done (took 11.139001742 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220688652 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220623038 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220193953 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223641151 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.224408276 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220551359 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224500809 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218954131 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220340638 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223971026 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223116255 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224742892 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222006795 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22591753 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222143732 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225204602 seconds)
  done (took 20.696413646 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22477837 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220189384 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221006945 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22154892 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.221726174 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223508229 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.224082301 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.223648586 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223820347 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.223623528 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226064847 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223547228 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.223819698 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.224664754 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224092892 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226176399 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22481914 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.224213743 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22692206 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.22165755 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.224105539 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22498347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.224008363 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221842023 seconds)
  done (took 30.506911791 seconds)
done (took 63.475664877 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.216937341 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.213490909 seconds)
  done (took 5.567605944 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.283807728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.289417812 seconds)
  done (took 3.713435476 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.226784031 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.225534258 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226702666 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228061612 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227177063 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.227540313 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228571947 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.228004435 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.229455139 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227010401 seconds)
  done (took 13.410393269 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228277235 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22774278 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225335016 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227148105 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225877598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227078879 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.226812721 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226926034 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.227921039 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.224539416 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.22831232 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223891293 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225584495 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223620959 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228052367 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22341581 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.226247574 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225514497 seconds)
  done (took 23.209903698 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.238049053 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.2473736 seconds)
  done (took 3.624158662 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.355347503 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265870875 seconds)
    (3/7) benchmarking "month"...
    done (took 1.337541794 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318973316 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.265448451 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243897063 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263461239 seconds)
  done (took 10.187061486 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226429356 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.415851354 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.526144667 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.802482753 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227872435 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230992093 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.092360235 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228861331 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231945907 seconds)
  done (took 14.121080797 seconds)
done (took 74.969591432 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.214919296 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.254434994 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.242359935 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.235074021 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.519963948 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.248984683 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.219293661 seconds)
done (took 16.072925447 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.206401635 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.221099269 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.222402215 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.217860297 seconds)
  done (took 10.004122288 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.222620592 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570609275 seconds)
  done (took 4.930972256 seconds)
done (took 16.071480115 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224405328 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225350035 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221379826 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224730502 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.220846249 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224174534 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.220936918 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.221920642 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224338013 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223036867 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.223496763 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.220878637 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224606855 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.220149084 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219522808 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220402479 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223769163 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223645501 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221792036 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222260126 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2242947 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225414681 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223060223 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221116246 seconds)
  done (took 30.481933534 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223244687 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224024773 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226958177 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226726129 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223877128 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224080467 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222384003 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22285774 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.224086004 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.224326294 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217341137 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223184674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224919868 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221540855 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225996348 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.223147889 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.225601052 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22221022 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220938623 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225241933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218666522 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222507305 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221786451 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225305147 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223593777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223397553 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226401261 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223759164 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22592213 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222188914 seconds)
  done (took 37.843521931 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229983717 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.230997377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223998934 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225487481 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225423319 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226718711 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225160206 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22681755 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224010183 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224980205 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225913005 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.22296929 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225488449 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225540455 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225977497 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222574709 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224909079 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223156137 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225509238 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220755177 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.223966382 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225907379 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225547409 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224138476 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.224899674 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224938112 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224762596 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224865088 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223699437 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223941769 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224985836 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225759972 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225643618 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226115562 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224530409 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22476742 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2301122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228874372 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226324906 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.227494486 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226869357 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224202605 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225394129 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224373194 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225808454 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22432834 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227253941 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225083343 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225306124 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226882867 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224707739 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22564561 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225761256 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22514838 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226070429 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226749929 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.224781253 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228274106 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223844467 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228533933 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227998917 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228287101 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224770076 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227511795 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226337145 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.226978362 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228026057 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227162237 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227870551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227623215 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224799022 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224889758 seconds)
  done (took 89.394557939 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227620118 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224001751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22336778 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222992145 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225652344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225918287 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225139622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228646615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225456784 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.223840417 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226032815 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226063381 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223004588 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229925634 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224186404 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222298297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.227776628 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225393532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231135999 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229362464 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228134949 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22690765 seconds)
  done (took 28.113151963 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229996642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227872347 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224274045 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232131327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227167127 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232150438 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230118612 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231072227 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228654579 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223870175 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225188041 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228689175 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229815502 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228349572 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227865252 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228351704 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230116151 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227122499 seconds)
  done (took 23.254688071 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227070861 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223671623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230847668 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228614901 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227844292 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228731576 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228433098 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230756528 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231866407 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227564201 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231487842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227567978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231702078 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228816253 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232681559 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228037283 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23054115 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229706962 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230550791 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228618548 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230156439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231261647 seconds)
  done (took 28.18913501 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22741149 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23277758 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228952635 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226036898 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227896594 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227554171 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235327984 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229523995 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235742977 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232610258 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228285383 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229590859 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22891459 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232940678 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231764815 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229782283 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232940601 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227903205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230831261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231080557 seconds)
  done (took 25.752113259 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231085499 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227361468 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233069226 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232186131 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229989219 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230034558 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230486542 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231872019 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229980195 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227374449 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231735813 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23304308 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229417969 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230627492 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228196588 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232587076 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233158074 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231797888 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233451869 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237258545 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230462853 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233156976 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232159888 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231965555 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233793397 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231013495 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234250331 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235932004 seconds)
  done (took 35.632811741 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233754306 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234379676 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233400569 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.234011721 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234985327 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.234750461 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.235185913 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234105802 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237502335 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234513941 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235702022 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234953449 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236962973 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236225717 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237182294 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235260294 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236935293 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234501032 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230366714 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233726477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236377071 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236982878 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.240860609 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234420602 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234159982 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236113077 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235350528 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234278949 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238836762 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236134857 seconds)
  done (took 38.209628869 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.275340246 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272588102 seconds)
  done (took 3.694872058 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235163091 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236328782 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236891366 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233527136 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23236003 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234688349 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234875318 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23314633 seconds)
  done (took 11.023250415 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231718792 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235567204 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233077425 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236494949 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234517874 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.229954617 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242580026 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.261535309 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236881694 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236312394 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242845586 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24079113 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236031736 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232152621 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235161735 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238521496 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23910776 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236479058 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236195207 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238066965 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235762795 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238749529 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238370748 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235160961 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236309818 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.245136866 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239504776 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23958515 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23488702 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.239760244 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237178683 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236625716 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235646422 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236218198 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237991458 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.236080989 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247120352 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257677667 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.244252134 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238175288 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240920599 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236176009 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237376453 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240678067 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238761529 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237588647 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239667702 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236844756 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237261117 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241427418 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24348713 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235184705 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237745129 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24055734 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241170253 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246232222 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258616779 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24165015 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246589713 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.246565974 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252100951 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263204073 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242040299 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240843849 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251857139 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262913286 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245832365 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258704127 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240061144 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241841784 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246854031 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252311846 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264539004 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240344663 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240610223 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244339317 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24239117 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244586571 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24573671 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264050711 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.240612507 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239894881 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251612565 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263836708 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239106798 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.237164007 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24090754 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.2417441 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24094704 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247779181 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258648515 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240651679 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240651857 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240444793 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240938925 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241847494 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239677276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243254816 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240903671 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240836234 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241776431 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244353921 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247389066 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243164117 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24277704 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245756506 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246076436 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238733453 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244055461 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.24333429 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239299073 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24352167 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243917604 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239335529 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24297459 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246191736 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241855799 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24141392 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241590178 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243768348 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252864702 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267028406 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242657785 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242539018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247096909 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249892034 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237326792 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.241649192 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244604116 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241448782 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239862303 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242847101 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244409009 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.243944593 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243586062 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245284479 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.241918356 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244727878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242928139 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24416881 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243955788 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242971214 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242638483 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245062146 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242548837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243502679 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250000384 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.242059275 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247331177 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244669043 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241749075 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24377006 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244350398 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243980725 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242005586 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245512357 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242705904 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243540435 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246688794 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247010971 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247737276 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.246023971 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243995415 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245022834 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248326468 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245345901 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245478682 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245614386 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248055812 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245383503 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.248898864 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242599144 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249276839 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.248363143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250331157 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246530353 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245811484 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247628459 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246225754 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24455304 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250097232 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25109899 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.245347219 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25316631 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.248277366 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248629579 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246967891 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244603289 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243966644 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246033544 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250323105 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254041545 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258150593 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271662123 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248745359 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251562244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248844295 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250038386 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248883518 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244650667 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250459732 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245987325 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248315572 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248083493 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250294427 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246769961 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246872788 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.24984528 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.2514246 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248194907 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251400578 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249024009 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248719033 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248055802 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248654374 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248517821 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.246734581 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244665936 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244597553 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248241898 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248758884 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250355716 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.253891577 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.247157363 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249967017 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248920386 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244958271 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.2492389 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252022937 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25270777 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249591327 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250779083 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.269050098 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248841383 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255008046 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266330588 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247685534 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.2529328 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253552509 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246887337 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251155302 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258004756 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252332884 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.24834139 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249961022 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251639478 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250664032 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253688244 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.250867388 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252115923 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249213279 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250469941 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250279761 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249341667 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254334793 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.2509614 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253944075 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25646488 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253678635 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249606872 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24961204 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251752352 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250707552 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255583505 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257000691 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.255985916 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251261831 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252883756 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.252586567 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256778435 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251578513 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251345738 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251975359 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263962998 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276810729 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25845806 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.269096591 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253004272 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257363326 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270153028 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25027371 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252834032 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254138767 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252120023 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252484484 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250110935 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252352547 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256103297 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253864921 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.255875922 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257616931 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255455036 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251074492 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254037006 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253598384 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254429335 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250937034 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.25634364 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.254479951 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254542696 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255161449 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.253919675 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261418876 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271323774 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253860907 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.253765588 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253021691 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254456797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254009843 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252893002 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257216741 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257955683 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25758443 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257308794 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255855195 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258464738 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252706896 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252634647 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263471211 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.249646868 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.253831725 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.254729545 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.254369104 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26212687 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276929946 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257458993 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.255810103 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253096199 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25444465 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25793985 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.248481113 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259164872 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255543912 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259173776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279058637 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253513578 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256809618 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.254578495 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.253925676 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259206942 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254656642 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257403861 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255084926 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257147645 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.254282996 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24971762 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.252660382 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.256627528 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258677311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251507931 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259244349 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264052399 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278067684 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258406229 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25678912 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.262437376 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25857941 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262187694 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276277612 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.254914853 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256647304 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.258429817 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256305426 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.254649562 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257387311 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25676296 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.259216079 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264611651 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256579344 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261409102 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.260136324 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258738597 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256649721 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26926865 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280023365 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261241133 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265295544 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259262418 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260561037 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261889902 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258845749 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.25708487 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262162329 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271314271 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26728828 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258950088 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.25977355 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259144542 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259274815 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.262174047 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263199931 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258966754 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263185833 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258231621 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260709977 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260739372 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265327058 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260451989 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261060696 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262076744 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.265902815 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258568054 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262076113 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262895918 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264005394 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259788672 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261568721 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262450769 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261046399 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263308805 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262780165 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266053499 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.264802619 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26381144 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261219724 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256701871 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.261780029 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257742276 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262770606 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260993287 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261061366 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262506093 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.257628803 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263317845 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260722786 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263254312 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260242961 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264934284 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26648838 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.268423666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262735238 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261574984 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263913566 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263382028 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26149624 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.262191267 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.268248091 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265407472 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27149223 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.267343485 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263962078 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264465717 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269996866 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269077561 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262316468 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265051817 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265730494 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259230557 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265558756 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.265800249 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263074954 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.269908528 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26348966 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.263492291 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271259929 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287089717 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263526369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266374173 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267056122 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262559962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.263139302 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.265251166 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.26280332 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272031668 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286235087 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264654438 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26754387 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.265435884 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.265416349 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266254393 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26854213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.264568463 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264542063 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264167063 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26393146 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26743448 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264791724 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263685984 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266273277 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.268690534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270792265 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.266576422 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26840729 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266924868 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.267419498 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267180367 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263176362 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265421041 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.262988193 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265573236 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265019401 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268007609 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267227529 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266782917 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269703315 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268902603 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264748713 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270217955 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277946534 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276375101 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265206494 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267854611 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266408896 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.269126871 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268794542 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268341309 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269404353 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.268488353 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269895187 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266376031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271341395 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.269381061 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282362309 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.291413044 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266165275 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26938759 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271159312 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270778904 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.265787101 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.269316078 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268624345 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270931139 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271868369 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267988979 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273888869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288802288 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26602997 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.271856367 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.271241483 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275454403 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268557824 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268385044 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263134474 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272085583 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281365792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27012913 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277034797 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296605963 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.28809049 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270999043 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.270111776 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2667016 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271498798 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.267814098 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269053343 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.268983186 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272402101 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.264214951 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270588662 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272681152 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.270641567 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276790471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271162758 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269362244 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.269781227 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269645302 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.270061314 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271425146 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.267413803 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266987604 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.269950077 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269878261 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281071999 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298489593 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272151596 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.269232633 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.268631757 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270118451 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273625783 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279609943 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279770005 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267905895 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.268474265 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272362149 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270284134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270856801 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269788683 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.268439611 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271062677 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269224736 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.282398803 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294174704 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.27327179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269049333 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271446789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274689758 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269581672 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269866605 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27307228 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272571988 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275016854 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272256725 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272893987 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273243181 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270304735 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.277460379 seconds)
  done (took 749.81793271 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268388378 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266850601 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271384089 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26876404 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268308248 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267430778 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268089073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268633331 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270824933 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272231063 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27061758 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271961034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268813643 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271589639 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270980405 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26984971 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269032332 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26848251 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267812519 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268160337 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269884074 seconds)
  done (took 27.839804836 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27284134 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.269075442 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268536205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268946226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271631343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272706501 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268580158 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270797052 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273687906 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269705968 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273420065 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270196662 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.26945639 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268745093 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271169252 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273972903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.271207889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27186987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274234392 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268017826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273343332 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272631668 seconds)
  done (took 29.147579908 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273227612 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268530865 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267800879 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.271151901 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272755759 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270030949 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.272322833 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.271446638 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27191511 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.273858789 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.27239522 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.273071626 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.279685572 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.279181972 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.270473417 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.271780722 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271773558 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274830721 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.271647391 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.27078637 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276823586 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.294098837 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.273206163 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.272626476 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274293203 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.274050141 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.275167885 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273805304 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.274495263 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.276534503 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.277000743 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271612267 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273841823 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.27554223 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.276550871 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.278333243 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.27531235 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.271338073 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.277776414 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285723432 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.300246927 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.275344343 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278834639 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.299544211 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.272810786 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276522032 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277153844 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.275991556 seconds)
  done (took 62.418079994 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274607301 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279293987 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.275547636 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277170355 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275969281 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.277599023 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27964457 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277691361 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.273186515 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275553347 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276905501 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.275405045 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275068382 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278026696 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.279128067 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.274906057 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271435745 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273334761 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277450136 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273279688 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.275778436 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273538943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.279851928 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27405832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27835326 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274840995 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274385624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276683759 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.275481646 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274116952 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274622957 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279340391 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278832045 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.27693876 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275739857 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281813445 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.280198263 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.277243373 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281721324 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.278719296 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.278857277 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280626586 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278260524 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281219779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275221855 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.275014002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27831629 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.276713371 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277065655 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282347396 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.2803432 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.276061746 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.279478409 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.275749712 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280140741 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281010203 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.278397015 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280506426 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.279431563 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.276197973 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.278385333 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278896268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.278879051 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27530801 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.278445031 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277798344 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278627207 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276967529 seconds)
  done (took 88.041759516 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278219594 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277688626 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277578327 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276975354 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280380469 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278108605 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275962894 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275752771 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281135333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280806398 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279507455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283408495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277013606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283873039 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280973344 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280497329 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281615239 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279666369 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277615099 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27930722 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279731645 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279831201 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278678827 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280526694 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281286894 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275964855 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281767404 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282831946 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281233214 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280980073 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279965203 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.281239809 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279992687 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28159159 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281277095 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.282049925 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279477629 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279935525 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282835333 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277785884 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27993534 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279474076 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282339133 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281073255 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278303396 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283215503 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283719939 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279954831 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280719351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281760645 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.28040935 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281681639 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281275717 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278377047 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27928328 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281486841 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282560025 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281673148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275501637 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279277651 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284055805 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.285202524 seconds)
  done (took 80.560931623 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286591947 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281788136 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279944606 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28318369 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28339239 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277633327 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281522303 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281706408 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284344744 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285026531 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285280276 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282225873 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281805769 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28437683 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283242772 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280459387 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286450094 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281934799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280499802 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.279350768 seconds)
  done (took 26.84180715 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282047754 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283395672 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28574753 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284563515 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.285813138 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284287074 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282304336 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281506833 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28530923 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287104415 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286686265 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283902751 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282911931 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285011433 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28450826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282903329 seconds)
  done (took 21.73951414 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2824655 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285367343 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280443653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.285035846 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.283202621 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28125899 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.288710175 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285582816 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.284230109 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285929667 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287210316 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286925182 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284669061 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284311686 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.284361767 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287069383 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282602935 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285926523 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288144913 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288470454 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28440216 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287116656 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287309457 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.287273448 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289660226 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.286737528 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285940837 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.288325653 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284519725 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28723568 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.28884289 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287302626 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.286350508 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283968747 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.288389854 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.285281648 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288302964 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.288090353 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.29047322 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286673566 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29234188 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286704144 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287609279 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287243257 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284892181 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289356063 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.287397571 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289309599 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.287785492 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.287254536 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288994862 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286650858 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.291951912 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.29204691 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292456476 seconds)
  done (took 71.969935578 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291534825 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293744793 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289968985 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294893656 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29310152 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290375758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294601493 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289499351 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291035765 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292515731 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287584085 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292324309 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290894931 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291016634 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286014106 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292387266 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286610013 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291148539 seconds)
  done (took 24.437576814 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286985492 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285841427 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290270514 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288560379 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.289710369 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292432045 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28847181 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294355249 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289391704 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290746607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292493839 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293722212 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294136646 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294397189 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28970899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294573287 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.290372156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295571813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29135005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295792465 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29306425 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297051467 seconds)
  done (took 29.61767962 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.292608344 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.292503573 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.292625214 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.309119533 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.312564046 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.292723448 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.288903765 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.294672037 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.313748257 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.34812412 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.338093592 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.308106207 seconds)
  done (took 16.884265664 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293527622 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294435371 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291696422 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295224776 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296355002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291891985 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295201147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294357886 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295937754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29539725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29372134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294646855 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297426717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295937644 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296748018 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29604249 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294209713 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294889466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292521835 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295202179 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294974208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295743669 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295112764 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29342625 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292154345 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293852949 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297444035 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294656129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29635008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297193422 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300312746 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293809971 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294611289 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292158742 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29963882 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299863242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296756589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298543177 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296757026 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294283976 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299688552 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300819228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296644181 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296919312 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297947024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29717832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295824968 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291514894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298004726 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299266423 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296867085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29620168 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301794525 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297786967 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300772497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3008612 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294166986 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301235658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300966358 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300272012 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297246259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299490002 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296657489 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296040089 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299921217 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301475087 seconds)
  done (took 86.77192795 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29825586 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301950088 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298344601 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297999568 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299958791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297316244 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301090161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300017726 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296060318 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298512078 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300777538 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297971127 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299348835 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297602191 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299805518 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302199596 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301391957 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297795043 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301150457 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30061075 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299440789 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300224132 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294666356 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301096336 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298767769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301612072 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299778225 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300919674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30112013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300940307 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302750621 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301101151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303627912 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302087543 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303251472 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306507144 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302340552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298397683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301959711 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301787371 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299289944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302935835 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299703709 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3004962 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298507055 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299644884 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302061962 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302626862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29936443 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298704838 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299751515 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303038262 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297522818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299850076 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299622971 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301777761 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298876706 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298235275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301474554 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302756535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30189 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303534735 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307991366 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30023175 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303026271 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302168903 seconds)
  done (took 87.044385247 seconds)
done (took 1755.859596033 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463429876 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418757852 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303083209 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.310928316 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.297712452 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.323972093 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.313799802 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298088217 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303224006 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302491465 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301976128 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.488298441 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.29518643 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296656049 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300128385 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398984676 seconds)
  done (took 26.628659392 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331658484 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311867646 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.4273807 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325603831 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329978053 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.501236948 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.364443692 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.309826685 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492781087 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354008396 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.301511444 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327912546 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306861144 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310523486 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326083597 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500792539 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571125177 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.298528964 seconds)
  done (took 28.903033568 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.790873195 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.331392564 seconds)
  done (took 5.332669487 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319616867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.300102051 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301369755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299348346 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.292425288 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.290725279 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299187624 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.296213875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.303356392 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435966362 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.302107368 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312259446 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320056637 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302821288 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29819318 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.338789558 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.473365782 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.301775583 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299762159 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305662522 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30127578 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403636434 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.342201547 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299520295 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.433482314 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.30656325 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306423189 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310030807 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427284196 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302084819 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.30043236 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.300775645 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303226784 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238371085 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.788165514 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.295843603 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329152201 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.309939855 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300866757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.446779896 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.301765125 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308981485 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.297154623 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.771691561 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.447501403 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424728542 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.316655371 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.306322469 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303036673 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.367190014 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.302719815 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.303723638 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.346946495 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.130994252 seconds)
  done (took 83.582790408 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.332172496 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.292445462 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475770889 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.318958771 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293047155 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2946197 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.294662657 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.601376665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.29985089 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293788399 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.60279251 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871038799 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316219489 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.341761646 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.14520076 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362648036 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294053762 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310998132 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.296376064 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.299489839 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862936959 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295939117 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.300970777 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.579614602 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337081741 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829965828 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.297071283 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.301464006 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.315613883 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.296402269 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.824030993 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321624684 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.355804371 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.297279323 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586440826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705932881 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657047725 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.297827646 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337083302 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.298014512 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.310094887 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.81289364 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673892347 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.298648353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.298243608 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823366297 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.296936485 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.307517808 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.298604402 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547277799 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.29693214 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.300903069 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.315661742 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.302081383 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.298042982 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.374869202 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.371656567 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831390867 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297791959 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.297275716 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330748615 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300406111 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298625984 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298184599 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.29910267 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679420897 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.505706774 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298695733 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.675515811 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817426173 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315029371 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8965706 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.318354019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.326517956 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.357906845 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298076711 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299818355 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846438625 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.315367635 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298273348 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657046686 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.300354332 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606745517 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.324020891 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.300212411 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87205724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.311404536 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.300266395 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.29966836 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30016949 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.316940345 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.3160304 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.591287773 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.328875992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.299573026 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.301260717 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.319957777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301610945 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.300745513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.305820274 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890787275 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.317793902 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.29994247 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.302583736 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31667242 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304500996 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.299293237 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.302413877 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568099044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.301729507 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.328014611 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302671798 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.301135552 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308245981 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.445641436 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.303149285 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.628286213 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.301584879 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300926175 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324984902 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300999837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.332516044 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302738005 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.308085496 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.209903629 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.609674654 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322218325 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319172725 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303235643 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315815067 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313205124 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303413955 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.335560099 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303412003 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080683487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.322649397 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.315178857 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303083506 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.312619343 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310438274 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.309252196 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306057041 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.601209027 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.59489504 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.516189079 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.309022585 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304583413 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.082980901 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328003022 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48512505 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321473464 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302587383 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552692267 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.507447493 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.306149453 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.303489881 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.304696124 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5633759 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.303868729 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614165659 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86422264 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322473324 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.304466535 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.077875391 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.017693191 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.309364452 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.307018183 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.604765088 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.322954857 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.304786449 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.304566412 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.305684505 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325489389 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.310417995 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.310570344 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.305164528 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.304873708 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.323969362 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498927159 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.324109917 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.313161873 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834363881 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311565202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315565602 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.30958273 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.308909912 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.305442922 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.373133716 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.312786428 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.322689112 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.304984172 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309939083 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889720183 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.305414595 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.31198907 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500298595 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007631557 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.3249752 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.30633205 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.324444545 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.185126017 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862015428 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.329376042 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.637088555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.314750873 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347378459 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308397404 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329699836 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.860313002 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306687535 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327187467 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976673128 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.325660548 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.940851848 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.307963303 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.31133324 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927061392 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.32722224 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.308340812 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.308309506 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327981447 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.603231545 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.308404089 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.312762097 seconds)
  done (took 492.161839641 seconds)
done (took 637.818840428 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.308841997 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.312916224 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.299721405 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.313425353 seconds)
  done (took 10.455370454 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319575326 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.314408303 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.316243638 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.314638925 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317854982 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.315977384 seconds)
  done (took 9.121965007 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.309744823 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.314204267 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.313336391 seconds)
  done (took 8.157590528 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.535616072 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.335165488 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.663117514 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.336105436 seconds)
  done (took 9.09422205 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.317949945 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.317222285 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317862322 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318474616 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320116274 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321339665 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319121557 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.31904887 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.321891364 seconds)
  done (took 13.093492294 seconds)
done (took 51.142391408 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.144042261 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.315368458 seconds)
    (3/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.367641693 seconds)
    (4/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.317147847 seconds)
    (5/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.296623526 seconds)
    (6/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.905288777 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.110548928 seconds)
    (8/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.311058788 seconds)
    (9/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.298037586 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.610855654 seconds)
    (11/286) benchmarking ("sort", BigInt, true)...
    done (took 2.330865397 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.355534595 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340583914 seconds)
    (14/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397044997 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.298181454 seconds)
    (16/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.333089042 seconds)
    (17/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.325849049 seconds)
    (18/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.322410216 seconds)
    (19/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.299209985 seconds)
    (20/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.298907013 seconds)
    (21/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.90694247 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.312607264 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.316894875 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.335003371 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.298508618 seconds)
    (26/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.332958988 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.198146029 seconds)
    (28/286) benchmarking ("sort", Int8, true)...
    done (took 2.315139887 seconds)
    (29/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.317879818 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.331738353 seconds)
    (31/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.300856707 seconds)
    (32/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.68573074 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.301878327 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.42677455 seconds)
    (35/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.308088426 seconds)
    (36/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.299152353 seconds)
    (37/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.317778661 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.29985866 seconds)
    (39/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.507253475 seconds)
    (40/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.343744561 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.330123458 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.202263094 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.303917031 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.302917648 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.342861771 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.897047041 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.515119402 seconds)
    (48/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.300973711 seconds)
    (49/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.334351888 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.57887728 seconds)
    (51/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.300925112 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.325875181 seconds)
    (53/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.326460399 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379479412 seconds)
    (55/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.443145672 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.41411542 seconds)
    (57/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.17843938 seconds)
    (58/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.302572558 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.157913633 seconds)
    (60/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.169181878 seconds)
    (61/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.367102744 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.960057872 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.490833483 seconds)
    (64/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.333625501 seconds)
    (65/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.973562878 seconds)
    (66/286) benchmarking ("sort", BigInt, false)...
    done (took 2.318137189 seconds)
    (67/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.403408196 seconds)
    (68/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.103980082 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.31555838 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347900752 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.343551829 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.149139064 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 2.315351224 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.344611951 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.655634049 seconds)
    (76/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.322707849 seconds)
    (77/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451271101 seconds)
    (78/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.308762371 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.337079527 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.306850699 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.302848062 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.336959169 seconds)
    (83/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.303230878 seconds)
    (84/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.484089538 seconds)
    (85/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.583334785 seconds)
    (86/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.442305383 seconds)
    (87/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.537535484 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.339566523 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.324799277 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.309654203 seconds)
    (91/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330264228 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.664900206 seconds)
    (93/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.514473054 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.345277481 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.31678797 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.348560271 seconds)
    (97/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.303424341 seconds)
    (98/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.304313381 seconds)
    (99/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.42102802 seconds)
    (100/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.402281439 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.720844113 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.32486531 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.532778444 seconds)
    (104/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.308006148 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428625433 seconds)
    (106/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.695514731 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.316718299 seconds)
    (108/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.349525867 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.436146367 seconds)
    (110/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.944465768 seconds)
    (111/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.449469103 seconds)
    (112/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.157450344 seconds)
    (113/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445997171 seconds)
    (114/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.346344758 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.821347316 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.434360439 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.873371781 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.34372804 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.345686548 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.577721842 seconds)
    (121/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174820378 seconds)
    (122/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.504311782 seconds)
    (123/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.310679335 seconds)
    (124/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.432387462 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.122710621 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.583785657 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.305332087 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.335238331 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.425974901 seconds)
    (130/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.304484832 seconds)
    (131/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.305549924 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.32324702 seconds)
    (133/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.702295748 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.128538229 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348088029 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.325099174 seconds)
    (137/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.306558788 seconds)
    (138/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.36558684 seconds)
    (139/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461548787 seconds)
    (140/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.321213873 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348943722 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.175247791 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.35889074 seconds)
    (144/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411698071 seconds)
    (145/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.305202515 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.270239507 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.307222785 seconds)
    (148/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.318629543 seconds)
    (149/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33044921 seconds)
    (150/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.310249697 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.260809789 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.34341783 seconds)
    (153/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.387238017 seconds)
    (154/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.918625447 seconds)
    (155/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.328358798 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.371673814 seconds)
    (157/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.350092027 seconds)
    (158/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.306861976 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.348906351 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.308149726 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.320165525 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.327105747 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.351991114 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.386268593 seconds)
    (165/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.308255899 seconds)
    (166/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405364533 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.366116556 seconds)
    (168/286) benchmarking ("sort", Float32, true)...
    done (took 2.321630684 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.348687625 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 2.319824521 seconds)
    (171/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.977418147 seconds)
    (172/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.08988339 seconds)
    (173/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.44794279 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.307947539 seconds)
    (175/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.308216819 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 2.32165854 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.404511189 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.330294761 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.312412339 seconds)
    (180/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.343543236 seconds)
    (181/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.635484077 seconds)
    (182/286) benchmarking ("sort", Int8, false)...
    done (took 2.32294891 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.30849009 seconds)
    (184/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.309455237 seconds)
    (185/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.371520292 seconds)
    (186/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.31476341 seconds)
    (187/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.316577312 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.701925764 seconds)
    (189/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.135965264 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527612751 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.730838288 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.344056324 seconds)
    (193/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.323919801 seconds)
    (194/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.310946393 seconds)
    (195/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.31617514 seconds)
    (196/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.710777986 seconds)
    (197/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.98074123 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.281354884 seconds)
    (199/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.339716402 seconds)
    (200/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.417134511 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347917881 seconds)
    (202/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.409795016 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.314275893 seconds)
    (204/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.530412828 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.338758452 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.098388859 seconds)
    (207/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.433868736 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.366564081 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.432640989 seconds)
    (210/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.312763573 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.324681856 seconds)
    (212/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.388561989 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.35286828 seconds)
    (214/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.426730796 seconds)
    (215/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.218253502 seconds)
    (216/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.331571249 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.317566114 seconds)
    (218/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.311398154 seconds)
    (219/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.993297521 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.329297757 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.325006338 seconds)
    (222/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.310474197 seconds)
    (223/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.337117421 seconds)
    (224/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.219607441 seconds)
    (225/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.658270561 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.22807635 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.332505913 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346267639 seconds)
    (229/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.409865629 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.335078033 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.548373323 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.333062399 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.311938956 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.991765723 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.217708261 seconds)
    (236/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.325274898 seconds)
    (237/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.325138192 seconds)
    (238/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.333332514 seconds)
    (239/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.720917636 seconds)
    (240/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.316642933 seconds)
    (241/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.333683509 seconds)
    (242/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.36579558 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.356918382 seconds)
    (244/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.341386533 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.444019497 seconds)
    (246/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.312698483 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71836373 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.277231376 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.327628626 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.336580885 seconds)
    (251/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.337281459 seconds)
    (252/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.318956224 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.314911063 seconds)
    (254/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.989437663 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.338621992 seconds)
    (256/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.384415276 seconds)
    (257/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.313737753 seconds)
    (258/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.320829109 seconds)
    (259/286) benchmarking ("sort", Float64, false)...
    done (took 2.330907955 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.313888608 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.285720777 seconds)
    (262/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.324984752 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.326506557 seconds)
    (264/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.318790202 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.722796882 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.459147528 seconds)
    (267/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.422210187 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.419205774 seconds)
    (269/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.315152929 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.566557752 seconds)
    (271/286) benchmarking ("sort", Float32, false)...
    done (took 2.32852604 seconds)
    (272/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.337429386 seconds)
    (273/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.319674473 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.330484208 seconds)
    (275/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.330021127 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.373161595 seconds)
    (277/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.499928714 seconds)
    (278/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.327840766 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.826639452 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.357262828 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.731532613 seconds)
    (282/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.414215203 seconds)
    (283/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.333916242 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.523458407 seconds)
    (285/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.358614823 seconds)
    (286/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.232214721 seconds)
  done (took 565.92665879 seconds)
done (took 567.147331705 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377583829 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385107861 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.342198897 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378007058 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.451903286 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.515684499 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.354737078 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.382852116 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.391719979 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395607302 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348066109 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.515522378 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.341622935 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341484725 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34421557 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382427471 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.342206998 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.341376039 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.357305663 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.378479116 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.357728658 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.346950557 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393835449 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.515748993 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347570216 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.347052269 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.344677486 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361884777 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.452692204 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.344078377 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.347525757 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353415703 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.342592844 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350685234 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339612001 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.362056062 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.352991956 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354889447 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.379682315 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.454980043 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.330948959 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351471332 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.343673142 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347535075 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347539199 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.386643481 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.345820544 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.4049584 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38542156 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387710874 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.341387849 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.359773761 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.352064725 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348897888 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359242407 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.344487975 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.404476091 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389019079 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.363870236 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389948795 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.335717469 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.35246019 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.387407684 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360758338 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.352885019 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.344980191 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.34630406 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.386704312 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.332758455 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.352877194 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.343830011 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.352449458 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.349528903 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.357496796 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376295091 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.349249174 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344071527 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346690406 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.354079333 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.343418774 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.397112506 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386871528 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.397164589 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349119146 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388218925 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.521424063 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359917541 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.346910777 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.38503831 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.365245656 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.35234255 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356883541 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.382431791 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.350752445 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.397088158 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.407033656 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354540861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355250418 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.400032946 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360331591 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335790525 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393151461 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.347845966 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347554882 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.349236274 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.468402228 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336914495 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.348907916 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.384543517 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.397903673 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.411134403 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.34237985 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.357500064 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393455693 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.359551737 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.412324784 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.353069798 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.341787053 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.348435451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.469366029 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353862285 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.352786612 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394223697 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.411192485 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.351778834 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.336601125 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.372723183 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389046328 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.469781296 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.362623945 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.459653787 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.347371557 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356523845 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.382821098 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395804791 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.380163111 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.412139543 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3947498 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.364873094 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353425571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359153761 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.363010493 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.355328395 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.41100166 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349994146 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.383671588 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391312556 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392617297 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385820587 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.4707871 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357296423 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.343911743 seconds)
done (took 226.037547096 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.408151054 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.34337168 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.455697199 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350221849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.447889058 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.447785611 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.347691007 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.348044441 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347467762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.728135125 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347935797 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348471758 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.345504742 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349046711 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429390466 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34957583 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347355888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.69598808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.348678598 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.418483252 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.347137272 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.348977328 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349676991 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.727804197 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.346220894 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.342914953 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41973022 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.350280669 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.695056516 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.342766094 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.343509501 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.693106181 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44412217 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369936965 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361848582 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.358848305 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.45022712 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371855195 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431198986 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.432106675 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.457778378 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388216161 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.343389639 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.347521963 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353118599 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350269988 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.34862095 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.378999936 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.347125558 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.350211067 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.692641463 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363849671 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.359338177 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35189943 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.350618112 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370415035 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.350124658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.35086374 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.441097576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.350917543 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.41481826 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.757924393 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.758701251 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353488202 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.347985459 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351653449 seconds)
  done (took 105.613802274 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.416972641 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.425905637 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.465118706 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.368838988 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401012055 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470785762 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.370778922 seconds)
  done (took 11.170322861 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357390163 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.353470304 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401589911 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400180645 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.350784654 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.571883448 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354982527 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362027733 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351793181 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.430751707 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352556735 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356689532 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.361786175 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.348921257 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400566052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363163518 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468626565 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354354945 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352625387 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.503896871 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353679744 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.361140753 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.431034963 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366215355 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35445629 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358380772 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.307846067 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354965563 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352599121 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.355266209 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35387929 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.463301752 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355911477 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.352175511 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354427206 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.512607913 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353159333 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352324629 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356248545 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.35295283 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.355706412 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.355623547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357361855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.354358969 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357169821 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376504236 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356112639 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.357498774 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35984788 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357089923 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.433868218 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357082962 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.353329668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.354092961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.432814679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363337451 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354657366 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354882466 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357605211 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355520002 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.506202279 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402113304 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359387678 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409831491 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357859042 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357714097 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356556636 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356950136 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44840858 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.35707432 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403854197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.356025075 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.579399704 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.380204122 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360082136 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.358416498 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.359874259 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355218587 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.352597577 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362182551 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356264371 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356683187 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361851566 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356184333 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357197125 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.539722376 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.513999914 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356600882 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.370332849 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363004315 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356913432 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.435383111 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.358326198 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355801619 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408673695 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472158866 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.435187138 seconds)
  done (took 140.294315378 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.363176333 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364579388 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.360593618 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.379749722 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.358908354 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358226571 seconds)
  done (took 9.443614075 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.35975276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361845035 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.360417623 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361752894 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359040834 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359746885 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358666999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360184807 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363270534 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361702482 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359094732 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370345267 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.360747483 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360468716 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359469693 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.361230352 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359388623 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358514113 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359513379 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359252023 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.358141936 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.358680146 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359655726 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362063005 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364748248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.361939627 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367219436 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362576472 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362032526 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367830553 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.381120976 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360038277 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.361518391 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36732768 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364877034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364154871 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367641926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.372877299 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362730411 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.36168183 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373040897 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361346969 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365284685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373471647 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364662457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367122142 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.376571422 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369744411 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362987237 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37298035 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.372176278 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365186261 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362148766 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.373914112 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363811036 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384841106 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379232283 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362986859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362786985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.364841975 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366605251 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364049136 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365117756 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.36712397 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.364106422 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.375150814 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.365640814 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367685831 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363515704 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.365642614 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.375286484 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36405224 seconds)
  done (took 100.547571522 seconds)
done (took 368.316271139 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.370300931 seconds)
  done (took 3.633589256 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.572486541 seconds)
  done (took 3.838731127 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.853858981 seconds)
  done (took 24.126362408 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.441045518 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.364272311 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.364992854 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.36238944 seconds)
  done (took 10.799220374 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.664186637 seconds)
  done (took 3.931037683 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.362224789 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.375445614 seconds)
  done (took 6.005831332 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.693763595 seconds)
  done (took 3.961280291 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.804161893 seconds)
  done (took 4.07685475 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.381777565 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.379264626 seconds)
  done (took 6.036951346 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.347846895 seconds)
  done (took 3.615224906 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.061613604 seconds)
  done (took 17.327478329 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.363111404 seconds)
  done (took 3.630107459 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.372840521 seconds)
  done (took 3.637981496 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.229661245 seconds)
  done (took 6.494729449 seconds)
done (took 102.378216627 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.356249901 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.356799 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.356836294 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.358223628 seconds)
  done (took 10.691685213 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.402870442 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.399910576 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401321072 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411337929 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404185584 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401559338 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.39228463 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.394335411 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412575875 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405215446 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.404272772 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403917908 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.401388607 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.393420364 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404948235 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404522057 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41241335 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404256474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.394522945 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403732975 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368933378 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.413010875 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40514326 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369498914 seconds)
  done (took 34.875713044 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.865919219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439705257 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523631388 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421524504 seconds)
  done (took 7.515583697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438053619 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.439121701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447567154 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490759358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.513765351 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.447521641 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393948986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.38970858 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.378517373 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.439679148 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.497819971 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434255718 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.537117587 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368835881 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.643067372 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.369698552 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370659118 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.447513799 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487675994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515320531 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.370773715 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447338024 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.448663455 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.435800208 seconds)
  done (took 36.017879873 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370583083 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.388546403 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.369661556 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369165339 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378830087 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.36940896 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371500935 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.373562665 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.370805776 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.918093255 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369488482 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.383674803 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.899650806 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.371258522 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.376818833 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.370680603 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.916402582 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.899668197 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.373638391 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.377230247 seconds)
  done (took 30.887226489 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.360902307 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.362054429 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716898825 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621156174 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.36369496 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.363377061 seconds)
  done (took 14.055476574 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447652728 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.617771201 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.369277227 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.760939683 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.839551444 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.370936736 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370757325 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.638622766 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.992425458 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.989654007 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.438575295 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.445490297 seconds)
  done (took 20.553977681 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.36443971 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.369033827 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.385263223 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.384869587 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.43145563 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394202399 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.378697148 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.364140525 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435105736 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452701442 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.394030443 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431457117 seconds)
  done (took 22.055696371 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463758224 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36721599 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367494899 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462211611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368902268 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213123329 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436459063 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116609001 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394441179 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642488213 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37080833 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466697496 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624128639 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368628866 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37550602 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.366452751 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605882155 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903600605 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373414908 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375650974 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403403215 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370067078 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375693306 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615375727 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37802917 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370711337 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.631875498 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369258515 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685651871 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387734705 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382509632 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369693521 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644668232 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079479388 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502459199 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614833339 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412594246 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372072747 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.37557891 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.398808939 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372238687 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39140251 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382294084 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372265656 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370887531 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387199196 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129536697 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399549854 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.369637964 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371428923 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66098087 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47020794 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.377392943 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370573671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511598506 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372860257 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.377383654 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378165374 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96251422 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38291042 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386748159 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.377355564 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410338592 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377816867 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042593093 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.379276555 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376079164 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375886688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3718343 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375567328 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388215491 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373119966 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.398464703 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372467368 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146650224 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382523126 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372388829 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981303148 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393665483 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.377549715 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605454806 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372704581 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372807223 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.371623085 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371976133 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148306932 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381991562 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.356427398 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374730526 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126198565 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638813214 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398634235 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405901198 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598912147 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.35683147 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3740923 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.375269089 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376687473 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398153183 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126808921 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394407883 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.379547876 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634066805 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588153356 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375132705 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.374237987 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900072127 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396209848 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398767954 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3877497 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625892648 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.016281572 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393208335 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380882206 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391746413 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375463422 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186378774 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376065254 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483777283 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380370282 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659227703 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.22242534 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377756416 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444567279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379474912 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377177876 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386670788 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378187122 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377507954 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.609012946 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402860859 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394014588 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.376042295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377044676 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.377135865 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391562252 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.379043149 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60225884 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379975022 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658610439 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377402905 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378021772 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378221445 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601490598 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.375755299 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.716583489 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645681559 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379535314 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384454278 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396568689 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399571772 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486523098 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401090201 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.388099201 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642758698 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.384192419 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.384088443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388362204 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382863543 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384097359 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.387456248 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409768749 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035509637 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353736303 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387724898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272765001 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.393816387 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448613578 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386385066 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624433964 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39420871 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416057459 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385301422 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.378224452 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607426352 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390649057 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.389770243 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456589089 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.896418124 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034678395 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394402617 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.381391532 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.377858857 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.376639124 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380973186 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381497111 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380407049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623572937 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40034186 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423124175 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.019582388 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383161693 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389689504 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.388662103 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394702776 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.388981702 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382417228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.392481042 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390317385 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393169495 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399294285 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527951959 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.396968386 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382091789 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.90026376 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388716769 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380988634 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382941146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417522101 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392205494 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250737016 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648529169 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379517839 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671397587 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392538514 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.399683778 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381904519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390571187 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397831204 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.405750572 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391996347 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.393261257 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393360609 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384744444 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961664502 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18267099 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97268892 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396273239 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.402421738 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390067584 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138406384 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404574793 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383428896 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639521857 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163623582 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405480732 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904946415 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403183315 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222344732 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679187555 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619495528 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390058707 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.395628375 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677311976 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598416347 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419965357 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399292749 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391716379 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.369102818 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99026274 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412022303 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4653435 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142992112 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417252659 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388256005 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.394703367 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398914172 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84920946 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411245963 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386337848 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403260382 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405427446 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253420541 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392080343 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386502685 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065711829 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389540763 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.912025815 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406722559 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632161288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403609515 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.389638394 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.388524567 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.389368802 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.642884247 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677741731 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389573119 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388525718 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982263147 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.26026749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.394048818 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388209204 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199492271 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389072511 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726519204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.389410662 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398818003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396684354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389504358 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387912551 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.385633918 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395937801 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360484561 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927149456 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.433104445 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400958168 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413457745 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395926839 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645618532 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.405269318 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026798135 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620179523 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388932817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412556763 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.393102985 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389281421 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.374389297 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391299517 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388689357 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500083693 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613585848 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390123727 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.377091855 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488307691 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60309787 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389831615 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405329483 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665547393 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.391427078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.391699045 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170686717 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424687404 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403929202 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392856743 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42466094 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402841261 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464731599 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637810151 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407427869 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.401446312 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855349816 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431738818 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394411618 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.404472023 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487456398 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390119076 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409902328 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.164327469 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034803893 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203480135 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.037882758 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68655657 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394145913 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395541448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390036712 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556277415 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391974278 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667038278 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391119008 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.428464673 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415576225 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392057375 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397591257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611239469 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669629171 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392502324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393608432 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398416002 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.393874767 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404514083 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.605829643 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937123622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999914388 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395600812 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397072888 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157077406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689480581 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393191185 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393016784 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396159975 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.396941229 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39770818 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405366825 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39402884 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537657278 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683749775 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119870676 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.431165857 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.42143738 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.168672222 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42841203 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65163719 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392608366 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66839195 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047692715 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.165763941 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663541031 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465643432 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644038375 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.399241439 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557993185 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406501684 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396333835 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396942898 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395550566 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.393264805 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.405247767 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044566866 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664392305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40122822 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.407152037 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427808431 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.405749867 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620348359 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18919927 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620896924 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407814651 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403630128 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396380061 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046840027 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689899078 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398494809 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.401780671 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671772502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403065692 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423725183 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849656844 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.393970959 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007862838 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.370073971 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419176287 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39719572 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202134763 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046314668 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.397727304 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941953532 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400709223 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407185494 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678018766 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.404662198 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398084469 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700315816 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.401883784 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405088852 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653078692 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.049589852 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239582363 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.404282729 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401074912 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.419676459 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396853732 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494757546 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398931848 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399285776 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.877429896 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425715744 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401034247 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412351176 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.396750194 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437140739 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.402806406 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399049603 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.405447144 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.388793772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.389864155 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416683364 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401304888 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016368572 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428755732 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070871613 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.729824671 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657499497 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407492329 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.388434627 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.405345046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400658613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400347198 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400813058 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.44498711 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009419228 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.408257887 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.419017335 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404933173 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61847281 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613406795 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401960042 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651624389 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412697092 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422107612 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.384203034 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401265976 seconds)
  done (took 989.930663875 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411990142 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.435882139 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.435467051 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.477317278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427670322 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.467108683 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.423142762 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439353847 seconds)
  done (took 20.820720663 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.414282868 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.409226839 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.404689103 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.41127673 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.403938748 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.916453874 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.423157691 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.409817805 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.410697807 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415259574 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.406193016 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.141791494 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.432640687 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.405932211 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.398499394 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.416070992 seconds)
  done (took 33.131048173 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.573841186 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.639906735 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.758485923 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.460500582 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.432865246 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.415649647 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.753456622 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.427494543 seconds)
  done (took 27.768961036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.411964354 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414339891 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.412545905 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.41255779 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411668204 seconds)
  done (took 8.366769136 seconds)
done (took 1257.936926923 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.408161053 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.410451329 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.409138105 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41046449 seconds)
  done (took 6.94349053 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.388793113 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.390145005 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.390098891 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.402984055 seconds)
  done (took 9.87667878 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.196389012 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140182405 seconds)
  done (took 5.641746869 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.406459797 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.169575228 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.14329359 seconds)
  done (took 8.027356919 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.722278514 seconds)
  done (took 3.029436069 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.820682545 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.772715659 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.596976438 seconds)
  done (took 6.497529606 seconds)
done (took 41.319356126 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418216088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.653226168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.562111953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420883345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.568570651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.561802058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.140699357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.410229879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417706679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416403483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419675745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.568466053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.125878952 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.654886478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.126403384 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.65407823 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.570039388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.406917795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420596392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412990105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.140307938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.4114727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405336611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417033727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.567207998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551464023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420870847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.6528057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405307346 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421406248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.550577374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417977195 seconds)
  done (took 83.599694308 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.406746972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.42470485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.411441802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427173166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.406405469 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.408449053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.431573315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407032485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407369953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407007386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.407402836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.408125541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.408324091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416306222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407289758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416598644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418424822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.406102501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414815037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408153024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.429518972 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421393063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.407689815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.407922753 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.430484393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40851805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.43430439 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.413727555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408387788 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.434457847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.40958408 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.428293104 seconds)
  done (took 78.594767028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.407597201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417911666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.421139534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.408535903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421758519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.419550202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.410305044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409839014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.409408248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.4277096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.428168374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.415261571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.411453326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.41060873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.43282359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424939866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.409740741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.412592111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417751006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.40963334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412536943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.412417249 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.408999668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.432365028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.409086861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.426273439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411938297 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.411177145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410921104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430472174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424787307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.411802111 seconds)
  done (took 78.640863986 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.695018043 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421176733 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.421317357 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.403982404 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421675425 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421436331 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414840138 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.694058475 seconds)
  done (took 15.207719425 seconds)
done (took 257.34965211 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.413085373 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.414156199 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.63517572 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.443020366 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.413124266 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.441747535 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.443563096 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.651382194 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.432898899 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.678782894 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.434301828 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456689583 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.414793874 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45805391 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.71688398 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.575757525 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.408559366 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.415228112 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.783735809 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.442684885 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.696105753 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.417128003 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.707800001 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.405474007 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.451502183 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.415574499 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.434308421 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.389840085 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463123715 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.792698472 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.423041277 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.399895267 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.506631933 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.527297492 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.645134795 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.587615944 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.431634751 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.504866333 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.65429083 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.414514453 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.430536524 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.217497683 seconds)
  done (took 85.305514289 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.419800168 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.538089326 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.42121353 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.423023734 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.422040829 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.542252966 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.516424923 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.422999808 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.421894248 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.419818975 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.419305261 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.422717331 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.423105893 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.422726011 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.423728815 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.423292488 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.418400811 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.424614861 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.423330737 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.468524511 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.545542975 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.457428914 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.414019656 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.421361818 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.524704876 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.562208786 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.420649989 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.413945723 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.464810773 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.425128412 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.434837947 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.468128176 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.424998362 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.425125138 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.541288576 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.52337463 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.446956557 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.419779412 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.539859856 seconds)
  done (took 58.007281393 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.426276728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.685736726 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.878446371 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.430741521 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422663778 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.428066353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.509522592 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.428314856 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42885631 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427511798 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.602638806 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.431243715 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46028664 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.904226542 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.427984089 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.427177497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.427066233 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.425726017 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.697850665 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437518894 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.534044593 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429143397 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.511400805 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.435378963 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.452111606 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426594619 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.431418711 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.000202974 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.428779356 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.602200849 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.359858815 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.512998766 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.963686381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.891466072 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.413397953 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.429402138 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.428825787 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.606792601 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.429612489 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.426747959 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.5122628 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.430026068 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.891115451 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.098196087 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.449697709 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.430189673 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.028321295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.606854612 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.700095601 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43526956 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921731055 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429391393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.430925246 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.428291056 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700458667 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435852299 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427183454 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.020357325 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.453532697 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.511838161 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433773927 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.428194587 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.703714377 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428526182 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.695668395 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.430704755 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.43636582 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.452971025 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.897084016 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.432625863 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.121546448 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.449389502 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.43270603 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.605293352 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.693776238 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.066315356 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.436875068 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710813519 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964306795 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.514351145 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435720049 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.993818313 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.518222701 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.436052755 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43341236 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.434096782 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.431419057 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.478652983 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.513825531 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.060961058 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.121129521 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.054002286 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.537452539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444231063 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.430401929 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.034009743 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452036906 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.432204589 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.890358089 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127720951 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.455809168 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.438405335 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.138113114 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459974946 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.517518625 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437247499 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.908755404 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434466082 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.481412648 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434718009 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438729093 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.45881189 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.518522047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437068799 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434391525 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102854149 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635735235 seconds)
  done (took 189.014038839 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.42712614 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.444066086 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.424564003 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.444910114 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.425469381 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.433607401 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.424093874 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.424494705 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.431697974 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.424388166 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.425859995 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.425727695 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.426865859 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.431523635 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442031196 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.431775771 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.424464716 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.424331782 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.426106446 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.446933928 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.424951001 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.427702899 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.434942784 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.425891537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.428219277 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.424882038 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.431409269 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.430315761 seconds)
  done (took 65.362515351 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43603762 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.051130775 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.434311998 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.582893346 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.463916532 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434512038 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.577742016 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497185347 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.437291026 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434366536 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434979835 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.768939142 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.439230135 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.00120605 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.655021257 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.599567887 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.988290929 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.460476108 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.433016517 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.433442327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.58047247 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.446601452 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.770222624 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.066061212 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.440167108 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.060703456 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425875234 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.437442975 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.434902627 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.063055081 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.435440676 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.771971243 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.522258665 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.500402292 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.063280048 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.007897305 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.0300898 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.60356635 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.436004419 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.43688319 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436359332 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425984275 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.06269714 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440513415 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.43801111 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.057815925 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459653647 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.439438369 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44316473 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.436790412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.500496475 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.531731378 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.780588976 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.073483895 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.530092245 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457841916 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.583211085 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.815797492 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442284306 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.01243471 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.446167869 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.07181286 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463239871 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427157175 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.439579412 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.444391646 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.607428433 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.58653369 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.013404002 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.460628679 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.011550594 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.626057784 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439514809 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.439236339 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.442814756 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.069042161 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.01539843 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.629967634 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.591544219 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.656747276 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431118171 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439344853 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.429997364 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.525058781 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.441862392 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.073482262 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.034214641 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463857632 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443964234 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.444551101 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.444238278 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.638057764 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.092358946 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.527084036 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.011483433 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.800494018 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.779701118 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.445888776 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.510152349 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.467846527 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.781332376 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.446723292 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508906081 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.907437358 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.785606312 seconds)
  done (took 172.5528319 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704928634 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.457275979 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.544770425 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.60663612 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.078992371 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.059741546 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.449906875 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.571318329 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.564546211 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.722226834 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.445114266 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535763667 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.675497664 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522400842 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191488087 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.516759313 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.543195622 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.604300883 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.596146836 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.445915412 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.125991412 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.764964838 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.64462544 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.474720249 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.552191914 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.299503237 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.057488394 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.984543918 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.645828079 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.461361234 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.001695634 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.438805202 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.43822337 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.176128189 seconds)
  done (took 67.237914347 seconds)
done (took 638.793452126 seconds)
SAVING RESULT...
DONE!
