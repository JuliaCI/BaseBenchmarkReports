cset: moving following pidspec: 27680
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334338544 seconds)
loading group "string"... done (took 0.590414623 seconds)
loading group "linalg"... done (took 7.503132198 seconds)
loading group "parallel"... done (took 0.175695559 seconds)
loading group "find"... done (took 1.211697837 seconds)
loading group "tuple"... done (took 1.890571628 seconds)
loading group "dates"... done (took 1.291559669 seconds)
loading group "micro"... done (took 0.2410301 seconds)
loading group "io"... done (took 0.979266223 seconds)
loading group "scalar"... done (took 40.195992568 seconds)
loading group "sparse"... done (took 12.747305302 seconds)
loading group "broadcast"... done (took 0.996741575 seconds)
loading group "union"... done (took 13.944361335 seconds)
loading group "simd"... done (took 4.704549804 seconds)
loading group "random"... done (took 9.40662739 seconds)
loading group "problem"... done (took 1.943541377 seconds)
loading group "array"... done (took 22.083849092 seconds)
loading group "misc"... done (took 1.992281085 seconds)
loading group "sort"... done (took 3.379593787 seconds)
loading group "collection"... done (took 19.148660861 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.556546223 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143765643 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135911161 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124899699 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185340433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13120602 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14118939 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086073577 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.90779276 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165189226 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140339395 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516141651 seconds)
done (took 4.964030247 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.196639334 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090301967 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098728557 seconds)
  done (took 0.864670044 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06606212 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131304344 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082503407 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067143289 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067927763 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081600717 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066587505 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067245124 seconds)
  done (took 1.245852262 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075648302 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071531638 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086171536 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069272448 seconds)
  done (took 0.984409267 seconds)
done (took 4.044966253 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.932536051 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.253997155 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.197065871 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.482936755 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132240123 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189989475 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667299901 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331540363 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.217284388 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103029585 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105940886 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389963425 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107897508 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668035723 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079190101 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105940326 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158903198 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42312678 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.0815916 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084346143 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104389519 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140180224 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102691603 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077700431 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16863143 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069347903 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.152806153 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095282041 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068097188 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251555312 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188603689 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688389361 seconds)
  done (took 10.545541456 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101950122 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121193892 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070007694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142150199 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122633689 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071653793 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073093165 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083548463 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092826762 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161315797 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116701543 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124740471 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066152272 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071176299 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102947313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231333902 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09203635 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102956354 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072280612 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091525372 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109478979 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099034292 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082114419 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095851321 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150964559 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.191946108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09814287 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110585844 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069042002 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095530768 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130036902 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136306891 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069491753 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085625808 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160300014 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097014266 seconds)
  done (took 4.58921042 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097011573 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.175640102 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094285466 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15653833 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085287828 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129987987 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067393687 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099368008 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251949732 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.166924489 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492892459 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128536433 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088491405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069772453 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087357276 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067794273 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.597795782 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146712865 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12285187 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085300884 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091757125 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070909105 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360324917 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067955418 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067738509 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086939017 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098769584 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077243526 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150286772 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069452591 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.26475978 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088476221 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087840987 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119254004 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175304612 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098060352 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122347878 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082278779 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066964039 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173232188 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07530495 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083300753 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090292482 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121105385 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119656028 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082191698 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068146808 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184170366 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067407653 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098777894 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.942443614 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164908637 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098253497 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066965289 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295712348 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104145409 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067297019 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066719288 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268285995 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184857474 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089720169 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068112593 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08368687 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070024326 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37465651 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070063423 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.689269094 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071922376 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079606284 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087243509 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068799197 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090389418 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074044819 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103276025 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066794815 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070505449 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084717212 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066217801 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086086987 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088042487 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205274139 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084931796 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06818669 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085169678 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087329099 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113550722 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070517667 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066725755 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117330287 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070156736 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083665624 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104643296 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086227796 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102829695 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071105026 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12846826 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069212589 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107267359 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13092699 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080786226 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100730347 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088305141 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115281606 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095371022 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074391147 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156440767 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064381156 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067155625 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082347079 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067882119 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083373064 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068937093 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069750822 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081100348 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08358568 seconds)
  done (took 21.349728626 seconds)
done (took 38.260170958 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311209043 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093389091 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093516066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.092963463 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077446224 seconds)
  done (took 1.435612268 seconds)
done (took 2.170634344 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151037139 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103347229 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080606566 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09848964 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081262372 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10326521 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116749621 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081654466 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117357743 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064775324 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113810203 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064941921 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079747103 seconds)
  done (took 2.02512574 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084214518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087403116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085410299 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081920979 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079365085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082162741 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080631199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104458612 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080272307 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087200937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064774014 seconds)
  done (took 1.647365041 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083948139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085998225 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085532514 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080385844 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078715699 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080790083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07972165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101283836 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08004122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088099245 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065634757 seconds)
  done (took 1.641319944 seconds)
done (took 6.038902498 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080775326 seconds)
  done (took 0.806967504 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.735149863 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.361603598 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084432067 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136983161 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222386213 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158534203 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.462866854 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11269426 seconds)
  done (took 10.212473368 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.115177921 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086258024 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072073798 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083934642 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072155402 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086842937 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070557345 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069527529 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08351206 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070335768 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082678872 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074241089 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086329459 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070602721 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08340906 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072505204 seconds)
  done (took 2.079785106 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.107393831 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103867108 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089793642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077802403 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088548414 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074681529 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091010058 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074766182 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086750662 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073512139 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090886306 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076211009 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087608961 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067023698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08871445 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077335156 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08654028 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076343915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090666452 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07641103 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090186389 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066629791 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087712608 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075809564 seconds)
  done (took 2.851695882 seconds)
done (took 16.680775513 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134499554 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080134662 seconds)
  done (took 0.947680904 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084825231 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099172127 seconds)
  done (took 0.923108197 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086085629 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082527849 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091108996 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09333163 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08166818 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06703917 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102121832 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068058198 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081739957 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068039658 seconds)
  done (took 1.560694457 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071787714 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096229984 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073924607 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097878559 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074768995 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079835379 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073906746 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083035505 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079955342 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077964365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072667319 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097733624 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071670665 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09918924 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088709279 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070192285 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087404708 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069359136 seconds)
  done (took 2.20754833 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069358285 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070350005 seconds)
  done (took 0.882518352 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069928544 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066454566 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083176788 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069384109 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079913404 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064693678 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078934136 seconds)
  done (took 1.255648632 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412015063 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109970035 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261408343 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072638895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105637541 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.294869878 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068100917 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074261175 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089958622 seconds)
  done (took 2.271099278 seconds)
done (took 10.785122155 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082334817 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088342408 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112560893 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.436772458 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10581069 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067437888 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142894278 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217308518 seconds)
done (took 1.997161685 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129236293 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.627889743 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409343045 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.227901531 seconds)
  done (took 2.012943051 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385945894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092057111 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072860735 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068761192 seconds)
  done (took 1.367317833 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068656087 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072527933 seconds)
  done (took 0.891557978 seconds)
done (took 5.148024557 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068924113 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069264814 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081102542 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069039654 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06617456 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081163813 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098201494 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085532583 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06815249 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.084318741 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069490057 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068784932 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082546021 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066776537 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06941882 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082497333 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066467816 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065511506 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078969986 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066895438 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080991075 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064244056 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065594784 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079815729 seconds)
  done (took 2.570149731 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088522147 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084271615 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074004461 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088964214 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072851789 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088458925 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073268208 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067877822 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086266254 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069568181 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085702501 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07114168 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083396667 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070386364 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083976686 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072191772 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086569231 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067496318 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083312586 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071676646 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07249494 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082206956 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072160868 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086189909 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071985778 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08496514 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069864825 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082101022 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073271296 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085486132 seconds)
  done (took 3.10145316 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07405678 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065704123 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081540973 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072928718 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066202216 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081710112 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065516443 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079795395 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06652579 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065053993 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081764204 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064606651 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064982293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080830789 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065648753 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082315536 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081697345 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065074417 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07913193 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065166491 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082953166 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065627711 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065740123 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079550617 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064938805 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064732839 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079365647 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065126476 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0796429 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064401568 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0683531 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08254265 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064752377 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070566194 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082877385 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064875084 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083105162 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06473145 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065881557 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078580108 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064792268 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064854005 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078814577 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072229197 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065389951 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082026095 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065463441 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080943213 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066288567 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068606459 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07955608 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064142603 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08074547 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065511986 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070173249 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079583983 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066125561 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065114427 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080558024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064308886 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079022107 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06455104 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067889156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079994165 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079823679 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086089585 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064927259 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066282661 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080863066 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067816342 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066733107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093308682 seconds)
  done (took 5.965656304 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121226863 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094662035 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08173635 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06646862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078431832 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065952775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068396026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079485924 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066682762 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085574552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065641781 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081232856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066292342 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080390397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080458879 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066339064 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086250321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063313194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06527228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083362253 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065563683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083026032 seconds)
  done (took 2.454136788 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191101486 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088161143 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11261941 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090002401 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08521589 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075191738 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086185527 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071287236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071661467 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084406957 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070280425 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085748749 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069715181 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083991463 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07030577 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084750923 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072268576 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084555497 seconds)
  done (took 2.333853491 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081435522 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068831293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108287506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070036847 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085498976 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071347949 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090792037 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078071513 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08617529 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067974699 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091475945 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069845561 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.193701042 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067594108 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085542608 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067738127 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069432867 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08197964 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076696412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087237723 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072874226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090940947 seconds)
  done (took 2.622609458 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083830522 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070683114 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102464641 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086774693 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065814349 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067270354 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090579583 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069642874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091412408 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071496212 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083966447 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069538261 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073660189 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083518086 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07376709 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083043739 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070608281 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083835338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069939417 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064185566 seconds)
  done (took 2.316458983 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091239367 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085546993 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071217481 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09549493 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07057394 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085644493 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079759946 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086418233 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070547434 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1104577 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0711557 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085452596 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078206693 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089348973 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069222987 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092587022 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092265191 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077888843 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08308795 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069044026 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108861018 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068890991 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091773731 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069417002 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083078567 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068365264 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084461571 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075019343 seconds)
  done (took 3.069571394 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069978817 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069304948 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08227043 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065877034 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066608426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082664726 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06731713 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06662388 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084158247 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066951224 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083487873 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069431239 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068920021 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084030392 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069857481 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069101688 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083898037 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066612772 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066710853 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081557788 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068730644 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08352671 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070261724 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067004931 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081806478 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069437435 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067715236 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08181831 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068739436 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066348098 seconds)
  done (took 2.95710645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079393365 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092588037 seconds)
  done (took 0.938523487 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067450441 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083909445 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082759024 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072756007 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089565847 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069189775 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09282778 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073435424 seconds)
  done (took 1.397196345 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085867429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081311643 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086280486 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097027654 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079633542 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084802173 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158560554 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083626894 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074626987 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082522759 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081965816 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082892899 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07412666 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067741562 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088609362 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074818329 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080906486 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073889369 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071119791 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081961388 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069872426 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093973014 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070988584 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082644238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069434644 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077168571 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094127703 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069186172 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086071187 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075078114 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08890471 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062690645 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082804571 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06907896 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066095692 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092703318 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083604362 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086685938 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077912304 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083598248 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078928872 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078833772 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072900087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089320046 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078442385 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068622283 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08394173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064514556 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080744997 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069931266 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063592475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083114846 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063701432 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090752652 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071466665 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093735347 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067229459 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070766352 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085722023 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071133486 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089662205 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069730423 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070843858 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082116308 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075178788 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087772885 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07913277 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078453891 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062266803 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066363151 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093150114 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091334259 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088728648 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068406953 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084209601 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065432127 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086254845 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069797155 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074748198 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089296888 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068821399 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088720059 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07605168 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083438001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070862997 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091051522 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067085334 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070341841 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081023534 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085373064 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081763866 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066443883 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081299959 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078850849 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07156145 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082498061 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065909138 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090092991 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061861972 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069078199 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084022176 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069427311 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094574275 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0733117 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089087641 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076902843 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091325113 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068203011 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086899686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064351606 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069219135 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.082717744 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076210693 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077754611 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071533155 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.07011577 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086709628 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078804086 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084050843 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069942168 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093029589 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07554298 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068812247 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081918482 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072905425 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085669649 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073653444 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093112926 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068476665 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065663865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081095306 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072649164 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084821728 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073626996 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091343297 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072591147 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064464911 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084450909 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074459613 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095116634 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069381835 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085164389 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076568041 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070523734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084973038 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076765939 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087649816 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068919962 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076067207 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085950255 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06501836 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087693315 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07088174 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082693104 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072649829 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071904538 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086559083 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068754662 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0819749 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074543286 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084120757 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067145746 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067789214 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082134646 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078201158 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085200142 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064542496 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06633422 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090980633 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06605473 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083140158 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067481613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071074312 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083886124 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066008433 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083226526 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069479888 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095284219 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072786204 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085363323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07384343 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095706708 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.0681121 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070093489 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083418909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069247135 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084288762 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077727526 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073779038 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089288613 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071179415 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080710649 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075579937 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090938396 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067586691 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066197454 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083311591 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072573927 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08956789 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072688145 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084944574 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066288467 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067903993 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087878969 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07130214 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08301994 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067024311 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088806182 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067580497 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090470948 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070570095 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078136123 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086847599 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063794132 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087689533 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066712462 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090478124 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06374163 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066332277 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083187322 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069370244 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067292405 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086686282 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063145961 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091149582 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076113246 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083502055 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067483675 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068083077 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090297862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069698939 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087125115 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071487493 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089919614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07860836 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067158347 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086437272 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079073175 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084005387 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063155673 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088265652 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067426531 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06791953 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082568735 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067079412 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086784829 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076824222 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090946411 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063123327 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070778117 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082273022 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067319059 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078895761 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073318882 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071414889 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084287338 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075323938 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084748147 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069738253 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072538369 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083579555 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069686843 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085660691 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071803562 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084058495 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071377499 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067996356 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086245415 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067290486 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080990518 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071013839 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068138381 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084031201 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07465487 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083921685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06881574 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070832603 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084267468 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069291331 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084532499 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06762108 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086490126 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068734772 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068676046 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086097311 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064288039 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091120579 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067890064 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075738954 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083323348 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065742787 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08967609 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070690893 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088615523 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069638256 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069699751 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085417554 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068971142 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086658943 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074444671 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066595301 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094103182 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075748926 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084172486 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071162106 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084337725 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070016944 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067731153 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084795949 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069355056 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083884758 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068757691 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088203371 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071128777 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069215238 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085411181 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069731054 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084946043 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070343455 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062596633 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083191065 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067894598 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08432852 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079313904 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068766142 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08433515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0669154 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085054984 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06801767 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064761801 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092122115 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094289136 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06910877 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075849022 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083375589 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07025812 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095179169 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065994134 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082494813 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067312812 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066210491 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091820585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068750634 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094999807 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068199423 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067799664 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081355866 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068955442 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083525354 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063382394 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066568863 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087212131 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066803068 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082435305 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068528024 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072053695 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085192867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078610614 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083773435 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068592198 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084748908 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065785738 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068037763 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08337523 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071644859 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084489744 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065720967 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0657524 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084730313 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069193668 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070100068 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083924026 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069804125 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092434951 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068329744 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087453428 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072434451 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06317705 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087258426 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06824045 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084657898 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068357365 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071955861 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087907574 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069022609 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093486214 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067570188 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084542298 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068594605 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066622241 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084509091 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068708888 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084317365 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067934037 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068518948 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09301421 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066135133 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087637475 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068959644 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083648512 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075462132 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068779682 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087664359 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07609288 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085262989 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070213981 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092625126 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072146094 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087661935 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070177643 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069815207 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090150564 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068069496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090933319 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068559723 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068966852 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08612292 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066117657 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084134218 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068825023 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067939018 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091233525 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069611446 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084211908 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067443207 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0667084 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085070156 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072006322 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091372814 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0707165 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087720145 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063988912 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064880856 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086376003 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066153139 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086732346 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071757773 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073734334 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086258289 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069607463 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084527137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077695854 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090153283 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07273624 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066993049 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088380238 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070006463 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087328401 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069439938 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067703592 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085020064 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072232792 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08640666 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068633306 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092028016 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072060705 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069627706 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086039094 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069515309 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085282976 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063892421 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068591113 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086392772 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074074122 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087620629 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0695897 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095841134 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066227259 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067978803 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088050162 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068473373 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089853634 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06383664 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07034949 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085780037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070118071 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081553594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067631115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066882734 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086564368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068299637 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080283659 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079633818 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09430689 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071674647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066913866 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084010325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064545245 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080955973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068585376 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069498454 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087104808 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078278409 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084393191 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067887918 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079784081 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069503907 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071571774 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088099867 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06657945 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08103918 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068114337 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071062838 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090785966 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067631246 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085513862 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072174492 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070316602 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083232373 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071357386 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082387668 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073186332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098725832 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069907679 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069144881 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091700865 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076410121 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086338055 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064007232 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085587334 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071785262 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068064083 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085853264 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06930862 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101917776 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071193798 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08509406 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067420969 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070475613 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085261696 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076053583 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086829916 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069819757 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090375566 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070838746 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095172819 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071654087 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077168858 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088038959 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071191387 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084196286 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068195639 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083035042 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067382686 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069133279 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087023959 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073095504 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093243131 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068118136 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096961552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077734981 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087288889 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066322702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067602736 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085263807 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064677535 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069826142 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083971711 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066974844 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084427884 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067794998 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069531505 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090706369 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.0700106 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08759666 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068433307 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063345731 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087176763 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071038886 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086659647 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06524103 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068554107 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086882648 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071930841 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09061224 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066771187 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087406966 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069883987 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069162591 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081967296 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075580394 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084324097 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072261508 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067247689 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085931339 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070027195 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089585086 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074703346 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087108656 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071252954 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07745241 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088798891 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06617037 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083113459 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073814296 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066504016 seconds)
  done (took 46.853441302 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112257887 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085338874 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065477266 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082654729 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077775832 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08395887 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065461892 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066011504 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084591644 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069088222 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083653824 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064319776 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09262416 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088222151 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093783837 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086227466 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065368376 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065824953 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081998364 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06583566 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091496545 seconds)
  done (took 2.483734407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.091251484 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105437374 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081190131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103020296 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093733519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080776608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099207181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080415473 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102502831 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095200957 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082514377 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097886312 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076207188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094309321 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076228705 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094572939 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100248849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073871616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.099055081 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079901702 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095209694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097123417 seconds)
  done (took 2.806225975 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070988391 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068369409 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08885854 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065096601 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068007126 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081949486 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072296613 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083329315 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071988295 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067105339 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084287566 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.076258138 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087520156 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066324365 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067966577 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083883016 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132724763 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071525266 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085723918 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068959014 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062820236 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087559438 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06328205 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08189177 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067187331 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071752374 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087306919 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066110727 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085743061 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066759359 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067918549 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082961961 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06996049 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068712581 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084383171 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06723021 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085864116 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06850715 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064130155 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083949282 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068138901 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081328977 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069599085 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068989002 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084681928 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065908032 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086171697 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068593625 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063694965 seconds)
  done (took 4.513246987 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089646389 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142490161 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088967554 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122961621 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082587002 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094239057 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072081749 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123581686 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086425978 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069081651 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10753938 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08468966 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089735628 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.075390008 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095337361 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069210637 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089239381 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069132042 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09226865 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068536588 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092528569 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075703479 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10345041 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.10195883 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074361603 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068130832 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085291195 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072564558 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099342634 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091422545 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07290045 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092017258 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084595902 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09098536 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067509188 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088973896 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084449442 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085977155 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070726443 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083973998 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070544092 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091155968 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075532218 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103342284 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068724876 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090848018 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068537665 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083361169 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081848066 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088290565 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077427519 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101048723 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09051826 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067957127 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090536015 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08424231 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086033748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066635345 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089540053 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081921304 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084461194 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073182714 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10319907 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071963252 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09595358 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084881583 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09339274 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073074527 seconds)
  done (took 6.783819962 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080686815 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095400693 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084965842 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104725154 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094202098 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075042713 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094132858 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075467024 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092028042 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080485926 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093218811 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115125035 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071325296 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096493872 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075793981 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09388541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074726132 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09432906 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093555618 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075014137 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093297982 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084032313 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094140016 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101480596 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105514676 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088531519 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074809562 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093850154 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10170498 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075809889 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10508829 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074707831 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094447496 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101630202 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088505564 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093123606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068360988 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093136753 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075288131 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093097253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070566572 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101680967 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093168322 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071032297 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093419611 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074832139 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101878708 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104297486 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078019964 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098073923 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074899531 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102486782 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093003691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075850908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102059395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128391688 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083436242 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102907265 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092729649 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08338785 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101478032 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110248283 seconds)
  done (took 6.420900441 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093133112 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098833808 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100168582 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0660187 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067970065 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093825981 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068354171 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086557106 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08003266 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098396399 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082415186 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093528334 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077549095 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101491656 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093452159 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078283308 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093545519 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07422185 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09757246 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074751087 seconds)
  done (took 2.541543762 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079750163 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107696488 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070739858 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094866936 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07372298 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076629344 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090035092 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071589358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087381811 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071857499 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097445647 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079521022 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087809491 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075131069 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098859374 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075043926 seconds)
  done (took 2.162375881 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083300783 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100376141 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.086264539 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089721394 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0692292 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086763556 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.07045138 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065239397 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085475047 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084038015 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089963077 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071643801 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089166631 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067390779 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065631314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091242765 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065454391 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084812607 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069224114 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102457851 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080860543 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085698422 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06967175 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090575979 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069578893 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092581584 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068880524 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067041784 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085933852 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069738934 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088229086 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075699597 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085585204 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068975128 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087132194 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069325838 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069914645 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089604857 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073264134 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089242469 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068760402 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089402002 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071497218 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071626885 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085586899 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07088575 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085697397 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076791603 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068131693 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090804882 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070643112 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09219722 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071228994 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099715256 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073519765 seconds)
  done (took 5.20902638 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085516057 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073849013 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085506985 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069826133 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093360204 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072419659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073014779 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092982287 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072565418 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087133585 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07314159 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091874516 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072876622 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073876323 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091981722 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074966048 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086218909 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07197223 seconds)
  done (took 2.272879541 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077663839 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070572504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097257581 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071281484 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089789343 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072856658 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06651115 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088917092 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069838038 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089060629 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070966906 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071895118 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088472124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072407802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089362602 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070781473 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073371057 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088056318 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070483744 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085589876 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073793581 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068972543 seconds)
  done (took 2.548143136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076626543 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.098121994 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16977495 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112631545 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.087445851 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103719054 seconds)
  done (took 1.481714935 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095466919 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104827902 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071883431 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112465744 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078531946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092226678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072304661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092238704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081750761 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105098242 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072314623 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102455108 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101352403 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083908536 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098129062 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077802936 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089172398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070281687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087942162 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109401648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070781655 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098912284 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071784318 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090525451 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070715357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098037063 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098321729 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085396007 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088761986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080500213 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095024846 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071656392 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098797474 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102940118 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072845208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099760384 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070879158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10936831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095308558 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07978307 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09096818 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077932754 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099801009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076948079 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098129841 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089938347 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07685035 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088806584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071126538 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116397897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096961929 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080998042 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097918822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100268692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083109222 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118222744 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105683669 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081502599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098390888 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105142827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081628698 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098708183 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099695653 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086704251 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098653479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080856871 seconds)
  done (took 6.784356339 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08718504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109934876 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073946344 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105630508 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101156724 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07355692 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091710096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072946509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091802678 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071464755 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131967861 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070701833 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09837196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097954732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070885942 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089531484 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071291863 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097430363 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070375558 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115258716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088788054 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079037449 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098572426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098356464 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085047472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096243411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071329002 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089620761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089379846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071974533 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094739251 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071015605 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098186247 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070420206 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098529658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071529044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090266229 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075477328 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089920167 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096034602 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079831983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10862226 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071588453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089962779 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103225674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071541255 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089726763 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071184224 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090424144 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071712771 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10352278 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084858876 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103605911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097576119 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071747282 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089937855 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071581879 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089393224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071455451 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094837072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098800598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071723887 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115372572 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090187675 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071819556 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099652247 seconds)
  done (took 6.632608412 seconds)
done (took 129.968899522 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204788818 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184669491 seconds)
  done (took 1.220432559 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07246487 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120224388 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083420023 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132675622 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088333267 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101983039 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120302355 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081122433 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069348375 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088898282 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0686883 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088844604 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133511609 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069153656 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087758523 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07155222 seconds)
  done (took 2.31772376 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108084902 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203246516 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111983744 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066612516 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101249555 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080829683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086800364 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079988889 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097333938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068029257 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099600573 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079395762 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068336975 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099467586 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098008393 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082916488 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069161953 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102359703 seconds)
  done (took 2.545719431 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099101126 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.112573476 seconds)
  done (took 1.054309166 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.213434833 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123952196 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207438377 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473138441 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.242977522 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.293481349 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175279279 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.175251097 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.152751101 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174002887 seconds)
  done (took 3.070769857 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103800458 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176522127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317361929 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140937754 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088267785 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119252561 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141859728 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112183277 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085030246 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102745249 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103622922 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080147342 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119954494 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077031169 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096231898 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079148188 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124120812 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077010842 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096890708 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078428013 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121024012 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068029414 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097127768 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07624834 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101205305 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080121497 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088432313 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068895957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097157148 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078300181 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.100823534 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095816243 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100316714 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134511117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103255277 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136329811 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079592571 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094421949 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077206091 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094195528 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079843066 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09946484 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08676678 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097960023 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068308773 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098563964 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068004371 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087295363 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08194041 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099187058 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082861411 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100445706 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133569472 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.079075569 seconds)
  done (took 6.319615236 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.761950865 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13630325 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07409515 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.823386003 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117566356 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08580565 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.747035736 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096715778 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236769506 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760994411 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114964477 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079525524 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209703441 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219114742 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.906978896 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289715578 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.651004703 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106814196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111838233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136374222 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164753764 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165194269 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15707815 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.416059574 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101426932 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076287095 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142894567 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103295994 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14622352 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110253214 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07701184 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161352765 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251760748 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164539062 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099612967 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073874565 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071863258 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176159716 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227643061 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19976148 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164796362 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071608933 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074811992 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168737598 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137366205 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07141289 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148671871 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180618193 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.156112712 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078471356 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103274229 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149933438 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147302373 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152066815 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106728635 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298752154 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280732014 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096328202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125831712 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089222208 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246160534 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107819306 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.190375842 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147954335 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199096348 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075051487 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763783439 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155982759 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095498272 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.082077255 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124632952 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078770327 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167026939 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14992177 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370189838 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.17134688 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077684195 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096088563 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.191045969 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089630328 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095662187 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14789628 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101090072 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106821266 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173676794 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.154487986 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.156566128 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.217476391 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.173187996 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.148232497 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.079168641 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131035775 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101010802 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.202237091 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.204641819 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.149426861 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.195077083 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145910382 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.150460003 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175353358 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082373616 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.158305031 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125893352 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108225323 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147195635 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202479554 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.130494792 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086915211 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098790823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.147279034 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.133388219 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091368084 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.166952745 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.157031452 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.439746863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.154725765 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092691976 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091476322 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167751518 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.149002262 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080858299 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246340896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129645343 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.154296498 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128494848 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071959268 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126505042 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.150204768 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10598221 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128860345 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147217658 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102537265 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.223584053 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180608851 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106756263 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206062723 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169715284 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10181796 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157821954 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12746268 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152770949 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084317952 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168537489 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079957166 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755942843 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.151083185 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129788838 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078687952 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170724267 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092712028 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086733982 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108534996 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071648835 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800111079 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113045389 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085249894 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110507994 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080855815 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128440812 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143706704 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10023897 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.149352454 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217662179 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.082395595 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125396349 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110228114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.147476441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.080385601 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110641742 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109152922 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.089983117 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129303951 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099020082 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087971749 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15436517 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170271194 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.183154733 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580626538 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075238868 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109935742 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213957523 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074816862 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27607644 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144935944 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.209504718 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.150346469 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084439926 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304875777 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.151334138 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171452986 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.113184199 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156157027 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070965608 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143304684 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172196083 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075155651 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101134229 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.148174782 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.153095168 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.153535651 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93304313 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073701809 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231133264 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071446442 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.157357045 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101622466 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083236679 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.273273043 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074706758 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.178304866 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151183156 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078102237 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109066306 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837280958 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106813837 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146113725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102598564 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186284439 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.149774919 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165128488 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146389432 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08197346 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169876572 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.197441519 seconds)
  done (took 42.162251396 seconds)
done (took 59.524776508 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286477886 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214483076 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.234640087 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147270627 seconds)
  done (took 1.827643625 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152496772 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112774876 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120528361 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087689299 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10768971 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086840913 seconds)
  done (took 1.534285801 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.438837495 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.305852461 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242673223 seconds)
  done (took 1.856094233 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.304987975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.233273153 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456298066 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304917118 seconds)
  done (took 2.277370583 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197889236 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121641356 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093845194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088661813 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.192756212 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248874559 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132416672 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195500014 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103789621 seconds)
  done (took 2.290993207 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.187141536 seconds)
done (took 10.838930747 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112843622 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.207191015 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095245575 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.269563706 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.200542852 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085564417 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107116237 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.252944011 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.135374286 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211359891 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.217126669 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.15837651 seconds)
    (13/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.182387155 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08062069 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105692497 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.182267134 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.1639833 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194801136 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099741974 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.152580514 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.186126747 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067405181 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114635112 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.1730145 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091358712 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.216593209 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078640021 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189829527 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077317636 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095649799 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.217069491 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080020048 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136060432 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054821171 seconds)
    (35/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.156385947 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.124651115 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125574805 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238161498 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109514167 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075140455 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.175061249 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084948936 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101442339 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.161190558 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 0.165816006 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.144669568 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093874338 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06858027 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166269425 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078395124 seconds)
    (51/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101359689 seconds)
    (52/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.178805709 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095453483 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103009895 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11866088 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094880974 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118056079 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192560046 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.117266825 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 0.148877757 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195894756 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.193111313 seconds)
    (63/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065347291 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06967147 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097711757 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083305371 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112022989 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.151188133 seconds)
    (69/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103509874 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.140046162 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160183461 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055012964 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096188038 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079375561 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053669893 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100457062 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067771172 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.173040825 seconds)
    (79/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06931036 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114350815 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170373267 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068977445 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.069302719 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.129265245 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066215441 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074442289 seconds)
    (87/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102929183 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081328847 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089750184 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075182513 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178337463 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079123673 seconds)
    (93/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118543702 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074929051 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168207855 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.211724379 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.144090796 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203986761 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07532957 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079107903 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113005972 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122670436 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081758339 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070396568 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107660193 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096108256 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.09055148 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075341149 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.159848071 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167040487 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055195542 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074476152 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120563656 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056309746 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.182874432 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053277654 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.129805764 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065277845 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17583411 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121276387 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133248685 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162507832 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.162985429 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076988251 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054444723 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.160296559 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077472908 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098944331 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104723406 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075900645 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076472641 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079295908 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099044352 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1821834 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054697549 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074491563 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116959227 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093161913 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075176958 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068386447 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053615764 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112964104 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076383414 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053618216 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174365857 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053587506 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096368128 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070043344 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053598649 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 0.151201802 seconds)
    (151/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129490756 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.136438107 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108892535 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075938907 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065151921 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166687958 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089698848 seconds)
    (158/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082585963 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.360086421 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070220715 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077795936 seconds)
    (162/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100585967 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072013583 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101987122 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106765381 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102514796 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068762958 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189747499 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078447667 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17155269 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054750488 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093744578 seconds)
    (173/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07332522 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053570672 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088895301 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054270575 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053769861 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054642696 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095451744 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054274968 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055371402 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.074524172 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.147835999 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.0890864 seconds)
    (185/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.174455629 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076901627 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090753073 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.077311064 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055727177 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074891953 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136378934 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054497223 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091107689 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.103139508 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089371742 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07557982 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06784873 seconds)
    (198/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.083776525 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064404416 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067245236 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111943531 seconds)
    (202/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101843129 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075473078 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06754642 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141547746 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163115216 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076810285 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076784388 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096277002 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068260675 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054574476 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076531132 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093276025 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112669953 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063349203 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076556294 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075649788 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073924176 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055359619 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202071789 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162890796 seconds)
    (222/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069515596 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089256073 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053924845 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097513617 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075616213 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068436799 seconds)
    (228/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10165477 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164561276 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054991184 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097509839 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108480025 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097674027 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096829835 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089583865 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069862469 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122345437 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054119723 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076430007 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074791381 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137008485 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054089565 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089896005 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053736394 seconds)
    (245/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06782795 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.07586314 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069522809 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115930443 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093798668 seconds)
    (250/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055304037 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090664128 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074047162 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148387665 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073521839 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095467176 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125367592 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098006742 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087175015 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113040278 seconds)
    (260/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053889398 seconds)
    (261/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075609162 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076079529 seconds)
    (263/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054671572 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063390815 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074894281 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114547321 seconds)
    (267/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064528775 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102868149 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055502397 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081420955 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09517288 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170811346 seconds)
    (273/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054025707 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101822919 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089872942 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068353219 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069233039 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090312965 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068935761 seconds)
    (280/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.115106025 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075707124 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115318471 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067199354 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069520423 seconds)
    (285/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.076113716 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067842996 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053502105 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077103028 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069430512 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0773438 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088177467 seconds)
    (292/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064466029 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163961322 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053386556 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089197953 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070952869 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074650587 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084572625 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067191069 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069662438 seconds)
    (301/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212053329 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09871745 seconds)
    (303/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071598213 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09774212 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07379313 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075311081 seconds)
    (307/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.085991382 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073022057 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195568361 seconds)
  done (took 33.759854735 seconds)
done (took 34.62987654 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086465287 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120294984 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079456704 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.122121843 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085418561 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106334092 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076770433 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106756861 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085446387 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.110037283 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083747979 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057939632 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102167467 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079685863 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102512094 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098198499 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104773246 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0755492 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097714499 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067071961 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075756377 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089751157 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068949372 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056546716 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101823282 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075251661 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096883428 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07689538 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069285319 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089971586 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071269745 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097552086 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067895337 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082291084 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098772047 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078945399 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102870928 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080492154 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072032281 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092893833 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077642058 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09213649 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076802706 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078143598 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098742981 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075586272 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100887691 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084811578 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120412023 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073267334 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078494092 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104314426 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081884349 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099885201 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074417709 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101201096 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076319711 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121656493 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079702748 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072660046 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09918281 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07879374 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.098833582 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07702307 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076154235 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10327157 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080683812 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099786199 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080370127 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076002554 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093099338 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078465148 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096678407 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070046186 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080360469 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103642075 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068992099 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096368473 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074989147 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075404004 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091633258 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070939941 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070791616 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096098091 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070716815 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05678313 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093232007 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074991198 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089020794 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076820494 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074305471 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096649771 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069548707 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100844591 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068552072 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07408967 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.0902231 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068168984 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070571747 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093535012 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068124961 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09271468 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078021898 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069530496 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096668169 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083524207 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090268536 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074898652 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068376808 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091788405 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086146258 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102766223 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069778932 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07208264 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089507569 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075830528 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068440083 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091204019 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068796399 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089379501 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075131384 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068533469 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09204961 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075368009 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081438307 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092430694 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072294259 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092456694 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0689886 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073558635 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090545071 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069228776 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070639307 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087452077 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070908054 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068593556 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097403061 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070940094 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097533932 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070083787 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078000673 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095615261 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074585597 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095403189 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067299239 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060977335 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092326869 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070251234 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070369513 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090365759 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070438965 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069346086 seconds)
done (took 13.639202618 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071195614 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179739404 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130557667 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102173345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114886203 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068941849 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102015288 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133649053 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070728841 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132742243 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09180588 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110941659 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.142600853 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067654141 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069035744 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09617886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071113771 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118320269 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10776495 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112605134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145217064 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067819997 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126022322 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.116285574 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092969208 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120697568 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069913039 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094563861 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072442984 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128876991 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088837886 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071938465 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090272295 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126739466 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098498328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112399955 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069068202 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109822742 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069297791 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090583841 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.097824293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127087754 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107448604 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086153537 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093097376 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071575043 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070251136 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112590453 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117479444 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085236475 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115400966 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139089078 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071299283 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108528062 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068551276 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113764504 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086223791 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093319025 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069080628 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071658403 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089697011 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07198979 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115021477 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.119649502 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073372379 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109000866 seconds)
  done (took 7.459749702 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090016389 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121622228 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08790423 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110668001 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068495421 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069275018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091710521 seconds)
  done (took 1.5674605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071405155 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094697459 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116185999 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092582108 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110500075 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090219436 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101183645 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069867784 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109818233 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070272593 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112905783 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109118252 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093758611 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076688922 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117360326 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069461564 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093551171 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092179677 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073601358 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116935711 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072691966 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112668214 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071612304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069135216 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106707861 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069570178 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141988699 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074234642 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092997452 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072932828 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067858721 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142817509 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107033154 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079509254 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092152424 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084869891 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107407907 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068040927 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086639555 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097283263 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084440254 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092601415 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071164606 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068451537 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097142101 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081243193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093415863 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071964629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072733345 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113342901 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070415236 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106225955 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070460038 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073759312 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094122231 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075442714 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101646808 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070710825 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090751549 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093848439 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087777831 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109960576 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084341183 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109747497 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071598268 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107711985 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084438394 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072941523 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094171841 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072949768 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109506733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068088306 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071165745 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103199497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071231738 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117447779 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093378431 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094568627 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079748159 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070669675 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092395953 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069774878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116994644 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072952133 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092466562 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074104387 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07319542 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.09093173 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069496293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073688949 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091129974 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071466221 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072962248 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09315382 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072646056 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.109577275 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070242295 seconds)
  done (took 9.507842681 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07397434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072857702 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098006761 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072802175 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072031034 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09391386 seconds)
  done (took 1.427763144 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104193077 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096890393 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085040097 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098929403 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111404242 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108379026 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085305381 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10909901 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088227307 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105731369 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08629341 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108483637 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091897986 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099383624 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085887669 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098097837 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085801426 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103196174 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082623424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098980592 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091115787 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099380398 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077236656 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109691974 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074270173 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099564488 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08070812 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106358783 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08243205 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109526391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077359177 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096046749 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074507986 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108505741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086229649 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09805383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076339008 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07503968 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10344778 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073676988 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109272884 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077290805 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105090395 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074602368 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109960969 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075447136 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097766632 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080225475 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10774014 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074936151 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097235679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076403735 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09623828 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075068445 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074261323 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10916537 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097412307 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08581871 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099860001 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074220137 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074271166 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097721358 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085955949 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097221921 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084495598 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097103617 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07471088 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099797707 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077225956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099191367 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073906396 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096028626 seconds)
  done (took 7.532365124 seconds)
done (took 28.419186212 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.660793184 seconds)
  done (took 1.597344708 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.808633831 seconds)
  done (took 1.747088594 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.134028396 seconds)
  done (took 17.078945478 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.668650241 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.828805299 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.841862104 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159768398 seconds)
  done (took 3.438424558 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.901061307 seconds)
  done (took 1.861568929 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251256405 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259867186 seconds)
  done (took 1.455242972 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734729755 seconds)
  done (took 1.684117122 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.321271257 seconds)
  done (took 2.265802453 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349184401 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191879968 seconds)
  done (took 1.493195552 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54239696 seconds)
  done (took 1.495367398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.942803586 seconds)
  done (took 7.901798078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238111486 seconds)
  done (took 1.204169672 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.278096374 seconds)
  done (took 1.233239304 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.315527717 seconds)
  done (took 4.270461998 seconds)
done (took 49.667179087 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083404954 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084707432 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106213872 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080519842 seconds)
  done (took 1.303917242 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083402392 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078024097 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106541432 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077667229 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107592161 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078588637 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104682413 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082779529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101681106 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.079447393 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078179502 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101167002 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080917757 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103830075 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076047295 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080524365 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105359315 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07798188 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105549006 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078905212 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.099046357 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079704158 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104981546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077152513 seconds)
  done (took 3.112405055 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082717878 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078134565 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102765677 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076309928 seconds)
  done (took 1.304851213 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081992896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.122682502 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095626458 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.107040535 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099689403 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11865915 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074834372 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074358732 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101478934 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081288012 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.096433977 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104982038 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118719945 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080823443 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108246801 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070040197 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097957463 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093817984 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082801753 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103572527 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073482081 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1028424 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071089855 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117776699 seconds)
  done (took 3.244804799 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081803737 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131980612 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085415757 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.119409308 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096849863 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069955421 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104734053 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095745908 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153239684 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.09131164 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072914287 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069248022 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098384504 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067892634 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079901892 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135553719 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140307362 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071951414 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12394714 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068558632 seconds)
  done (took 2.920879304 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080064927 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074883873 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09414679 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072321425 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079912995 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098853503 seconds)
  done (took 1.469401343 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073569538 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071621804 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095991063 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071344871 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076809013 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095062369 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068764269 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070568411 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092473344 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069886648 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093011516 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069150737 seconds)
  done (took 1.915720285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460655118 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071091145 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094960073 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068122212 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073921927 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092700901 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083421518 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070733464 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118004862 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069148529 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092754844 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070720687 seconds)
  done (took 2.336374358 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275553639 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083791229 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.343644213 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175631166 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14710501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164691551 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135759409 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122819124 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208312319 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147013533 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240727956 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234602816 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117050786 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200901827 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095530111 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.141399334 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224584545 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207363642 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137689478 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240088222 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194531312 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164397764 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217550924 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137948099 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14231618 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156446126 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07718136 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111914987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247232752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172932128 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213908003 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145059328 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103308758 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245997409 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232851007 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208248052 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170134652 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091015053 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166828172 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175955999 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271345623 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120852455 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231596988 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116692787 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113585808 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181190588 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154008219 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.155164472 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144022054 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120603079 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210390056 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2269361 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201378504 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092843037 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143384614 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14808312 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152206632 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134318919 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258342872 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231368044 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16822979 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075754427 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127795216 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22332713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169100678 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150216914 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162549612 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125396906 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179780384 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225985911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153765138 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183825471 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.196290675 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095240768 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154962587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206965861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165170135 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240670966 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162780838 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077960515 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15999999 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131288573 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109169353 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149071907 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103338938 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240548853 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103656402 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143949772 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142497681 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140624037 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141616699 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229417605 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189735152 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138406109 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069600082 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133414937 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152860665 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20688016 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092861455 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137979701 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150213283 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106655502 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172194535 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102653563 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156942199 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080840652 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180814456 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169060796 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07950284 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157966641 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131923743 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131819637 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168962943 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227520759 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09387199 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110548322 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233126979 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158599729 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1354918 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181498632 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222826887 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105169649 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130314097 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211931812 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251295626 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119052416 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205912547 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132945171 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112440583 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092630385 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182636852 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120182115 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153123934 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11189584 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157600231 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23460981 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078488935 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125659955 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170124293 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110088782 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109039966 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143803987 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104154229 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124043108 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130898766 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136377801 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175104194 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159780129 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13675488 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15960432 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12980826 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23057979 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118802523 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109014729 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13353495 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097492672 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170635251 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225388483 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083861075 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235538824 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162338794 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133372134 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152186495 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08656994 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200756907 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082884515 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098539096 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179579239 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142044251 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142752354 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195596377 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135481919 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162634373 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160422207 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196155283 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169532456 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171942958 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140867143 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11849261 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149047763 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166519407 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07737096 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126181308 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113866311 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111958737 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124841448 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112018063 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178273409 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161182065 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127231765 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144702445 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126992218 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18627464 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105364771 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165683231 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1535176 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12540927 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194587869 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224285003 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17196091 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130392593 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207011128 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075311992 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076541326 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119655476 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16189696 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112637361 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087464188 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174575084 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194261284 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165890742 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202365638 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118190098 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153983072 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224257785 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074503549 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149078958 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21538068 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163390427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.138322455 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115126948 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129213879 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183414682 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135399449 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257463699 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14754001 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159746747 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22149718 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.137712673 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086686622 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137039239 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175453719 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135152561 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217657788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131129249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092671425 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143460624 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110708393 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137281702 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163767691 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153742696 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196796259 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125241429 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192963483 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08103374 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148137443 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182207467 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154787994 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067921593 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154076294 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230388792 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126016742 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15238908 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192879631 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10897303 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155852019 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24925639 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186330789 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119778424 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144136681 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156105258 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162893326 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151750925 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176809799 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140445614 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168783051 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140893048 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114109209 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116238213 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104579463 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138377215 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125587689 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144458103 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14922099 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124807259 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166852241 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142999105 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142420988 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150532557 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126643473 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09625889 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127869517 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24359707 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15631677 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248739315 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.109605757 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.217889307 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238230111 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081416942 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112229228 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087153356 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206116354 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090340162 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198777118 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102617252 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13646617 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159490444 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179576233 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126718531 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095599582 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11557022 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194077403 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141724177 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103882498 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137724663 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230285725 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133621806 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082837098 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158013605 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134938738 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132873327 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245638849 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065202407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127123785 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07944271 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109992178 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166234096 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224411718 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087569457 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1560319 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151119322 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153934289 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16423948 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13134379 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126709129 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143392011 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186080752 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162750815 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120070083 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144716998 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164174726 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223721932 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137545627 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100251202 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236617912 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221119136 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231784919 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093063693 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148543289 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146933185 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144021282 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205315703 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090238619 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233061764 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112039044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173420877 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135231278 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12446741 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162971773 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126709159 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118635432 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18818063 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153043932 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128881497 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083024824 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146281435 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154724533 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133272837 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104109543 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175706595 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102020129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172786465 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236016882 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085558088 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138131229 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125830376 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086389225 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137205557 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13522809 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1167906 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124458461 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235146756 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121927427 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217314193 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177955402 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146595473 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202224886 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131574111 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668848633 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08290846 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221034084 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152436909 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248267512 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130200751 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152969012 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144099918 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157160469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179948624 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138416275 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209508075 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167317408 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153559009 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108609577 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134062743 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144254739 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094217653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138891732 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147048086 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147203225 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131642032 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153732219 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187140002 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086426886 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125284071 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199175175 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153967237 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206196975 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177538067 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114775259 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152948522 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178878 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109515916 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158911156 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220197659 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139878965 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13025422 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086680938 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138115859 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239979596 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077439724 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227987525 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158294152 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143199769 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146630977 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152991565 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194415309 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138231319 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160391971 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127554862 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14595958 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149750574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088411991 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107006785 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138310282 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146297296 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129948258 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108257079 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148238021 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19063506 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100042872 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125721885 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10823812 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207566191 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248899754 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093710853 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112980234 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149036754 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147054638 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148069073 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159496989 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110795496 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08734497 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112589106 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11761375 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13943064 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148297249 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133453673 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142048484 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233693739 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088311965 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25698111 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126304443 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140499731 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073572307 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109127789 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102020389 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127630521 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13565258 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12835556 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21233906 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12681342 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120311981 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122619536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07607762 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087378824 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191501942 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144731963 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156034472 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126330887 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066679369 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140107082 seconds)
  done (took 74.264809578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139583096 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105835283 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120042456 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178264832 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148688294 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24251965 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183446391 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.225685174 seconds)
  done (took 2.385537416 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074752307 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119710698 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104599623 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117125643 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090978047 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070892169 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304826229 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111995782 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092150627 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09473155 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12229161 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093591686 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.481362254 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068323006 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096290421 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087270275 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069760321 seconds)
  done (took 3.232838703 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.455749848 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.640341718 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451931815 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10044176 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.886135798 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110838434 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.333142579 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163766766 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093053227 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425622394 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.738470143 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154239841 seconds)
  done (took 17.596132425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080303059 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074202644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112303895 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.0864489 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100998232 seconds)
  done (took 1.495698802 seconds)
done (took 117.530178448 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085245891 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.378253253 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055852202 seconds)
  done (took 1.510191874 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08994438 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08993571 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113888385 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086839257 seconds)
  done (took 1.431276446 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.080215396 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08084826 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114795959 seconds)
  done (took 1.322865155 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.296004617 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171105241 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092351642 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08894015 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082987329 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108319041 seconds)
  done (took 1.327700101 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078024376 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080813594 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101663172 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080122688 seconds)
  done (took 1.381702403 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082143253 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056939096 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059873294 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087471583 seconds)
  done (took 1.334326801 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095529893 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.112376563 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084064912 seconds)
  done (took 1.33594188 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114644351 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115132083 seconds)
  done (took 1.278937935 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087230463 seconds)
  done (took 1.130836177 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09859829 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145508846 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.16636494 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141832182 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175038111 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142565132 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.116624332 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092503644 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106883751 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119991896 seconds)
  done (took 2.355591599 seconds)
done (took 16.087897625 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083827872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391628344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363343733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120601425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67090827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385315361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980242491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121851105 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112220021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097461162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087645865 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676589339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977412492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346978904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958190724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322904181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677666869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071627403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096535069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071120546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967336326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09659311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071462136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09728605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652148043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374727067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096848731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322357999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096698352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072972481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357784229 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096107836 seconds)
  done (took 15.953818778 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076280324 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14975491 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078052746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086521022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099812685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073288644 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101470494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072446619 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151826786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070763247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114573623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070509282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101764072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071574057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090706083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09764386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070698911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097455054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07123927 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072154108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115630272 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071154159 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097160299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072325935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071092679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110316282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072201345 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096840537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071468337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072782015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099262702 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072148095 seconds)
  done (took 3.894409124 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121963591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160271088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077519267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132071607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142975863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072961985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173822425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096811082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154937671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071866592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113776011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070844774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131453558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071164374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11706178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071045662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09815564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071795561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071601225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09820625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090780552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097261674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071146773 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071552688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096320095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085764961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097869203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073846664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097075734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07303885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074374814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097963457 seconds)
  done (took 4.20569089 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077605042 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079884463 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112444802 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086867375 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098966813 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074408269 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075733626 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099567447 seconds)
  done (took 1.758638853 seconds)
done (took 26.852235027 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083606453 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073668171 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102289802 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085319057 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102443097 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082082876 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070475633 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104622045 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077949257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102111008 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078621166 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070565953 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100706741 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07022165 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0772791 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097450417 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083420977 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10133961 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082405325 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110003495 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073374748 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079005163 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103684203 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082747114 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109690205 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083329327 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109506302 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077160532 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072406834 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100196448 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079349498 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116539067 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071760379 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109823812 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071151641 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070986704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097247875 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071184138 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083466384 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104620638 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074195202 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104559944 seconds)
  done (took 4.748314683 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095789745 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098260179 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115094876 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064713947 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098123037 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063824699 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120408575 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062818898 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064671664 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119508098 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057712498 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060708613 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089026374 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056659825 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060497805 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059607596 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090002523 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058627327 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059515329 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087632483 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.062625354 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056051274 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089663819 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061830994 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05912031 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06472715 seconds)
  done (took 3.034729404 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079761842 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087521981 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119157921 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132088446 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134913471 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077320642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106987785 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088504361 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113914041 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069917899 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100932077 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099556732 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089159565 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10409789 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069778945 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112839773 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084330644 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07258826 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104153444 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090527174 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114330042 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080489646 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118182533 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081507443 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06921511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0990055 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073956325 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111387859 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076523405 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07975979 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100805812 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074589822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099373948 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082693109 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101082856 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072473082 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090992473 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106841924 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07996781 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098415441 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074128157 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071917673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118496828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115329812 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097077911 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078202881 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104621382 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081166781 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070511566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115385184 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080074121 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097898743 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074199579 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070540412 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097948169 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085051112 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099474481 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073632298 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07982016 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101468707 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08304972 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10223545 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086742033 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070304423 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105303404 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07064358 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09827571 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070389756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093029389 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09880523 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112102892 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09881863 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072605679 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106710398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077897791 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07626367 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098897232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086574244 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10771768 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074320513 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079497096 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101586059 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074017899 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115674303 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073516613 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073363853 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098441319 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076836218 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10024615 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071946881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084450034 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097846428 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073746661 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115517421 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071105674 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072831898 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10534655 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076355376 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096994877 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084518671 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10331175 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071805657 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081256429 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097471425 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073565535 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080017917 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101917093 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069639515 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102024174 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077536504 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072219194 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099253455 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07430175 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09869252 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081051215 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076582289 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102852798 seconds)
  done (took 11.605220199 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.207614964 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189675521 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072639736 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184382475 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083375682 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109583853 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184709738 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103198811 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0988767 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071410161 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098968617 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11043716 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131626762 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.143817878 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082318214 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07094279 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115623805 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140385848 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189657094 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152564065 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117241826 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078468785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.10167517 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071846189 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.099693621 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081003395 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.116354392 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083495802 seconds)
  done (took 4.360283669 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08834856 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.135162075 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077432215 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119876197 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09609486 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099141764 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076226054 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072535069 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111002724 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083961829 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098671794 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077443059 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105475601 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.08027826 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072177892 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107179609 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081231002 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.0995959 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073783853 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074953018 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104163244 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084679239 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102944058 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070397499 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077372697 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097564389 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068815428 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116094692 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071519925 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119744341 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068433464 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10455854 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08047035 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071957149 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098202485 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07331237 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099992091 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073454487 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073481805 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096373212 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069740091 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060146636 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096584774 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084622273 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103548181 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063065998 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075978331 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104633721 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075841415 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.09636004 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073472084 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073550201 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101683951 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078437559 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075196049 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103373035 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07410778 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097871977 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077724931 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07455225 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094698412 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070054993 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07564603 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097319274 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078959663 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102427959 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070131273 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073397544 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.10282974 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07760381 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100020237 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07436907 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070001925 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100770789 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076423769 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075423198 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101078705 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069467478 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.098420053 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072084777 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058060475 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098379702 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05652545 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074108578 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096512261 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069337332 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073204895 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107249122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086110078 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099506158 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077063443 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098703306 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069473323 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073565324 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.092972383 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074202775 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086330931 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114370797 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098166053 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068884017 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084527701 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10344337 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070143691 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059630065 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10588067 seconds)
  done (took 10.104467845 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09895433 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124553222 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072955756 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084688135 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124305578 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096311715 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106063128 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077136694 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072777437 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11475722 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071429042 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107860264 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074669526 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079823656 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123681272 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079593712 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101324811 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080369154 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10719631 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108050944 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084883537 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113163979 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082038723 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099435391 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076447574 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110476371 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098408799 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081744071 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107594598 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085626965 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108086924 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098002224 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113218348 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07555192 seconds)
  done (took 4.321499822 seconds)
done (took 39.221831301 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.133899718 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.340328558 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.124319715 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.975376166 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.137819152 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.151346894 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.141548043 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.12897042 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.761474889 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.129046468 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.392472174 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.715828118 seconds)
done (took 59.203566285 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.184339183 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.26802242 seconds)
    (2/2) benchmarking "String"...
    done (took 1.437497625 seconds)
  done (took 3.775227653 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.486252216 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.088278297 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.431676848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.129447118 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.127561145 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.669497118 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.688043984 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.975043183 seconds)
  done (took 27.179367645 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.133716013 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.480288935 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.421128831 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.423332389 seconds)
  done (took 17.531104934 seconds)
done (took 58.229226505 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.121587967 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.181662915 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.136916028 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.111270192 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.231504989 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.15219414 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.417860862 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.13171959 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.13064327 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.117429675 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.147918551 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.135254365 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.138413407 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.428427415 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.141274992 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.130665275 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.175404298 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.668275943 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.518542955 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.145962497 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.142358126 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.191925333 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.131324498 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.132860608 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.145201351 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.127937791 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.127603638 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.140546136 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.359638934 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.131250961 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.218766382 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.598029493 seconds)
  done (took 187.879861445 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.132401156 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.14175245 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.27900089 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.180110696 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.654362845 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.329931127 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.266886883 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.728078898 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.146281801 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.158817226 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.279357573 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.131114391 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.34224786 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.113883726 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.141308225 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.14012521 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.344967966 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.364250149 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.146938954 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.398735715 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.135099418 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.19804947 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.128652048 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.266440024 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.17099364 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.163564771 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.139003878 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.157579971 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.321978371 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.293891176 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.149961353 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.134603968 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.68816769 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.990886915 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.155241311 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.159378973 seconds)
  done (took 146.746805249 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.399750571 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.132114596 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.130987239 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.131133717 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.162206381 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.131150588 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.660526356 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.659681062 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.628875945 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.56713036 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19179407 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.381187753 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.132458413 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225355068 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.144537959 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.131755352 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.147971933 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.158688836 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.131776352 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.132010191 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.661117324 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.145400901 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.158542673 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140145227 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.133071666 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.16244438 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.131736785 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.527895162 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.131001077 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.162310401 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.447729752 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.174163892 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.129958377 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.434648914 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.993034541 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239790785 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.133689825 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.163792102 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.133381835 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.399307862 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.13126669 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.133038207 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.137583095 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.724510048 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.13342168 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.662245581 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.135251692 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.045898915 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.135502809 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.135287759 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.729940488 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.61152797 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.135188968 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.134066397 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.136859157 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.134302517 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.133206437 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.164010727 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.714103856 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.230820036 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.13531204 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.137687455 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.163943199 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.135489605 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.139775811 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.133508722 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.181295785 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.191391883 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.354476843 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.666198026 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1364946 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228460508 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250436749 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.132796193 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.13465601 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.135583269 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.134433738 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.24023323 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.132726272 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.527430499 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.138947725 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.136900539 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194617576 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.22951776 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.134748018 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.444959862 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.13646756 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.134929795 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.813243461 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226049764 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.133190973 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.136503021 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.13614486 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.527341636 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.664870422 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.315747366 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.137563195 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.137299161 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.45777082 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.13702423 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.539682001 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.643620007 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.7292027 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.137506782 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244586871 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.137895719 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.137354646 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.13838476 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.136482959 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.165844204 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.138547478 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.197542865 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.13364707 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.136546159 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.53316153 seconds)
  done (took 336.979236974 seconds)
done (took 674.07802557 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822782576 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.771901989 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.901720944 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.787781752 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.771361696 seconds)
  done (took 10.131867495 seconds)
done (took 11.211356823 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.317856248 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.318519948 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.194287358 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.320568866 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.166560818 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.33504052 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.295630315 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.157430715 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.235363016 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.211232587 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.257046259 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183384422 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.163616383 seconds)
  done (took 17.23432643 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.454288042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.432559239 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.201575998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453487273 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.177676971 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455615871 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.343187045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35321693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333625566 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.154320049 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.153783917 seconds)
  done (took 15.593523303 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450182188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.439455614 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.204317922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459904232 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.179341047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.450794618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.340863412 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.351386164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33389866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.154482268 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.154737122 seconds)
  done (took 15.59942091 seconds)
done (took 49.507774893 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.151148041 seconds)
  done (took 2.229716419 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.181973169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.341574556 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.163334824 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.154831085 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.149935911 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.152320779 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.153246239 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.15025531 seconds)
  done (took 10.52786691 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.147662688 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.148666171 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.148109622 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.145706835 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.150574175 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.149384539 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.145199152 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.14707199 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.146262791 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.147013996 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.146510526 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.14961586 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.148818283 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.148049724 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.147807714 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.150215634 seconds)
  done (took 19.447506466 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.149380009 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.145773894 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.14750245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.14784344 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.146767534 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.14720062 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.147962609 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.146796742 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.147440974 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.147493431 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.147680541 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.147516919 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.148430439 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.148349649 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.147775985 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.14938327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.147404822 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.14725556 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.152007837 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.148958519 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.147311917 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.147617091 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.147820944 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.148263109 seconds)
  done (took 28.633718952 seconds)
done (took 61.919243914 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.211832125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.731182272 seconds)
  done (took 9.024378086 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.148940003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.150146518 seconds)
  done (took 3.382758631 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.149153664 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.149902739 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.151506871 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.149880317 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.150316025 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.150642602 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.150721089 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.151069238 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.149992037 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.150222456 seconds)
  done (took 12.585326591 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.149598352 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.151063273 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.148313269 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.151679889 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.150511955 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.148267215 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.150990274 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.150961909 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.151866113 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.148629841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.151576006 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.148762805 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.151995203 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.149680269 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.15146957 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.148935972 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.148959106 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.14889661 seconds)
  done (took 21.785591256 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.153310965 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.151480583 seconds)
  done (took 3.387913618 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.149332154 seconds)
    (2/7) benchmarking "second"...
    done (took 1.149874209 seconds)
    (3/7) benchmarking "month"...
    done (took 1.15057615 seconds)
    (4/7) benchmarking "year"...
    done (took 1.148650863 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.150199578 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.149752687 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.151526368 seconds)
  done (took 9.132550099 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.153325972 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.329041517 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.407432088 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.755349487 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.154822419 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.156605735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.020859762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.155859984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.156743437 seconds)
  done (took 13.374293231 seconds)
done (took 73.755773366 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.154366561 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.144323969 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.01384537 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.160637061 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.161193777 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.488521024 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.156011297 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.265665751 seconds)
done (took 36.629910207 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.147238119 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.845946612 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.872701415 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.146779786 seconds)
  done (took 10.949324892 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.136058135 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.067905714 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.143940665 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.15584167 seconds)
  done (took 17.590994045 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.757815971 seconds)
    (2/2) benchmarking "read"...
    done (took 1.477900056 seconds)
  done (took 4.320485062 seconds)
done (took 40.093587983 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153390829 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.155644546 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.152187129 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.154313335 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.152281823 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.150620804 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.150940066 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.154978679 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.153487348 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.154815678 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.154004304 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154872098 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151955501 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152089261 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15539448 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.154867279 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.153385614 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151950671 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15318339 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.155919597 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154350674 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.151457531 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.152519601 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.152096692 seconds)
  done (took 28.766419953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.154314237 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.152653186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.156423505 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.154502482 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.151585087 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.155394847 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.155417577 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.152401506 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.15584007 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.155869637 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152752354 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.152809127 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.155718694 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.151782264 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154521311 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.15272101 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.155544158 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153138728 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154937384 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.153074962 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.156073949 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153167607 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.153201673 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156632953 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.153410879 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.153673864 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.156034769 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.153116577 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.155589606 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.15221971 seconds)
  done (took 35.712984689 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.159914282 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.163866267 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.155735293 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.157660653 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.156213703 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.157609228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.155557128 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.156605793 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.156419508 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.156076726 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.157247029 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.156186209 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.157229353 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.157501227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.157110816 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.157473512 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.157186199 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.156609931 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.156716839 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.156035476 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.156525338 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.156979323 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.1560395 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.156830897 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.157645002 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.157453726 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.158319417 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.157665792 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.157878892 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.15761361 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.157517904 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.157943772 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.156905601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.158080721 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.158288537 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.158831038 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.163100531 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.166511473 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.157533772 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.157799562 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.158933926 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.160863619 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.158762201 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.159658909 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.159050516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.158301958 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.159987931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.159070614 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.159300379 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.157588201 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.159389078 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.160566084 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.159980384 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.159374796 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.159687757 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.15989188 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.16000749 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.160652816 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.159902517 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.159182581 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.160123893 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.159161011 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.160379386 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.158783319 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.159313211 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.159142243 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.158901153 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.159594784 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.158607895 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.159432309 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.159545802 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.160620881 seconds)
  done (took 84.504946198 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.159107241 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.158097904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.157229334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.157761673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157100015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.161243743 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.158301466 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158379086 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158180327 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.160795776 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160096271 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.158029376 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158304 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.160846985 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.159846027 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.156897442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.160130973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.159131368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.160954726 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.161639456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.161181851 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.158324879 seconds)
  done (took 26.593403575 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161658463 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.160373772 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.160355764 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.160482517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159136832 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.159823177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.161857487 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161293248 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160409087 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157045663 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164586049 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161413661 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.158478696 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158330946 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157798487 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.159481935 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161977822 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.158823756 seconds)
  done (took 21.976005269 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.159162313 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.158619489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.160374764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.158974184 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.159567713 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.161736762 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159378183 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.162169138 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.161708695 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.159816372 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.160377099 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162106662 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.161548825 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159040946 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164225287 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.16016666 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.161003112 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160320583 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163620928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160292564 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.161031602 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.162985894 seconds)
  done (took 26.63140737 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161803979 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.163052048 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.159898263 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.160917118 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.160464771 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.163806547 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.163747476 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.161033748 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.163568144 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.163553692 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161070639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.163423658 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.160913433 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.162382258 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.162016606 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.162354641 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.164399441 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.163035719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164217157 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.160275127 seconds)
  done (took 24.341680054 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164941487 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.164616878 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.164438203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165206781 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165416333 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.165266737 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165178238 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165468328 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.164610852 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.16445325 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.165061257 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.165703482 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166155719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.164378123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.165615716 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166643089 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.164737697 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166066459 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.166064619 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165343673 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.165533726 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.165794025 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.16619198 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.165214611 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.166229115 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166260804 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166258089 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166487985 seconds)
  done (took 33.728352753 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.16589042 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.165190679 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.162478485 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.16194506 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.163279303 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.161716787 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.163310169 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.163807009 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.165484786 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.163067189 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.165558408 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.166626458 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.164674781 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.166954379 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.166638301 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.16415208 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165708534 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.163393874 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163783633 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165441015 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.165610552 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16444943 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.166141939 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.16379319 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163615552 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.165301447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164317319 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.163812755 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166401358 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.164104912 seconds)
  done (took 36.034312274 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.185454993 seconds)
    (2/2) benchmarking "in"...
    done (took 1.18487237 seconds)
  done (took 3.46818728 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.164435346 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167206744 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.168960099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.164793195 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.163878476 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.16633659 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168106226 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.164591896 seconds)
  done (took 10.427501242 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.165544318 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.167695818 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.167160663 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.167449465 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.168379732 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.166275822 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172336902 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.185054015 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.167098046 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.167772917 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.17458873 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.175413042 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.168887561 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.166732344 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.166929742 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.167921074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.167322046 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.167119172 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.168467707 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.168672772 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.167791035 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.169951321 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.169486235 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.165750639 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.169476164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.177595362 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.171764776 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.168257595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.167146427 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.170325693 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.167365635 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.16633001 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.169502087 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.167869445 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.168761955 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.169503851 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.175983091 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.184362026 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.174905652 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.170972906 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.169658546 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.167381038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.168464897 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.169669972 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168609647 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.170569552 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.16978136 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.165843962 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.167635522 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.171604829 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.175460619 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169015889 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.168136095 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.172999885 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.170340537 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176120431 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.187853212 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.172535435 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.179131854 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.178320699 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.18211073 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.177741535 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.170625336 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.169440106 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.177743827 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.193923267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176324797 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.186209987 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.16869727 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.171058892 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.175315044 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.181564668 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.180802506 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.170292277 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.171160288 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.1701488 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169860583 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171378808 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175808163 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.190183958 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.171561749 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.171806135 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.179752434 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194726737 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.170593049 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.171992188 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.172703778 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.171512962 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.171123755 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18170511 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.190391852 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.172157337 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.169955989 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.170452486 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.171873601 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.170970673 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.170159187 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171103937 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.169945507 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.171706929 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.17175449 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.174053565 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.179962306 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173420523 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173407695 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.177327347 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.172424029 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170341567 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.17812758 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.172584447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.172741174 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.1723242 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.177839931 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.170706662 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.17523185 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.180450035 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.173058277 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.173104315 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.174079352 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.173826602 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179498 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.199352374 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.173806566 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.172719537 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.177315902 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.185687472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.174924437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.174953662 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.174155837 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.171133741 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.171530445 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.17449759 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.173954042 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.173531958 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.174599134 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175197611 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.172210445 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.173958095 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.174339228 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.173964378 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.172953354 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.173552653 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.173715141 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.175211334 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.174754357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.174782503 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.179914255 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.173952243 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.174972072 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.173775907 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.173063887 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.174980455 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.174840862 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.175283414 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.174509553 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175852591 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.173645743 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.175319568 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176280289 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.176020785 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175342663 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.175967014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179023279 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.176901371 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.176069997 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.175440903 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.172307572 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.176000305 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.175946755 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.175248468 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.177251664 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.173893185 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.178529182 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.184507676 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.17688715 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.175979422 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.176297677 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176205652 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.177177961 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177130709 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.177906818 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.184269635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.175821069 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.182424869 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.177782603 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.175719054 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.17729615 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.175066145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.174825768 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176293485 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.178135231 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.185026473 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188903073 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186687106 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.176197732 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.181382066 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.176456457 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.180956665 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.179473969 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.176930496 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.17748681 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.177849944 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.175910851 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.17605676 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.176983032 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.176416262 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.1770412 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.177604601 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.17759849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.176808158 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177900659 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.177032764 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.177757941 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.175079389 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177870924 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.177989668 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.176354875 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.175193407 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.175551248 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.175379802 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.177580704 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.178317656 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.184710139 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.176744651 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179241611 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179366789 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.175982282 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.176206866 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.179072905 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.178555677 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.177758222 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182922662 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.195485488 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.178710481 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.185370322 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.194382987 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.17786803 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.179395335 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.179049837 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.176436293 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.181491189 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.189225173 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.180088412 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.180278493 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.180481011 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177319527 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.179567037 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.184760534 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.17755842 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.178037125 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.179620993 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.179189833 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.178817271 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.181212542 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.180445664 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.18021913 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.179294743 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181112822 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.178904701 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179633341 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.18134494 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.182064662 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.181203207 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.181438837 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.189784018 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.184623554 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.180682831 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.181440072 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.180870787 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.185605967 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.180018571 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.181061377 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.179759834 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.191007576 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.192331038 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186007913 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.181928907 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.182991887 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184638535 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.184898103 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.184628511 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179425277 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180080478 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.179850309 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.179822729 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.178078987 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181392248 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.181629849 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182147684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.181271555 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.186065588 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.182364535 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.181245814 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.181905193 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.181157698 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.181975373 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.179365691 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.183233341 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.183383462 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181933446 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.180509562 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.181892729 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186553956 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.199082906 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.183606872 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.181097824 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.182324915 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.180344488 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.18258829 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.182906854 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.1855976 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.192553104 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.184542982 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.192490419 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.184114725 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191403289 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.182962555 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.185838867 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.191621196 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.180854241 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.181321232 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.182580505 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.182597092 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189903436 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.200873465 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.183416809 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.187906226 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183759865 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.183853152 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.184124097 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.183198902 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184058856 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.184869791 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189396709 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.202891667 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.187929002 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184789456 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.181325468 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.18491337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.184519431 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.182886807 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186024345 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.185113129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.184284779 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.183435315 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.183241045 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.185290304 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.184990037 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.185914155 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.182571956 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.186728055 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191259691 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.202758703 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18964564 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.184666239 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.192206888 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185961811 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19117641 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.203494029 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.184907894 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.185255294 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.185750896 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.184702251 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.182501976 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.185500201 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.186352091 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.185840875 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.190435062 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.186356964 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.186656623 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.184183028 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.186131223 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.185650399 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194523568 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209395888 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.18656625 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190629781 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.184770458 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.185770953 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.191752913 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.186702068 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.18352328 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.188401388 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194701129 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.195293239 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.185871389 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.186331283 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187088171 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187150932 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.186741882 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.188340979 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.187214957 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.187244173 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.186520107 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.187814296 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18953051 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.186359761 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.186156048 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187094176 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.187420553 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.199736693 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.187341939 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.18883807 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18779089 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.186692904 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.186014942 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.187381321 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.187013784 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187476661 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189221697 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.189452673 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193495169 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.194572622 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.188237147 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.187832243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.188864339 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.187611989 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.189208994 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190099654 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.19021097 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.189424903 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.18845251 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.188575549 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.187973577 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.18732428 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.188440804 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.188698256 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189015983 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190439171 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.1968754 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189421655 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.186632557 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.188345423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189185704 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.18656126 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.189417819 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.196158827 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192359101 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.199462023 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.197718938 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.193235136 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.188927404 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190021145 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.197899289 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.188752061 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.189241226 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.18881352 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.190080838 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.189199652 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.192935516 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189254423 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.195065025 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.18716439 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.188832024 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.197665317 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.206420904 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.189953962 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.19040908 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.194736427 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.188848025 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.185995593 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.190192173 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.188078675 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.196110567 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.208545849 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192193195 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19129791 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.189054518 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.191234392 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.194576434 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.190743775 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.190092713 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.190290768 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.188577479 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190257473 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190736554 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.189432814 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.190239436 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.189138061 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.193421615 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.197508934 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.189846986 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191353876 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.190676238 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.191220083 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191088904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191002949 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.189196981 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.190767739 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.190802874 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.193860505 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.193204947 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.193172407 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.190077006 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.192835214 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.192667405 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193202883 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194214403 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.201790699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.201670594 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.190520732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.190926284 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.190934659 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.194933579 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.191949172 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.191737397 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.192344375 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.193347503 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.193033022 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.191959824 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.19198297 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.192842793 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207812443 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.210756346 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191048465 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.191665096 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.196760109 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.193828944 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.190739248 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.193225843 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.195164317 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.195924012 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.202348731 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.194211989 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20017901 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209123496 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192451953 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.199057169 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.195913901 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.201533485 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.196061862 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193785462 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.193170269 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.199138465 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.209070478 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194373293 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.203018981 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223706095 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.210914085 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.195320409 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.194419988 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193130386 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.193949315 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.195875084 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.195890824 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.194044651 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196047757 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.194823876 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.194940698 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198944482 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.195092167 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.195184244 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.19493756 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.193534082 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.195132475 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.192944232 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.194693583 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.195144901 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.195218864 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.195290908 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.196158446 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.194519547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.206261504 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.205760873 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.195062582 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.19565378 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.193779702 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.196943514 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.198394813 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204673761 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.205162256 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.195554963 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.197133996 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.196629231 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19613082 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.193809357 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.195875218 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.194441747 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19493061 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.192933975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.207092458 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206653872 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.199959805 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.19498568 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197076906 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197697774 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.1961203 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.19644534 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.196614564 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.198147994 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.19676694 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.201531322 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.196922514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198565183 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.198029663 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.206047951 seconds)
  done (took 706.823205538 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.195460086 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194810635 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194175166 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19585907 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196087089 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194494907 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19414094 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.195327123 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.196450129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.194754541 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.195591187 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195264017 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.194835433 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.19544946 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195615505 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195380289 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195705395 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.196043386 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.195568376 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195852126 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196262509 seconds)
  done (took 26.230761712 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.198226703 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.195208715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.195806224 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198531673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196796848 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199157057 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.195304782 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198163173 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197102016 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196230661 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.197165949 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198251639 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.196612545 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.196539952 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197060144 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199301304 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.1986748 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197201663 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.198431137 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197456396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200025199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.196267071 seconds)
  done (took 27.472756526 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.199236551 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.200719289 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.197648443 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.196477947 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.199131608 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.196544408 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.19745925 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.198888172 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.198296137 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.199465491 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.195663884 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.199363825 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.205577563 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.205821522 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.201239364 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.200278624 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.343728599 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.199042505 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.199613062 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.200821525 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.196477058 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.205168312 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.198002284 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.197125609 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.198322722 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.201722506 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.199986781 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.199437103 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.20031512 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.202019628 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.204874786 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.201384568 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.19963633 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.200800586 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.200270888 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.200132119 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.20467505 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.20118629 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.199222027 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.202196428 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.209018624 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.223406521 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.20065509 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.206643749 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.200883853 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.200438662 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.204474502 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.208832585 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.198022258 seconds)
  done (took 60.131256399 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.201056449 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.201185557 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.19851517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.202630345 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.202224652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.202622831 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.203202803 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.200912884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.198886796 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.199731882 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.202127325 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.199943021 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.199516232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.202508134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.202780473 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.199472936 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199642627 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.199027502 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.200717823 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199915034 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.19968181 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2027735 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.204012176 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.200773983 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.20261798 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20105144 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.200885612 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.202949727 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.201018524 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.200142628 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.203614937 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.202993461 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.203478053 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.201448343 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.199510283 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.203761274 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.203541072 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.201095311 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.204401734 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.200585849 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.204101447 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.202739389 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.204633032 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.20427922 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.200872584 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.200402871 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.200947575 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.201340163 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.202564502 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.204068001 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.203547421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.201505004 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.203235269 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.20318664 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.204206487 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.204280099 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.201149077 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.202078173 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.204968447 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.202077303 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.20284947 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.205378687 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.20297005 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.20429614 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.206323268 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.204133595 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.204125952 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.206387794 seconds)
  done (took 82.883393677 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203282727 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.206410018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206811382 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205160085 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205439473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.205950115 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205816274 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.206913048 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.206676262 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205824606 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204041462 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.204803401 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.205839812 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.205415107 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.206575801 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204613919 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.205724806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206139967 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206453732 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205561843 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.206579943 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.204950935 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206372585 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.205543759 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205955674 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.206972581 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205805159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205554226 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208134235 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207463619 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207182047 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.205965833 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.20785251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.204957466 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.206159105 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.207182897 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206272583 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207375756 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.207237287 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207471576 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.206667588 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20615755 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207575453 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.207298361 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207967509 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.207037737 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205554491 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.207359386 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.208002128 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207323489 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.207544067 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208092868 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208802576 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209123179 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207199216 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.208890326 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206701261 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209112791 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20703223 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.20896748 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207340066 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.207967179 seconds)
  done (took 75.949519125 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207902858 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208055577 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.205952157 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.205040488 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.207354552 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204984855 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206940146 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.207836724 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20803485 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.209454458 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208363692 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207152384 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204924601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207756097 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208430171 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206221564 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207198512 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205365038 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208997514 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.20639482 seconds)
  done (took 25.280488691 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.206984331 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208450717 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.207119361 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.206603806 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.209360452 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.206758144 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.210328386 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208996153 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206660235 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209844767 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208711802 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209336346 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206293472 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205538784 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210092611 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.207076752 seconds)
  done (took 20.466891703 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.207702535 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.209040463 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.210674534 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.209651736 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.206602622 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.207736482 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.210037022 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.208071229 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.206459253 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.211111053 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.210969601 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.209922517 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.211300872 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.211139091 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.209385669 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.210588523 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.208025023 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.208802331 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.211429842 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.210503243 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.20856188 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.208168226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.210954213 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.211181261 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.209002545 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.207767787 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.208171645 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.209505532 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.208230133 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.211635601 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.207413967 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.209370756 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.209755877 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.207885159 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.211196901 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.208009194 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.21087673 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.21170747 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.211210125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.211257173 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.212792141 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.210634282 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.211316684 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.211501926 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.208688322 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.211053525 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.209532319 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.210768125 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.209292367 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.210689808 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.21298422 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.211924245 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.212193491 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.21357827 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.211409793 seconds)
  done (took 67.689854677 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212485644 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213586428 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.208740564 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212619043 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212347751 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.210368729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.211625096 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.210106596 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208137342 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.212303757 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211382512 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.212067334 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209999476 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213411348 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211371513 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212144163 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210709497 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.210207758 seconds)
  done (took 22.944689815 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.211550509 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212789287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.214412239 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.20952597 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.210712346 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214370441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21108182 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.21355253 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213399148 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.210941952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211557169 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.213783593 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213172745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.213874438 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212529202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212211618 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.214794586 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213726559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211233107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210644711 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.214489233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215055286 seconds)
  done (took 27.822765365 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.213160922 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.212458199 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.229716755 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.252312911 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.242745232 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.212730225 seconds)
  done (took 8.507351879 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214333959 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215763791 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.211377936 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21466985 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214082265 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21269594 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210934591 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211920209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213388105 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212531515 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213855094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213880334 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21633193 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211156871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214443853 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213841718 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213613213 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212638735 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214035504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215130294 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213500774 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216388676 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21258277 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212656091 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21279524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212178955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216403729 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213319561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212280941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213702473 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214352838 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212397442 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215903271 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2137704 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217846135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216734463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215211281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216888071 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214384706 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216948355 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217640566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217034229 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214355525 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217139484 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213679842 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215977146 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214985117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214894565 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21600394 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217764485 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215059161 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216089669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216378155 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21688955 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217391092 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216135297 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215006283 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215979676 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215084398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214209289 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217305593 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21550007 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215704273 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217530144 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213910367 seconds)
  done (took 81.319610149 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212781088 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215075944 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215376523 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21605096 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214972781 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215202834 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215843473 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214937515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216021055 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216264652 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218960755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214732549 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215008551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215027131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215527983 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216158409 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216349967 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217103933 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216539124 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219039558 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217468676 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216636674 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216102099 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216881979 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217531535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219506974 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217353918 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217315 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21653168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216546539 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217420501 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216515012 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215844455 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216621344 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217109887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216626173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215380383 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216481129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218351497 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218410367 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217447036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219356908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217153239 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217067203 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218242702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216850755 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216418166 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218076489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217389222 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217090503 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217228284 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216511511 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218051456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217821045 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217773508 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218244215 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219796376 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216374751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215357327 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220107851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218577978 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218140929 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219259462 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215779257 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217665857 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217900682 seconds)
  done (took 81.466559261 seconds)
done (took 1648.259885645 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.276496878 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.301006945 seconds)
  done (took 13.725048539 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.385495471 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.337376754 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.217743138 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.223006146 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.213638503 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.236728469 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.216816732 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.214268521 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.21615504 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.217276479 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.215926195 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.410698543 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.218617908 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.214803091 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.216853817 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.308272067 seconds)
  done (took 41.216158485 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.243726217 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.225282 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.332598569 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.236667325 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.244833672 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.396341884 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.271704979 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.221198963 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.390244997 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.260894337 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.752655185 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.242530354 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.220888858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.302045339 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.236399043 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.397607929 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.464855675 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.831581414 seconds)
  done (took 28.421488467 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.661058979 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.2387175 seconds)
  done (took 9.050795145 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.233875738 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.255990169 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.256241344 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.220842263 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.210047048 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.274419921 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.218099052 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.219001098 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.220759565 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.229031563 seconds)
  done (took 63.490284015 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.237347721 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.220445068 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.221364654 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.218644275 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.209651775 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.20955366 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.216178826 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.214646699 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.715329567 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.340085538 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.232589241 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.226514233 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.219687627 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.221039303 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.218015861 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.255594023 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.345238462 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.21794258 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.217148212 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.224530926 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.22046206 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.339601608 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.255639606 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.218750399 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.341448987 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.729099949 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.221914865 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.2265956 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.327289382 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.220197755 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.220499019 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.22011955 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.222115736 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.783046631 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.712527366 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.228072606 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.241105703 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.228869794 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.216962585 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.361701382 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.218612449 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.228383768 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.215126581 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.68309748 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.368838467 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.336504091 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.465244297 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.219661097 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.220654533 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.279764634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.219993605 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.220919211 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.251253028 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.977663796 seconds)
  done (took 104.773468473 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.243387685 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.700239768 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.383554604 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.236430109 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.986676284 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.841025333 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.212837772 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.492425971 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.253089065 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21385317 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.491187402 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.705494016 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.21369483 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.225127198 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.278118466 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.29618849 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.221457393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.943349702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211369312 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.206372393 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618779701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224582815 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.212087718 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.373912613 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.247569032 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.673793966 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.659699322 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.646532664 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.2113171 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.209956663 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.66395366 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.216120864 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.260025996 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.208808115 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.479710021 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.562020631 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.546561368 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.211979643 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.226887852 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.212409162 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.241102336 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.66504812 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.550959809 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.211096506 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.207387407 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.666048659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.212103903 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.209295141 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.212826172 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.407209938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.150227263 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.208106482 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.626838637 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.209971523 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.545793105 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.262602349 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.275067967 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.68688407 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.207739734 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.253488943 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.214874881 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.207867772 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.210673393 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207703897 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.210518461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.540777245 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.309573859 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.209459809 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.543632785 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.643926007 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.216827434 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.7000406 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.131742185 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.213116151 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.292799369 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.209147478 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.741118859 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.680441033 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.212720688 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205027951 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.522695775 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.211678057 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.478531494 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.217595603 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205764109 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616309541 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.221259587 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.212375332 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.205830882 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.21594053 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.821604491 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207745983 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.457996757 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.240506117 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.204079431 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.203775008 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.253210856 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.201835603 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.205356576 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.206328239 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.680354546 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.208948192 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.319256289 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.219141398 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201014226 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.201140031 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.204375818 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.204412129 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.414753493 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.6052762 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.199159185 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.201817174 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.198452328 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.207698271 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330183257 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.205992497 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.465416044 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.202078586 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197900908 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.20456478 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.802930854 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.223857842 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197604448 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.211953194 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.032027617 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.404561194 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.214357126 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.200036247 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.200141693 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213140622 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.410294368 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201143334 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.225534775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.20296475 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850746081 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.207585509 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.230189484 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.833673457 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.207484782 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.089839717 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.216481456 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.199705696 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.490717218 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.456914845 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.23799901 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.198309544 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.202615303 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823411256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.233613257 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.345885345 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.217605778 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.208102428 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.397893032 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612450931 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.202010732 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.786870093 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.200289608 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.407634478 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.202455802 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.50294402 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.641694068 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.201610902 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208598509 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85137404 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835303322 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.84528564 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.203782285 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.456346227 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.166853762 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.653699206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.204371625 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.202161099 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.616797741 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.204816753 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.208969094 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.203406637 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.202771966 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37179067 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.372507394 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.379653689 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.206677755 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.622290007 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.217703925 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200667167 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.202695522 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.201149964 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.55742641 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.294411577 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.201510976 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.238162995 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.193034077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.19180893 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.620173683 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.150673685 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.189875244 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.341328043 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.760100496 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.188612951 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.188576983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.777497664 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.469316643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.649976817 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.232715885 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.453603972 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.196583275 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.223272025 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.855208527 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.254618117 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.659921807 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.190137607 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.190257409 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.725625344 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.189094883 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.545272447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.186809238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.200490184 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664585382 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.190101283 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.195289468 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.406880133 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.188796724 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432398163 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.190420128 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.23833128 seconds)
  done (took 1079.48726679 seconds)
done (took 1341.314145215 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.190941377 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.187728506 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.17826147 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.191610105 seconds)
  done (took 25.877087295 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.203111842 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.197745144 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.200276421 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.197833677 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.201651719 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.198327306 seconds)
  done (took 8.330067314 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.282862164 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.190163008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.192865341 seconds)
  done (took 18.797172405 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.390732681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.326576313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.523421998 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.09196536 seconds)
  done (took 9.464163904 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.20051933 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.200488269 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.202272057 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.203536096 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.205192624 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.206253597 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.202687336 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.204671468 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.207253561 seconds)
  done (took 11.96266734 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.651160276 seconds)
done (took 80.211787093 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.221934852 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.195550767 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.259226827 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.409801565 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.019973134 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.849052502 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.424359463 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.664884403 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.202111365 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.206458074 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.368655653 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.504900127 seconds)
    (13/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.198617575 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.24521434 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.193899441 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.210872876 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.192808268 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.320282732 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.232247609 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.319988679 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.23917671 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.964878766 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.298637656 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.289430816 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.243871058 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.381472154 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.328586758 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.372538351 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.298651292 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.961826689 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.609178467 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.203896316 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.180415847 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.486149569 seconds)
    (35/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.50280619 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.208750155 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.252795405 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.481678606 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.461567063 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.29937555 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.524883195 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.864944957 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.294695734 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.515726549 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 4.270206227 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.18137174 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.286311282 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.011767549 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.541314626 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.196359673 seconds)
    (51/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.306173238 seconds)
    (52/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.86520314 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.307496344 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.245352973 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.53883692 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.465747272 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.004708296 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.209798565 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.556121149 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 5.420171845 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.194488886 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.671428831 seconds)
    (63/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.53382281 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.256302888 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.224609809 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.323243847 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.214183838 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.726717432 seconds)
    (69/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.321871946 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.430115246 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.560161561 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.59404212 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.228230834 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.339458246 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.639483358 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.197285046 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.894709378 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.18000072 seconds)
    (79/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.210810059 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.297391207 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.494697942 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.198077077 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.278043787 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.55657902 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.183481649 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.599269067 seconds)
    (87/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.525763848 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.223860343 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.197708181 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.257990756 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.863991361 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.197534276 seconds)
    (93/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.260342834 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.214930976 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.296098647 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.183309696 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.896580948 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.196067249 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.216497574 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.201020712 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.5256791 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.705811442 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.271815155 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.17719841 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.416452071 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.393981965 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.670565612 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.916485508 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.507397111 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.190281745 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.169730753 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.409739516 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.956292168 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.162153056 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.57889474 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.362341859 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.317173041 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.347743414 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.189470629 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.180043445 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.286660585 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.427455745 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.137885842 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.152827125 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.377607018 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.693376787 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.201619615 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.204611938 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.164622131 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.708280395 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.430492844 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.765735441 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.263940534 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.202243766 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.744192763 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.843359744 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.428393447 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.137374727 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.864088902 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.864364904 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.751598703 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.379110744 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.30829581 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.30450587 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.690387219 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.151552288 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.425475803 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.237693149 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.333801657 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 5.155530625 seconds)
    (151/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.216991479 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.184294296 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.656937048 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.207209205 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.166311772 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.223439653 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.847487017 seconds)
    (158/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.859616942 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.286146068 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.289080984 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.203605554 seconds)
    (162/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.181551991 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.291716924 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.601760122 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.269357721 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.19604199 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.223309218 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.948338024 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.585369393 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.405539251 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.185921014 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.280861379 seconds)
    (173/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.280628853 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.785894359 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.679795713 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.453390362 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.937144355 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.393464253 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.224677986 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.193075506 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.604763674 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.742082333 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.302823553 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.386543284 seconds)
    (185/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.715574603 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.239639071 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.20372968 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.587766225 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.19369319 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.565313281 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.196743891 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.738238812 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.203538107 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.74379115 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.527628934 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.235320153 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.855603773 seconds)
    (198/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.52796405 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.833707122 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.255625315 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.90123216 seconds)
    (202/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.935374514 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.185855089 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.036044916 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.18975232 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.695054778 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.856997038 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.412747523 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.284971224 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.79601504 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.181990975 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.724645972 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.893559548 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.216113719 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.497151976 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.218913547 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.968489682 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.220281932 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.636982208 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.200151692 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.340609304 seconds)
    (222/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.302609645 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.239851317 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.428236026 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.262853229 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.643913414 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.026939269 seconds)
    (228/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.749432329 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.210989147 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.184097857 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.236510169 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.271128163 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.281472436 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.004738146 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.44945793 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.196992186 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.848441003 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.376873011 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.210055126 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.409023209 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.200082378 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.698461148 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.588669828 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.362108029 seconds)
    (245/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.389325138 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.386822152 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.284976648 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.302783661 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.306888857 seconds)
    (250/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.999050242 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.327535739 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.225747145 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.275517071 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.218548693 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.226382983 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.224252132 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.585607322 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.458672094 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.43129768 seconds)
    (260/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.33304407 seconds)
    (261/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.208549705 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.75036932 seconds)
    (263/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.505760165 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.876554217 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.310439524 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.245837619 seconds)
    (267/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.328289071 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.176370574 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.194300833 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.179817974 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.226697855 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.200629291 seconds)
    (273/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.72764019 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.992716309 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.628210123 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.64595717 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.197028944 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.632774487 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.212760856 seconds)
    (280/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.282994672 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.283993004 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.206450618 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.282588241 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.214866239 seconds)
    (285/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.012109573 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.318774884 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.506194235 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.000066069 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.201214569 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.945190315 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.306006211 seconds)
    (292/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.353150943 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.303094799 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.353902336 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.73158498 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.346082648 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.244764512 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.52312882 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.300838801 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.535758363 seconds)
    (301/309) benchmarking ("sort", BigInt, false)...
    done (took 6.213289171 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.238385115 seconds)
    (303/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.266619258 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.32181076 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.225821428 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.22933888 seconds)
    (307/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.337010059 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.286706359 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.203414761 seconds)
  done (took 862.52341278 seconds)
done (took 863.658972324 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.235107967 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.228927097 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.21359494 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.233877354 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.324616823 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.246147812 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.22373077 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.216396407 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.260692684 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.264303848 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.214332692 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.246263988 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.216344152 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.214804417 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.213448624 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.226876744 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.136833639 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.215885133 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.230031526 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.224567946 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.23021576 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.212850552 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.264269608 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.245779293 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.218316599 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.217284621 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.217235832 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.235159749 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.326255884 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.217880857 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.217704087 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.225034264 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.137115866 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.212999912 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.20855896 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.234281992 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.225844528 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.22401082 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.220904483 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.247025183 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.478130797 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.215415135 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.216955315 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.21630761 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.215930387 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.220301155 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.216754141 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.221175886 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.229760514 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.228296566 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.493413389 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.230228724 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.219800143 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.2158959 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.225306607 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.217249463 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.219293916 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.231442444 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.235796823 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.231435222 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140427512 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.220615322 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.217675994 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.231631832 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.222357942 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.538042923 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.211470596 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.221062243 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.488645406 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.221997127 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.537817508 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.223626283 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.218501921 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.231733658 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.24932974 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.144414554 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.211163445 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.215198242 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.224815257 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.21689566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.22660453 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.230358038 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.221702173 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.217880131 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.231552601 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.249357147 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.228783248 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.219304865 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.22756921 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.235748899 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.226179439 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.230349409 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.220923232 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.214597922 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.228351615 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.221460086 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.220117499 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.221386364 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.223192138 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.229423673 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.490430646 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.235019337 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.214860527 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.215602329 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.21785715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.233285742 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.490424391 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.218894752 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.240852249 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.26590736 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.220441582 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.145737186 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.221700981 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.23311658 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.22798303 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.221495423 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.214068743 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.142814366 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.507052155 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.232881895 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.219903048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.216518123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.234697601 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.22123015 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.215164884 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.148379779 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.220829418 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.230806113 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.339839589 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.230439095 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.25084021 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.218423813 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.223326399 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.248277851 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.235285321 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.251799482 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.223378867 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.235755921 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.235436005 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.216501537 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.229320089 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.231526839 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.221144721 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.225723835 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.215210946 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.248931955 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.232176295 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.232196493 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.240773111 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.341620589 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.216945388 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.143676012 seconds)
done (took 205.551772553 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.276898727 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.214844711 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.302112222 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.217330678 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.313043194 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.310563114 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.2139469 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.215599998 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.215386501 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.590223284 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.216108802 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.215137065 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.210462396 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.216709035 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.29861454 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.217047325 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.215115185 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.555328978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.218226973 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.287550971 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.215177094 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.215325776 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.218737893 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.599873412 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.212131876 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.212302935 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.288770624 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.217434019 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.564076272 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.213233294 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.216699773 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.565436467 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.301817241 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.229554927 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.22195859 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.219716496 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.309220002 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.226302201 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.291987896 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.295425393 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.290886447 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.244700652 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.197796622 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.204307876 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.206934094 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.205640872 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.203454194 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.231689824 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.199193328 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.204075028 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.542479506 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.215508886 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.21328373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.204890287 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.204750062 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.225807697 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.20539109 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.206862657 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.296693374 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.206423076 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.2670587 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.645421258 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.580889773 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.20597158 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.204344555 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.204018385 seconds)
  done (took 140.32342412 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.271991441 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.277698088 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.310257073 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.205162743 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.255854949 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.31473731 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.206763681 seconds)
  done (took 9.979486694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.213021143 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.20780362 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.267599261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.265780404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.20661292 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.381342067 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.20781854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.21993493 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.203862368 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.272831844 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.209783262 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.207379134 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.214306169 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.202254818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.266322328 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.218684479 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.323070118 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.208044291 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.205631981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358792569 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.204870061 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.216481543 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.259275505 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.220438746 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.210646867 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.21198772 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803262915 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.208171074 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.206123394 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.20904661 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.204685732 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.244262565 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.208682889 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.206700868 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.207876698 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3443854 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.20891263 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.207695103 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.209384887 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.20942867 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.209907493 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.209769189 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.209925147 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.207421476 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.209282831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.231857631 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.209154386 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.21041072 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.209613011 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.209723499 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.267608106 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.210436354 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.206983482 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.207737484 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.274675359 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.217258148 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.209625583 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.207039338 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.210185965 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.206804698 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360507155 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.266577012 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.209992947 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.267135771 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.209589985 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.211502434 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.210984367 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.209204909 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.269171985 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.211463946 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.268192501 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.20700804 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.399947972 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.232654195 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.212567424 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.21341847 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.213600043 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.212996214 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.204301883 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.216032171 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.20834838 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.212199956 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.218035893 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.209377174 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.208315414 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337262299 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322606818 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.208802763 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.221928015 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.218267224 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.20892875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.274030863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.213222158 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.209651928 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.279273597 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.326602928 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.265065011 seconds)
  done (took 141.287833684 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.217487934 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.218902341 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.213152507 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.228515588 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.212095936 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.211623092 seconds)
  done (took 8.443197763 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.2136894 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.212401061 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.211732694 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.212247501 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.21214939 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.214710692 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.212438343 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.212105263 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.214675055 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.213071992 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.213216299 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.214946112 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.216347278 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.21239426 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.213546997 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.21383068 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.212988265 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.209996142 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.213934492 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.212298586 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.316491361 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.213933458 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.214249073 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.21444793 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.215429217 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.213642712 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.219524511 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.213217288 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.213608905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.220069337 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.215007471 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.215582795 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.213450463 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.217138698 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.217018893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.214008941 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.216938551 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.213576521 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.211225209 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.212132722 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.214726455 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.214218204 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.214918162 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.214811646 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.21474933 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.2172206 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.219811858 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.223049124 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.214896259 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.215993682 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.21600714 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.213762419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.214734524 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.215703978 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.215669139 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.21737892 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.218835662 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.213827747 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.214182816 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.215427196 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.213058199 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.215110443 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.214861244 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.217050657 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.211276628 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.214285987 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.214129281 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.216912937 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.214685639 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.214623592 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.215981871 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.212958714 seconds)
  done (took 89.703154913 seconds)
done (took 390.886456834 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.432873263 seconds)
  done (took 7.577032852 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.429211117 seconds)
  done (took 7.57650525 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.737823258 seconds)
  done (took 19.895576496 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.213061276 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.29697989 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.223261131 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.206882771 seconds)
  done (took 26.085436477 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.364598265 seconds)
  done (took 7.509272656 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.21292751 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.211597508 seconds)
  done (took 13.577908756 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.437523965 seconds)
  done (took 7.588805417 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.661875683 seconds)
  done (took 7.823732729 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.236704536 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.215580074 seconds)
  done (took 13.851163389 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.204372133 seconds)
  done (took 7.357437178 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.856527905 seconds)
  done (took 8.010313029 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.216116795 seconds)
  done (took 7.369418568 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.285089763 seconds)
  done (took 7.437063949 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.562549714 seconds)
  done (took 8.715311691 seconds)
done (took 151.52124498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.214426004 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.215166879 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.216308023 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.21329337 seconds)
  done (took 26.009864256 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.255797089 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.254947461 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.256130498 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.267262789 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.258854113 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.255083414 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.247587855 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.248498289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.267548917 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.260137772 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.258148143 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.258059223 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.255701766 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.248984386 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.259098578 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.258408885 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.268213461 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.257544275 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.24788739 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.259401283 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.223832718 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.268118025 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.260077252 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.223892826 seconds)
  done (took 31.274022508 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.41674782 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.292134438 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.375385953 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.274574 seconds)
  done (took 6.512696165 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.276131005 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.277741493 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.288898859 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.327216602 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.3622522 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.286198709 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.246376146 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.245719332 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.231080288 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.27679107 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.353627408 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.29444357 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.36912938 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.223874001 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.423515821 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.225709434 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.223312337 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.277289777 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.327878028 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.339803893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.224208046 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.276697421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.280680679 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.294201041 seconds)
  done (took 32.107912458 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.223038013 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.231614804 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.229284745 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.223257445 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.223525352 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.22418214 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.230216362 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.224800135 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.24583386 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.225085339 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.223626305 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.223819134 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.223450109 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.224799327 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.224274839 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.237263205 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.237531467 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.224292471 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.227068543 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.23147706 seconds)
  done (took 25.713611184 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.217481627 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.070136312 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.569791358 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.471919666 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.217552626 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.216986528 seconds)
  done (took 26.919832461 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.283073614 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.408785725 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.223573646 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.53550188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.611775357 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.225689836 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.225327844 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.43996328 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.703905466 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.696743049 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.271705192 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.283341691 seconds)
  done (took 18.06594378 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.219101967 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.218942221 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.22865955 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.235191995 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.269859093 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.227834653 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.230911934 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.219389269 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.272939009 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.275748568 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.228480529 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.273755548 seconds)
  done (took 36.05751737 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.308119383 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26599134 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.084828407 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928869868 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.939991749 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.43032565 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.957154047 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624963612 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.226943042 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495339355 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.843051997 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321151047 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.476487224 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.220796271 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.222690437 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.079563578 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445070991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676065523 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223891948 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851837962 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.246549904 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.233707907 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.924854559 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.246080127 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.434109774 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.199935319 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.482546753 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.998201969 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478867943 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.234956224 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233652144 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.221911047 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498058815 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85366932 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318939165 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233251104 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.891990522 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.852340058 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.217779862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.870098595 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.613695281 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.225261933 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235153693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223308378 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.157546244 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.224244456 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632892253 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.230064058 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.934575996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.223201906 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.233762543 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318254748 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.226670221 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.213696527 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248819685 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227003138 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.222786189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.230695922 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79713348 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.313024188 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.645206778 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.158380091 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.571612937 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.943161669 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790221019 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.325526486 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.227368491 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.227213428 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157650903 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.917903494 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.24034905 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373784158 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.250035649 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.871887206 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862895052 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.868307284 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.166115853 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746629266 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.230210566 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.15935399 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452357553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001138651 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16031042 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.171006462 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.160823734 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859092903 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235288013 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.563414882 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.232869662 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627651343 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.23791499 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243777301 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24821597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.449647801 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.111883062 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226474657 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.632192831 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364661202 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.245620668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629886465 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162401448 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.226140392 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481196393 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.437530745 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.231504852 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.089074829 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404720159 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227771463 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.240500288 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.237781173 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.236533772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.743489673 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237664192 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.3212609 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243440555 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.006212522 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901910439 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228563703 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.326374909 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.868431645 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46337039 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.919826927 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109386758 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295556478 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230640467 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.228386383 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.975607724 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078383397 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.110113209 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.227932042 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.233517213 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.238145686 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.227986673 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178268032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.22054725 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895379668 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.008851123 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.451598935 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234559009 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502833176 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16259075 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377448997 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236170761 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.44910557 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.331912526 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.225320643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487723596 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236770076 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.235290875 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.239386278 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247260539 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326016083 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24969084 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.22876169 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.496428906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.232261593 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.231725566 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.976788631 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004974211 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.232731053 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.233927771 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046362312 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749915772 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208080696 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.237432194 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115643217 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.242192328 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.29557731 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.235785887 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.239763788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.856762123 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002577643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.234434459 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.225880285 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453646445 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.239115888 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.880508758 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306563482 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.404585698 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756364261 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.243435478 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.163716212 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.941860855 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.921804386 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231528054 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.428357174 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.231273353 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.238793311 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.240952049 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.724979614 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752204361 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231418514 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.882160587 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.236580101 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.240921245 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.235546663 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230610626 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.830811838 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.337823454 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.245968973 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.240550407 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374173603 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.24419128 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.166099564 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.747360645 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.235871904 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.230678467 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.006106489 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266659823 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.890565541 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717954441 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491331721 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.886990649 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.242228037 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.039788922 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.259996603 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.230279501 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.676194274 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249330584 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.242767536 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.240067478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.243294864 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.946901793 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.672340353 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798508137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889713351 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703081422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039251254 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.245126575 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.113314104 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643703069 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167882995 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.889493561 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399561137 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642732106 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179770242 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408078674 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.337508287 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923305719 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.241851901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459187001 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037825195 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.671331595 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.256417221 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.444636348 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267347984 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.232655459 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.162694011 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.515846435 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445632597 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.642408081 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315042315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639101888 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.676827434 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.021928748 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.23268192 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.539357535 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387178277 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.779306844 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619481117 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.235210564 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.906921838 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710010831 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.240883928 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.758496895 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807149116 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.248580121 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.409949261 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171049459 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.245092823 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.244453306 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.235036221 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.353070587 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.182766127 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.501183236 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.242876383 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169673014 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.24310866 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70710605 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.089803376 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.240763111 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.23541728 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908426472 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.248852089 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491492522 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.247384186 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.82345383 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.239659448 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.169286136 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168240967 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.928772997 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.236984509 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211146556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695829056 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.563693103 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211640637 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260356169 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082973311 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.491522567 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.249502593 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.765282581 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462254024 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.997974989 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259237539 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.336762369 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.713599624 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.235603607 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.131243931 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472942512 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049831806 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.459025888 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.123304754 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.142274845 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.23681056 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.448864524 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.131694507 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.925005005 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473529452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.946915233 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.237878409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88528464 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264145228 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.921886182 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260809918 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.582585592 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.24458897 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307708563 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.247518505 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.2478262 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.248708779 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389346385 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932233305 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.25112824 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.251707728 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332260756 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.367432301 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.848045756 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.008300334 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772498291 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912976015 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766771485 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250199114 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.237834983 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247955357 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173099044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385522744 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.763075031 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5118811 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368846646 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.647904692 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26133658 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.731531059 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.251395011 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450409985 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512716671 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109352988 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243282917 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89658034 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.140490994 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.248287443 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.450175092 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705147493 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.767718015 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358999055 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.240873183 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647932175 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514828563 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330535342 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.239676407 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.828668493 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.248841944 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557649248 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.245779164 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96447993 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387616559 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.248955751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879871112 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.250199185 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.39986271 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.013875226 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.998007492 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.49704334 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66221166 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.25078566 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773052857 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.876267724 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.504987539 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.309905493 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.249379967 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.343966959 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384952304 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.230824834 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.1498526 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.241437326 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084798916 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.950100971 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.249888878 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770875553 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50474214 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.237566907 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.231891865 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275355903 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.251361586 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.465681028 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889420365 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466503681 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.250880245 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.242433538 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.231549567 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770824452 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2540904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175973192 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.242253542 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464572324 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.479421605 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267861655 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.694534531 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.951676124 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766993539 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.210980712 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263554212 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242711443 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878739252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771095151 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.841341929 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70720114 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899894068 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.250181715 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516090169 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.247924443 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.243633088 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.518097769 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.245722243 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.246754045 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.253089588 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.775040999 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939814715 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.25195343 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928217236 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.180062558 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.468206025 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848395263 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180690048 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250252166 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.410954119 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.243584857 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373513571 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.252389627 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.24425767 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256162628 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.975859138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524692285 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.247572653 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.245275718 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.783214418 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.252496608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250159593 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458154883 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.248076665 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.917103849 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.592929026 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.499251682 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.255909849 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.228250733 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.248289521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.244712816 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962128991 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212225313 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.724087617 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772845606 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.244035554 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.254758976 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.248393325 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.461079777 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455919347 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.962663964 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267671569 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.246800437 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.258451061 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.153002086 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.012864238 seconds)
  done (took 1517.258791504 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.252914123 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.269997904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.273247192 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.307201064 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.291276192 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.275151765 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.275051982 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.272526719 seconds)
  done (took 51.397273232 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.246800634 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.399391517 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.273015879 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.245972115 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.253761994 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.247029474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.665461384 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.255003823 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.251154149 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.254616464 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.246338232 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.243166502 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.842415878 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.255161941 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.255502162 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.241623883 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.253552337 seconds)
  done (took 63.618087705 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.247762327 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.379464657 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.32937538 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.250058384 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.831151393 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.256481956 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.33840683 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.272864562 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.247228849 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.503096201 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.903003116 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.273127819 seconds)
  done (took 82.015293988 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.253838242 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.253723328 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.254210873 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.252732767 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.252752812 seconds)
  done (took 7.448276432 seconds)
done (took 1925.55357462 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.49037375 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.847125749 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.80101524 seconds)
  done (took 4.829834421 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.393472675 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.442748021 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.562030691 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.569865988 seconds)
  done (took 7.150214861 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.535419033 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.630402465 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.438634724 seconds)
  done (took 5.786172072 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.513674439 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.250059936 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.363996641 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.246633827 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.249628448 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.245182101 seconds)
  done (took 19.924610548 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.251842932 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.254759033 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.251948595 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.254313053 seconds)
  done (took 6.19514312 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.232223742 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.94286608 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.233099638 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.249087128 seconds)
  done (took 17.838422812 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.998358791 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.008616255 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.995842909 seconds)
  done (took 7.186762284 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.250500076 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.086253332 seconds)
  done (took 9.519245237 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.541415765 seconds)
  done (took 2.723076402 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.383203016 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.576496458 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.219622585 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.163784182 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.219760177 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.641227406 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.691133525 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.32167203 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.169524685 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.161920865 seconds)
  done (took 25.731806629 seconds)
done (took 119.686634377 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.745385944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.488605069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.447400591 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.715048134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.47356595 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446295857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.466472423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.682720979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.225509882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.215026616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.71532836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.473771143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.414732231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.493764846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.414793917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.487986172 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.483554556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.791744616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.400042763 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.595394195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.466723772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.352808088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.547526943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.373369903 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.476537187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400989735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.930300482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.486189063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.573659383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.96403376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.396765109 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.775634152 seconds)
  done (took 186.10582443 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.249697161 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.252675459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.246793171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.257843227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.246571203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.252346625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.2580961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.258322525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.246651663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.250657626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.260598817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.24812673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.257396046 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.252793461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.248110717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.246531942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.246773758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.250380638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.247797157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.246186444 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.250990776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.276874697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.247536511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.259310454 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.251646172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.246089514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.253778102 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.247510925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.246408268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.26368526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.249446627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.262787649 seconds)
  done (took 201.266927535 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.25062282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.248333943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.25973257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.248900221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.257287567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.249210462 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.26268092 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.266416179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.258549587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.248629876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.248388649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.247026129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.249655706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.251128788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.247528959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.251882446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.247614969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.253661643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.248876055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.25495041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.250899189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.25002799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.269790926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.259578176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.250990973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.262153015 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.260457343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.249868986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.249228754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.261719586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.251392096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.263774988 seconds)
  done (took 201.318476164 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.445822683 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.259608515 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.260994381 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.197369647 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.260717633 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.258619718 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.256150959 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.456018368 seconds)
  done (took 13.58248695 seconds)
done (took 603.45854696 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.449461448 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.170183304 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.451878823 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.283727368 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.969742607 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.281376637 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.280812518 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.433794449 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.154494783 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.432057173 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.462675619 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.278132707 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.601586951 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.277246095 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.514516961 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.365898549 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.094532957 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.207472894 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.579500494 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.740039311 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.525010387 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.668165445 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.43426318 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.167460141 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.583138921 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.674813956 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.916921526 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.092099351 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.278799095 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.576327148 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.800735861 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.17863518 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.329299608 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.313525181 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.368047435 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.35098279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.142665073 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.312152829 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.453441908 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.456488846 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.742796632 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.98682588 seconds)
  done (took 86.569371823 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.248082749 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.248804013 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.247946896 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.249849571 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.24959321 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.249341314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.249627896 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.24723599 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.250882336 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.249346553 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.249057777 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.250857033 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.249221093 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.250777896 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.249624603 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.250425825 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.250880993 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.252706754 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.249655474 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.249082561 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.24934272 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.248820201 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.248816774 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.248811582 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.249381815 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.250461788 seconds)
  done (took 33.680440909 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.262737109 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.502425066 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.65932694 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.269262025 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.263501593 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.267519702 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.332261294 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.263706761 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.266788948 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.264369912 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.4093121 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.266724012 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.296072781 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.687698679 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.265443775 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.26297031 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.263484531 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.263513449 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.513140099 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.272334252 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.351390874 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.264998134 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.333013023 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.273366818 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.282288952 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.265038455 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.268835041 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.77249896 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.265042929 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.408662376 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.945960679 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.329556246 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.734898558 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.679079384 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.947702305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.265481002 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.263566041 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41119794 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.266501719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.264514108 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.33331801 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.266167747 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.667486421 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.870929779 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.277558956 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.26480142 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.793910116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.413551943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.480642238 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.27123354 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.695166281 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.269017337 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.266822202 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.266045653 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.480510354 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.272504876 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.265015102 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.785424735 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.282818658 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.335409485 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.266626449 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.26686241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.514655816 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.264732393 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.507497652 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.267517508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.27424125 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.267689463 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.664390466 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.266719542 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.890278861 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.279618862 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.266472334 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.410345132 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.506977877 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.829387414 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.269757015 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.520487447 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.743136926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.333482096 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.269722924 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.768636309 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.339834537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.270737165 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.270537182 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.269224265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.267479639 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.314361493 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.333103428 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.820808293 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.880033758 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.804442079 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.350065125 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.280619493 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.26756168 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.79233375 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.282076894 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.268181587 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.663807569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.8893906 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.279943394 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.274258141 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.87945046 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.28305502 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.336620481 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.273462798 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.679627186 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.268933062 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.315826804 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.268341817 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.275912278 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.272526492 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.337484009 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.272727204 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.269235063 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.864447073 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.431251772 seconds)
  done (took 166.797302572 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.270925537 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.260176356 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.270038688 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.259280321 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.261759067 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.267579774 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.262097073 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.259724208 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.266511755 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.260690299 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.261093702 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.26010811 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.265551447 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.269828972 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.269917879 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.270592018 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.874833294 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.263843982 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.260801635 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.259092584 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.033229948 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.263773485 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.26089763 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.259910897 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.264120601 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.263782945 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.274618368 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.263221029 seconds)
  done (took 149.976115775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.271356449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.775791728 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.271560244 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.385116722 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.288979531 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.269231836 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.382895216 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.320048553 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.271066358 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.268927128 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.26910391 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.540617532 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.273722017 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.730872351 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.435310648 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.385946895 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.72783256 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.270145975 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.268724257 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.269050585 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.386435278 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.275351368 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.544233758 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.777394281 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.269561764 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.777952835 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.259986612 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.270913283 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.269951743 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.779793299 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.270460097 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.542897103 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.338555003 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.323517911 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.779771777 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.732495293 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.733852324 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.39752941 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.270283784 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.2700518 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.270254329 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.259428635 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.780070208 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.273900958 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.272371513 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.773602381 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.28514513 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.274257434 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.281237039 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.268665376 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.324131454 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.325949633 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.548341477 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.784930993 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.339789599 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.292301547 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.387253763 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.627844284 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.276183219 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.733338665 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.261058997 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.781508568 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.274326856 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.260707749 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.274299639 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.278953194 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.403201033 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.388767647 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.737106557 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.272244517 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.734808811 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.404078734 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.272504263 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.272728313 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.27531117 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.785622425 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.738932534 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.40427409 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.391675744 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.441240318 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.260974469 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.271888582 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.261846304 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.340779711 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.272508161 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.787701604 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.738027104 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.27490764 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.274233392 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.275677755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.275886399 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.427577663 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.789791333 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.341990626 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.730988943 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.561732217 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.550017473 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.274134227 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.327366673 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.276108269 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.550652374 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.276163053 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.324723506 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.690191271 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.552681076 seconds)
  done (took 150.889923404 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.500637303 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.377765249 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.356536125 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.382655088 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.842333451 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.832159319 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.526836348 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.387002126 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.37278266 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.502497589 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.347998842 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.362381088 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.434996037 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.346090658 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.980189173 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.340596805 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.35981092 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.395356947 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.364303236 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.250357792 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.883751799 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.545582042 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.449433027 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.164125212 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.360745215 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.989953715 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.799079059 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.794709743 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.431137806 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.483088394 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.780095406 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.332962886 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.208400242 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.891483475 seconds)
  done (took 61.580515386 seconds)
done (took 650.683285391 seconds)
SAVING RESULT...
DONE!
