cset: moving following pidspec: 23334
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352802523 seconds)
loading group "string"... done (took 0.597140666 seconds)
loading group "linalg"... done (took 7.345066308 seconds)
loading group "parallel"... done (took 0.169836005 seconds)
loading group "find"... done (took 1.183219774 seconds)
loading group "tuple"... done (took 2.061992041 seconds)
loading group "dates"... done (took 1.292739418 seconds)
loading group "micro"... done (took 0.241471618 seconds)
loading group "io"... done (took 0.996710707 seconds)
loading group "scalar"... done (took 40.817226292 seconds)
loading group "sparse"... done (took 13.299953225 seconds)
loading group "broadcast"... done (took 1.048319232 seconds)
loading group "union"... done (took 14.397095186 seconds)
loading group "simd"... done (took 4.94450771 seconds)
loading group "random"... done (took 9.948130089 seconds)
loading group "problem"... done (took 2.032990323 seconds)
loading group "array"... done (took 22.50531537 seconds)
loading group "misc"... done (took 2.045523655 seconds)
loading group "sort"... done (took 3.398876577 seconds)
loading group "collection"... done (took 19.274204216 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.554333226 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145649761 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119089975 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141796222 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185403035 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133389656 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143959931 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085663711 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.924601274 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162576191 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141000658 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513237313 seconds)
done (took 4.972365951 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.196846608 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08932832 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097289052 seconds)
  done (took 0.855278971 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067351607 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12924088 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080274166 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068049511 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066920897 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081660588 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067851462 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067006245 seconds)
  done (took 1.237229463 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074904483 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069134084 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084751304 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06890469 seconds)
  done (took 0.975932234 seconds)
done (took 4.012948771 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.932797591 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.253071407 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191716814 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463821805 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152565551 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188359143 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667800691 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35907652 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21720404 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102164197 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106054617 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387816899 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109063598 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668866862 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078919166 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107859115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169332332 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441559235 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081257504 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083334605 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103747439 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140940023 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101229103 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07806996 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.17064255 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069560012 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.152954767 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096464132 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068194377 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.247736986 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189886887 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.725668816 seconds)
  done (took 10.624198612 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099280222 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120569769 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069624267 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141921574 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119033154 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071774386 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072358943 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084077962 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093461935 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161185194 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115983546 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123058332 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067019721 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070278449 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103510195 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228603585 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.091653524 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101219968 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072114113 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07487336 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12366585 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096789453 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081927412 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094308128 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151694613 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193681895 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098003449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112433843 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069536701 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09793823 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130132904 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131488855 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066162513 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083355466 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.15720034 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096394077 seconds)
  done (took 4.552916941 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.091422541 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178026779 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093983471 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155381383 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085667671 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128646019 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067271338 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101146712 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251715448 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.099600815 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.116340756 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487210356 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116720085 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102704734 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068707136 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085412068 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068809193 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.588935355 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.114854314 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141539964 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10399893 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078223255 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090322633 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.721534682 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071223026 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068713614 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08726728 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062279757 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149279664 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069820174 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.24761762 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108298233 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06952859 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119599524 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177167848 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096942153 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124363333 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082926247 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066693568 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17103113 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073700362 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08444671 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090003134 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122041174 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121795763 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083758085 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068157658 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184300644 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066983907 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101107142 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.936301749 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167201409 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078411942 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067606362 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296597451 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102575738 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070075417 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066052405 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270092819 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159746896 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067818309 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086289176 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068914331 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086175451 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.730220391 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070697862 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732661097 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072773681 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079538647 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111788956 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086461463 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070345275 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076255371 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093030666 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087999116 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084937913 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.072165086 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068414776 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085040824 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071661473 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105613201 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212008674 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068954484 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089587955 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067449167 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104444326 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101153552 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088433731 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068926595 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117653316 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067477008 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070730092 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08652701 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107357932 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087041129 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089776582 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087641854 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081454476 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117045613 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085051688 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134117146 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06860707 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115825482 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075059044 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116383034 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100400223 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069818057 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156711449 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066357618 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083924007 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069667901 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083532164 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071634633 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070281821 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.102629741 seconds)
  done (took 22.063341868 seconds)
done (took 39.006527042 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317130538 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095069273 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09234352 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075632212 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093789621 seconds)
  done (took 1.426332217 seconds)
done (took 2.146971528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152446014 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103934637 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081294475 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097694095 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080705752 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103561867 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116898001 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081972644 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117574419 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064679866 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113292549 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06437385 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079498639 seconds)
  done (took 2.009934939 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083137789 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086853154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086810879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083099249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080963415 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084135055 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08179602 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107362153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081726273 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089556629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066566087 seconds)
  done (took 1.649502597 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081384041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085445031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086921258 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082961147 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080777574 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083077062 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081665232 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104395113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082382727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09045818 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066447347 seconds)
  done (took 1.647532848 seconds)
done (took 6.021298809 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079352892 seconds)
  done (took 0.794872986 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.728849469 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.550539003 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085124466 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137020456 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.228247233 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158335179 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.435859296 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11319108 seconds)
  done (took 10.362303516 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102630338 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101862449 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075353539 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087700632 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072142182 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09075779 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074507225 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071157176 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089069958 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07489279 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090252924 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072726709 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089573419 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072257542 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087965521 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072740633 seconds)
  done (took 2.112027986 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.108133754 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106025687 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093016973 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078610339 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09254182 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075557352 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096003721 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078033756 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089838546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07552742 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094303485 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078013158 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090958153 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069284255 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093349553 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080706774 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089341643 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077621264 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0939573 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079106034 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09456656 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068370659 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091372568 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078168573 seconds)
  done (took 2.909357749 seconds)
done (took 16.897853687 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13429872 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07757205 seconds)
  done (took 0.934597356 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083934838 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098747965 seconds)
  done (took 0.91408202 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084694711 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081668234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090644657 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094608881 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082860114 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067750882 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106655865 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070243886 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084589209 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069530822 seconds)
  done (took 1.564543325 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070200538 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094761984 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071888192 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100025871 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077406812 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083587764 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077203039 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086692308 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083139033 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081472565 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074462727 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101959522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074136234 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103138254 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092699534 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071029396 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089568569 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070790616 seconds)
  done (took 2.236879922 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066728239 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068502426 seconds)
  done (took 0.86911846 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068450141 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065095041 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084907076 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069660447 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082197304 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065835591 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081887662 seconds)
  done (took 1.250757414 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.41881728 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113258434 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.271953522 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074633099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106909824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.297998778 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068738283 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073308323 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090009316 seconds)
  done (took 2.289132495 seconds)
done (took 10.786405065 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081402528 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08701758 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115120943 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.440861797 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106935353 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068275712 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147302428 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.215674879 seconds)
done (took 1.995454694 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127670937 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.625593351 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413542558 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222533808 seconds)
  done (took 2.00032214 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.386259152 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093834945 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075872488 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069872504 seconds)
  done (took 1.367866052 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067007842 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071629507 seconds)
  done (took 0.877468337 seconds)
done (took 5.109655274 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068060693 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.116916124 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068992457 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066843112 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085932511 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067096201 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066331453 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085841182 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068895173 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084856497 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.0679565 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068860203 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084346742 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067020595 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067600664 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084640396 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069076182 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066642095 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082791051 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067376554 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084147327 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066379045 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06686685 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082473079 seconds)
  done (took 2.580137037 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086999463 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083631712 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074023169 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089541954 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072849738 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090273997 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077517536 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069121596 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090535748 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072166342 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089136904 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073383589 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087416731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074810391 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086955374 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073342316 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090972691 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07019997 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071445578 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090371994 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074606807 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086426565 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0736373 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090500902 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073822628 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089741052 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071700799 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085674357 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075155059 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088973774 seconds)
  done (took 3.162969116 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07203761 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065239779 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080949562 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072478108 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064828795 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082655059 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065810002 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080711577 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066276833 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065511336 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082763103 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066096221 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066640728 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084139908 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067781342 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086387626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084082189 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067068025 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08291378 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067729622 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086182109 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067046662 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066328309 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082810127 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066818081 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066256586 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082913498 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066668516 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082954931 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067304685 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069795596 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086041982 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066315054 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073104297 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086674398 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066101198 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071241679 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082754727 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067105671 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082051923 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06616514 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066627707 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082087225 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073771635 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066956922 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084799754 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067006543 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085026627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067882934 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070142759 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08309185 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06678326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084400598 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069618982 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070996282 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08239088 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067492473 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065824009 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083714199 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066772328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082064906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066940404 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06890537 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083194018 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082425154 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088639625 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066904597 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06886759 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084153943 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069608737 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068477368 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097668905 seconds)
  done (took 6.10032881 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119718193 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093509964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083218819 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067783522 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079861966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065759049 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070344807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083019524 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069005548 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089235639 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067575542 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083930606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068968428 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082444797 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083565149 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069474977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08894167 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065634144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067938922 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086519868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0676768 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08630339 seconds)
  done (took 2.491354724 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190209639 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087382773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112212363 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091259738 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08509033 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075522686 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087818372 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072402243 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073668286 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087094851 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071858529 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089355274 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071032594 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087632023 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071311544 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08762402 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072728568 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088701827 seconds)
  done (took 2.347779617 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079439119 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067666306 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107441659 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067395701 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084162106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070605238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089280232 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075926688 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086303021 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068362444 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092532269 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179962812 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085247384 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068295222 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069566427 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084540476 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070525512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083821273 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076895769 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089157012 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073071253 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092034216 seconds)
  done (took 2.608444265 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08158001 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070009143 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101953662 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086719572 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064164723 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066522211 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091351729 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069847891 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090957018 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070205664 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084993665 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069382411 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074318902 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085181995 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074986556 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084609785 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071441911 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086826905 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071658833 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06581278 seconds)
  done (took 2.310419538 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090115581 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08456015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069716105 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094797052 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069934291 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085795182 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078567904 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086210801 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071141362 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110603063 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070988987 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086454928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080532491 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091833996 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07180647 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095894936 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079544224 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094736732 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086308098 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07055634 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110952738 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0711592 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093918329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070793847 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085700846 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070567171 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086264475 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075013937 seconds)
  done (took 3.087285232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068273205 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068489903 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081624939 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065886611 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065892137 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082476969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065234642 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066747236 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085087137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065296003 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084245291 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067592049 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068798311 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083725456 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068632956 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067542696 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083872431 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065442112 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065392271 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081693156 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068013761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083269003 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068190691 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065136229 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082160068 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068052591 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065216555 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081573 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068125934 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065200033 seconds)
  done (took 2.921281653 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078428076 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091398874 seconds)
  done (took 0.92476787 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065219719 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081895237 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081365782 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07243992 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088073231 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068386108 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092389177 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072464683 seconds)
  done (took 1.374176495 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083742784 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080040536 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085598815 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.095773854 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079393512 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085891546 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159408817 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085267008 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075011157 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082135708 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081669362 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067093709 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09073301 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068012764 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090548839 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074071369 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081057311 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074521037 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069845095 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08236591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069689536 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095480059 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071132345 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080975001 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069311515 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077300049 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097129222 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06841842 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088202762 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076227333 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090399071 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063620906 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069650842 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085895065 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066756489 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095130625 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086498471 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088946932 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079845065 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086138386 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080053443 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080455763 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074868728 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091706347 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080452495 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070586126 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086892866 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064789468 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083359213 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07217174 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06547464 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084989522 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064742332 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092248702 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072833594 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079845608 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083754546 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069740038 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087653153 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073005936 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092821586 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071572428 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072525082 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085110559 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077058057 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089644764 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08028197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080659128 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064140083 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068178782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095824914 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092692886 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091228734 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069546739 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086498105 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066322698 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072420069 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086080367 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076683133 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09198988 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069810287 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090631566 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076628289 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085194374 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071149243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077731038 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082640985 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070206337 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082284404 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085562232 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08344803 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066059893 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066086195 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095403176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071573984 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085221653 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067059294 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092466585 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063210837 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070375411 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086329202 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070520969 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096573561 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073646708 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089856506 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077424949 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092470851 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068752267 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072449473 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082745031 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070215266 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084913971 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076400817 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063267043 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087571131 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070977659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086440392 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079640902 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084115903 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069665088 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077266164 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090739811 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067215522 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081300195 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07147154 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068147935 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087951782 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076005099 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083459684 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063994994 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079537347 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071647441 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068173691 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088562743 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073388876 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08826745 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063326011 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082718699 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073691487 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09454075 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068064837 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069383734 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09195783 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069825647 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083449447 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074990004 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070669139 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083766794 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074161601 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085078896 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064057882 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086936779 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070929785 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067491325 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088811802 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071348799 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086817853 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069574178 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066858174 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089990387 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069301618 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083795334 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069186959 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082720229 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079371072 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070223642 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080166245 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066234382 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091779604 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066450631 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067757461 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084113631 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071230455 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085370567 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067046288 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084615165 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070211963 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0807435 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089899446 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069819348 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089760915 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080101434 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084537578 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070945754 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08417992 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069449351 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070094676 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094597011 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073346284 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09020176 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070419399 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080478254 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073907759 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075649046 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083849884 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065984754 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08414608 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073051363 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090662157 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072599554 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069049206 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083106339 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068627058 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087916254 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07134759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067725963 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08420868 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072960872 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084164546 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075099863 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085967721 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078831346 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087211611 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06377382 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071823276 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082985585 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074289531 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080606636 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066103912 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067502919 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086350931 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067502242 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087920635 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062788473 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075865232 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092834009 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068193175 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084183702 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069324928 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091989309 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069361022 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07262117 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088180146 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074161996 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095170113 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067778041 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087932529 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079566233 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067597354 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078540907 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074011964 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083072545 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068320058 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066376461 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082838851 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071895073 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093897485 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076036899 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079375769 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071367948 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066478909 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083346394 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064583306 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089459054 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070843093 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068829448 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091623044 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069929944 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085112371 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072545947 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085481897 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069390865 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068695485 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088513676 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06850532 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087304374 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068054151 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087800295 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067991473 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065538782 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086874758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068911061 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067779103 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09069316 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067430817 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085154281 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071311237 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084845511 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069164751 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069118836 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084709817 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071808218 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085648063 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068358439 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071133415 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079650024 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076062436 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084329974 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076877346 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068568826 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082337128 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07402341 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087207636 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073216695 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085361858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069430549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069187652 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085540842 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072011691 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09120318 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066833339 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095892271 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077518893 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085814344 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071146617 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069330852 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087016253 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067973202 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068760195 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085737501 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068849248 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084577097 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073838503 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087359421 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068406904 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070013684 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086018821 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068437351 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086077751 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063460752 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067316895 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084375807 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069013924 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095997317 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069268858 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084404348 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067300169 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0692813 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083982244 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065345923 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092554059 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077537626 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085232249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076006992 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067494582 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087514795 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079208228 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082590682 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066612711 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082868018 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06643414 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076315448 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085977992 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07932821 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085142263 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068686565 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066346604 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087516849 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067447019 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07908323 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066173034 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072405397 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085167707 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067979977 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085300488 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07200073 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069707051 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096121745 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067405321 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086813381 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069722898 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081953846 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067603955 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067782621 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088012481 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069862043 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066428727 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082671383 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068516208 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086257963 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06968423 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067788364 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086848685 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075495453 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085123078 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07202504 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087888448 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064026592 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071229145 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084947196 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068331124 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083767567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072371466 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071259276 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086786958 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077515068 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084968258 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069318045 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084784621 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066412946 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06863197 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085352671 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068743932 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084372499 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070348659 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076253504 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083532159 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071483089 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084893968 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069521211 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092634369 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069825748 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071054428 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093270218 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069233993 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086968338 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076472845 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088833115 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072866639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068778303 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087045301 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074321397 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084556636 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075127744 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085237362 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069374355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069737707 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083059845 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067794473 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084783884 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068065597 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074175602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086826153 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067967332 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083660529 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067034727 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068600688 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089076884 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07601238 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08762945 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072156915 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07980337 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065633674 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069780879 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082999011 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070719778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088275574 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074037966 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070062043 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086254641 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067442725 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09504231 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075241756 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089211416 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066247151 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072558374 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086076889 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070741132 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08648479 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069773638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069012715 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089182421 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070658584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085232618 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076323827 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071019122 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087538009 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069072227 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085808519 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069075548 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063803089 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086746878 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070823631 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090545668 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071468274 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085603543 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0800666 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065472426 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086385257 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072177087 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085248782 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073462112 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080387444 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070290786 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069494548 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086909961 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063804535 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084555197 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066401861 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07048226 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085860742 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064429306 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096251346 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07833684 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089401403 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068024666 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067773203 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082202833 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065070572 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068632578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088623661 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071546707 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098053028 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070764955 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086451298 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06609496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069419353 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090032444 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073607892 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084555367 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065291572 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06828371 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089369945 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076205267 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085541812 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069765609 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073455183 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089882286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06921154 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089954373 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066726743 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073024631 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100787548 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069330664 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087108851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075537712 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09400416 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069096118 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080243827 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069353235 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071278977 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086756448 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070093897 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087022342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084597228 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088927307 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068064065 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066490659 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088339385 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068332052 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09363373 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069727946 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086753785 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074487433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070610666 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094561708 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070857077 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094394416 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071317878 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089154927 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067674497 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08546608 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066901397 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067564875 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087329824 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069291009 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089928464 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076777125 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084733963 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079445546 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094478293 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07042085 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065236913 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085256827 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068582849 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064145481 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088900971 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067267848 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084134085 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066810668 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066896136 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087666373 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074001343 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086758128 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069787939 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067919533 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08070704 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070624562 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089213556 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069463522 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064739201 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085515848 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069089394 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089124134 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072901025 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065372598 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087739336 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069610503 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086108861 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064358662 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076012869 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085881865 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071682093 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086065379 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068751737 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068895121 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090513538 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072689849 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087517709 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071570754 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094518007 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071250711 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08257209 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066052227 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074296047 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08567691 seconds)
  done (took 47.13616466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11034592 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082795639 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063943561 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081951181 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077252408 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083880645 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065681128 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065640935 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084916462 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068497279 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083821475 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066257598 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092655541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089863332 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096568539 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086936621 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065760538 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066630961 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083846795 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066911024 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092827221 seconds)
  done (took 2.473469747 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.087833784 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.101602174 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079000817 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100893511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091767375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079452824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096887513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079587866 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100650964 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092693451 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082943258 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097671504 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076760028 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09325599 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074993174 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095350972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100500376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074670421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097793821 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07927977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094789031 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079235417 seconds)
  done (took 2.753666937 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068846039 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067755897 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087087828 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063585277 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067139217 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081054636 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071866482 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083700091 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071891088 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066468327 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0851606 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067517678 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094952084 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066925378 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067276226 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083332283 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133644568 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071843391 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085748983 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069661872 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063438973 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088176524 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064450227 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081612509 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067169532 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071913165 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086653854 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066653145 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084699967 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067780783 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067700884 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083761813 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070025295 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067219678 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084589892 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067496592 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085229145 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068081805 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062868005 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083899986 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068842191 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081010075 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069066243 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068842938 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083251017 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066168426 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068497301 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085404307 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063138989 seconds)
  done (took 4.494493649 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086789386 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.141369247 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089957164 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125940864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085267117 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095803257 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072333897 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125043651 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.08616974 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067680404 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104257544 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08404249 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087307601 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072939285 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.08944785 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068189098 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086672156 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067424462 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08957035 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068410768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089409522 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075371878 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100820018 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081870291 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090058587 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067360524 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085569622 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072771139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098556105 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090809888 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073625672 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091264907 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083954934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091085834 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068328875 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08776511 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085685418 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086252271 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070184459 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083485446 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071541502 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090274997 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075420619 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102239367 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06866141 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091076481 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068708972 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083165128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081983583 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088386367 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076277894 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101071525 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071962863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086900583 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07270027 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102467288 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085696029 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067548805 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070549832 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099499613 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064790727 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090518109 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101077058 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070508293 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093032351 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083408374 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092001324 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073060617 seconds)
  done (took 6.724164645 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077124525 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092377549 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08300672 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101889887 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092583839 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075355157 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093061405 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075283211 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093000951 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080934744 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095076445 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116428801 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071453612 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098429441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076894847 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095651817 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0755171 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095746659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094027521 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076836242 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095268336 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085763139 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095807785 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103333213 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107493578 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090339187 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076103797 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095035616 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102936686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077259924 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107543918 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077133721 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095079236 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103055696 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088916125 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093342268 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068525061 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09380824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074703159 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093102112 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069874552 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101192952 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092403926 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07111444 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092477805 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074901291 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102627375 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.103729374 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078405258 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097772476 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074285425 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101622117 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091882975 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075226295 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100974824 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126323083 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083676743 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101197607 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091901978 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083104827 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101129607 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107898314 seconds)
  done (took 6.419701939 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090706721 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095148999 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098952378 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064532565 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066189313 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091514752 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066588085 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083627345 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077435158 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095008542 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07972372 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089900281 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075359083 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098768196 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090396242 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076174146 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090094616 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072917857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094617749 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072383338 seconds)
  done (took 2.478561762 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077614989 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104195186 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069667627 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093303924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071420159 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074149015 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090227163 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071152701 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087121627 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071870264 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096879267 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078998445 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08770006 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075020266 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097734677 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073858216 seconds)
  done (took 2.133791677 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080822208 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097345729 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083468571 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087659268 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066399578 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08372498 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068581816 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063379071 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083476169 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08283297 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088080971 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07054416 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086750462 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066814386 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064765474 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090931123 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064460903 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083916326 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068536144 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102498633 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080077495 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085959883 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069570045 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089453989 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069911483 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093871633 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07044231 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067142024 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088248088 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070382577 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090422937 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077904119 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086337996 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069175044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085794829 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068538361 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069623472 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089696344 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073240833 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086899564 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068747336 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068567219 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087971721 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07103568 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084973355 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070577581 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084489087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076622238 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067321077 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090324573 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069556347 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091433442 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07142229 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099258222 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073475326 seconds)
  done (took 5.159320802 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082537181 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070720169 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082653521 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066777122 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089279537 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071164108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070624389 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089599108 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070571397 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084650125 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071009814 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088745228 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071199878 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071349549 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089379971 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071810571 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082004965 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070827921 seconds)
  done (took 2.213645838 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075031264 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068204189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095444934 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068210266 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087218677 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071464059 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065593968 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087344502 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068424411 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087970999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070053047 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071737385 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087800965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072443992 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089714384 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071104058 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071870998 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088046696 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070388214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08484217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072776562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068421017 seconds)
  done (took 2.513051045 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074140284 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095164572 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166422341 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110092719 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084555828 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101116709 seconds)
  done (took 1.451299942 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092120549 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099932261 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070308442 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107695469 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076970044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089103997 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072238896 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089556404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081704196 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105659243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071490546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100465642 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100092208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084063845 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098342157 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077390791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092323204 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070751927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090136115 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110380368 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07281873 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099569835 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072704039 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091224307 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072234106 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1009627 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099533309 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08654284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091316995 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080870603 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097820311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071870591 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101742484 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104938965 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075262709 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099845856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072285137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111031384 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097649329 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080834658 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092613603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078325879 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100298967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076837683 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100379486 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090595834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077205335 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091366252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072709601 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116582384 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095120381 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080520153 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095824534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080327397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100835832 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115710797 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102959141 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079290659 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095604169 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103416339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079952146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093780882 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077839785 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103513059 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09473267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078056799 seconds)
  done (took 6.753130932 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084501634 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106113436 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070984497 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102506316 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097544287 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070568397 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088372606 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070627874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088357245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070373942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130962061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070604143 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097690567 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097168531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071157953 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088371144 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070540386 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098092366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069779173 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114265579 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088334266 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078755795 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09805685 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097501816 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083918728 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095288363 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069604636 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089426582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068873981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089155763 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09411367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07145411 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097366558 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070826312 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097627912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07152315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089431108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075997291 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089933591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077115949 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099483984 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107578081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070095237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090242371 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103414322 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07257992 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090505109 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072532256 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09084813 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07255381 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105398345 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085927749 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105199059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098346761 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072317906 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091766178 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07262738 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091839461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072969716 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098355408 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099957122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0727979 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117908133 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071592657 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092535787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0988914 seconds)
  done (took 6.595890603 seconds)
done (took 129.94453087 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203940961 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185405283 seconds)
  done (took 1.205135794 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071352713 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098710686 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101381459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132398617 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08843644 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102212258 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119614647 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082000066 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068847143 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088656695 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069208952 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090029323 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133760293 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068529558 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088046711 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071514198 seconds)
  done (took 2.298262519 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105523937 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201884531 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112443789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067898834 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103005846 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080727626 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086707179 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080287401 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093597988 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068134199 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099210913 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078869712 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066718842 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097214832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093014222 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081065062 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067178977 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101576353 seconds)
  done (took 2.512213068 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109223368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145653745 seconds)
  done (took 1.079894525 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206223657 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124529509 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206573222 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.43265188 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.212104954 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.293321773 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176031251 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176100643 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159000289 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170592137 seconds)
  done (took 2.977955155 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101693493 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173549623 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319405674 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140729561 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090186452 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118133431 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142096181 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111443749 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085246701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104250708 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103082284 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080451496 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119610656 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077239617 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095592851 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08003368 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123844904 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075822076 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098356792 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077401186 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119692318 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068197747 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096964663 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075078464 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100033819 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080469785 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086599366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068585275 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096654036 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077660624 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099817546 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116053794 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08180622 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132364377 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104360547 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.13453659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098065451 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075379181 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076481147 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094832989 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079000536 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099881926 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105650204 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079341914 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067684137 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098928009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067619053 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086957532 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082985385 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099132876 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082629646 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100813337 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133094785 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098858955 seconds)
  done (took 6.311419264 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.761407422 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13567235 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074298526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.829981945 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118711779 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088507087 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.753151811 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099177163 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235611477 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762090691 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114920823 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079196036 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209022286 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218362471 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935016399 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291189487 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.644215226 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108718273 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11046452 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137056881 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165183804 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159943897 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151563429 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.397150275 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097875552 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074025102 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140761839 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100870863 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14397529 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105563113 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076573091 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158431562 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230424125 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183612916 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077304743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094467749 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072756793 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153031841 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249053915 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193107446 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161407179 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071292761 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072196794 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166275318 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134567235 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070898266 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145243349 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156702648 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172776011 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076624721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099088374 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146239243 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142753199 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146302668 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103162177 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299776005 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.269285521 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093905306 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124828414 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087665923 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241835321 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083847618 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205858164 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141631576 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191882029 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073271562 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755897891 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151785326 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071314652 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098803605 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123361155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077245017 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162903359 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.127788391 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372400073 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145718862 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096710959 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071806785 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214802432 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086504944 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092515478 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143982485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076418001 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125953738 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168509378 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.150366918 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.150107176 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215725741 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.166427451 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14377977 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076252925 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127208399 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097796057 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193497087 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196703837 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144829597 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193632147 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14267621 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.143739816 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149212023 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100782419 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152981206 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122088367 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10405393 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143966523 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196073893 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125437514 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085570931 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095685957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142973843 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129149577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088640651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.162845375 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153820315 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.433030162 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149657363 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08927523 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089283162 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14282156 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164260738 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079246835 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236060822 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126439096 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151958919 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125039587 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070672546 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124475703 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144381928 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102625129 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126092117 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143732011 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078591242 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23874887 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.173616534 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103545725 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199343028 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164834605 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09824215 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154213613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123778851 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150254976 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079652624 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164213429 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077928044 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778549118 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147607808 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12454655 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075826939 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167421151 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092420655 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085204207 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10653709 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06961731 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751076406 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087213963 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103964145 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104730079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078519509 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12555911 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139625752 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096689022 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144430779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208380079 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080155748 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121610307 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104990144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142082792 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077197226 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106344628 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105045728 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086698179 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126668459 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09440628 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08699791 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150052402 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.143598116 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198273172 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569158102 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072645649 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105124966 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183570327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093211903 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263613846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140927085 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.182460134 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164293262 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082365387 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288437772 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147376895 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168065045 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087418645 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17640124 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070508169 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139711283 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145123917 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094333834 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077157889 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164900217 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.151968643 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147877376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.942760903 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072599425 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205994772 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09038548 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.15364023 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077366639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101652498 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.273909179 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074095679 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150439443 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167774561 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076205546 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106749946 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.677195418 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105805519 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143574301 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077351007 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201695091 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144756245 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138534394 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.161606729 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08034861 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144071682 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192750236 seconds)
  done (took 41.208884406 seconds)
done (took 58.411969355 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284863927 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197097274 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255796569 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149326388 seconds)
  done (took 1.813644763 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.148626824 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107632827 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120266523 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086757344 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107082595 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088277232 seconds)
  done (took 1.511681115 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.428687216 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278359198 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241806139 seconds)
  done (took 1.802409852 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307458093 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236914683 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458019724 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304669825 seconds)
  done (took 2.268578914 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198146256 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117175701 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.089807628 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087221431 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163982512 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.264835295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131282524 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195560001 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080698842 seconds)
  done (took 2.227323409 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.203743802 seconds)
done (took 10.675940372 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.215320473 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.13829269 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087863164 seconds)
    (4/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077472787 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.342518311 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.292598731 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.191739092 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108224452 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.178162343 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.167211708 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077875934 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085052246 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081388481 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.318163826 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100956773 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130231748 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193070131 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094439533 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.117204435 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.296803629 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.218802103 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114029362 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.201053744 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202532318 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.237723991 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163904093 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166147023 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099852027 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.227162223 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08812386 seconds)
    (31/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.202790419 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.143479262 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.271141502 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075926978 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075054546 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102324465 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167637194 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077188911 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11999464 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.253584756 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.244497912 seconds)
    (42/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.268084884 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07488925 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155620529 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171630624 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.276144362 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.271878102 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074704885 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097049518 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076054204 seconds)
    (51/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.166934165 seconds)
    (52/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075750937 seconds)
    (53/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16530623 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.245646104 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120703413 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097023797 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105264306 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.214760799 seconds)
    (59/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077499189 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054696936 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092931 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079176747 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.177141465 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094540723 seconds)
    (65/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123465876 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.157205242 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 0.165722566 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.245480738 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123537688 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121204625 seconds)
    (71/309) benchmarking ("sort", Float64, false)...
    done (took 0.128548855 seconds)
    (72/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130829623 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070290121 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110365665 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19460193 seconds)
    (76/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073791178 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124487478 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.108927653 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125362521 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078652868 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198341983 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.068286735 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115591783 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064989454 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109177652 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.166880113 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068719276 seconds)
    (88/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054806505 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205005189 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075208255 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.074808283 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.175153813 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072421489 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.126018742 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069004914 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204972924 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120394627 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.224771207 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075692237 seconds)
    (100/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.153717645 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.1006285 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072235945 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.245124194 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071366725 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09766289 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.082281043 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084197528 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098591062 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.243342557 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080547969 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146930355 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.257359073 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093448502 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171274373 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067577781 seconds)
    (116/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100272821 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077368568 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068055623 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162318189 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068674279 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124873961 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.171879536 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077756539 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099207117 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173267442 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114330888 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068474551 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097126414 seconds)
    (129/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070668083 seconds)
    (130/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133821589 seconds)
    (131/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054084596 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053603553 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094623915 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078223036 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075304325 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174731808 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135544527 seconds)
    (138/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06869999 seconds)
    (139/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.125281096 seconds)
    (140/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.300565887 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115928199 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055111696 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07568515 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09156638 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.255460312 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102924554 seconds)
    (147/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05345226 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.136403414 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078841953 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090281341 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073575597 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096388838 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084417327 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074884644 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096654279 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.251160567 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072990918 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08032497 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.086614748 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079183651 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096713482 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054726522 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075899304 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116359639 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099372097 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.129149044 seconds)
    (167/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063168475 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056577085 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116803929 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111181703 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090073699 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067741885 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063748916 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074960234 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054855266 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091886383 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113081464 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053273299 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110031579 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06308708 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053762815 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095696095 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074972327 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053085787 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088770268 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112403442 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.126463402 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074291364 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068648995 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0963588 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.239133579 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150260738 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094539633 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073745762 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066905971 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097947703 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127423337 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077047332 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079161782 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09366989 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095316903 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091249187 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053161955 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071649272 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192317411 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069343254 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087741967 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10542722 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088689406 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053796363 seconds)
    (211/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054819829 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072404012 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07518606 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115868298 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09096609 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067747938 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09554944 seconds)
    (218/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212497537 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055799188 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076640882 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097662098 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069895201 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161049527 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.242243249 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088975743 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094947445 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.232280516 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.076434517 seconds)
    (229/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071492505 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053203885 seconds)
    (231/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.123036152 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075188642 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074376951 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07372464 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074983169 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08506159 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07008139 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066738193 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075529217 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068078248 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053692077 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089018191 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094022974 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088110823 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085241976 seconds)
    (246/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063944451 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164195977 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054130948 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.074734302 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108225663 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112426487 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053837071 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088204479 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077065655 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055143398 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094344067 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104974066 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078789184 seconds)
    (259/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114685139 seconds)
    (260/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055208736 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089499824 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068555483 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068474537 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0853502 seconds)
    (265/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071255127 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083604627 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098759562 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073975991 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05507454 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101007167 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055707706 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065611356 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091315055 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056912036 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070949261 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09064329 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069086864 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054256826 seconds)
    (279/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.076425893 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092683441 seconds)
    (281/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.084268461 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068449402 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069868524 seconds)
    (284/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075795972 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053727565 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054097322 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075916312 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094414467 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067817806 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091980836 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075471083 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091526597 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05563559 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066615507 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096938297 seconds)
    (296/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054969434 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054104699 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089884053 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055175536 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06793329 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077311498 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073722218 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069922727 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076117832 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137650779 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111467594 seconds)
    (307/309) benchmarking ("sort", Float32, false)...
    done (took 0.130736991 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097591075 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07492 seconds)
  done (took 35.655264851 seconds)
done (took 36.51274927 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083663471 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116951887 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077663235 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11765664 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084380592 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102194554 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075984232 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102740652 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084033416 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106370213 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081708908 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056678655 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099068612 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077531852 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098751394 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096207184 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102742854 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075184128 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09791599 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067936221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076237566 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089387079 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069699562 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057078371 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102222597 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0753933 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0964352 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077918996 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067554065 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089870509 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071694812 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096633915 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067879497 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081338177 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097248854 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076734699 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099925953 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079341534 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069775056 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089995591 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077141061 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089056473 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075341654 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076625011 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096799044 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074585998 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097752353 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083299738 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116938812 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070928535 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076724884 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101003437 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079005465 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096506268 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072398945 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097481006 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073850443 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096249465 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098971161 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070801843 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097490409 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076990736 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072953239 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09879722 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077024153 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10038018 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079619754 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095324181 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077983009 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07373141 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089821997 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076814862 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092594963 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068369655 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078707312 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100897887 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066896211 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073665942 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096766527 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074827153 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.08848014 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070603294 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070511219 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096800106 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070389001 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056592883 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093518441 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074316876 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06667128 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099347441 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074834717 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096543012 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070016555 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079820116 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090318383 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074051948 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089014632 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068968527 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070556261 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094386817 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068084464 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069838292 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098516396 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069907437 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073001154 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103860217 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067823075 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096566152 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067610947 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067689641 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106597519 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077749244 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090203857 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07093737 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088469104 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075863247 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0676226 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089355993 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068332048 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067803365 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095519171 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068436385 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069047688 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096342528 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081462834 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092050847 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07246283 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06972739 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090334242 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074080299 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067795286 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090544413 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0701672 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087373436 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07026699 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068309861 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097551871 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070973485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076754262 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.091465808 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077037053 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094505285 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073847726 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073591251 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088589081 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060997879 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069551403 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092402293 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069957955 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067979019 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091175903 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068534623 seconds)
done (took 13.447827561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069277427 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175728947 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129872493 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100638056 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113834782 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068227791 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103088629 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.131897185 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07084233 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132787982 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091032404 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111654348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.142271625 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068240595 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06808189 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096091696 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070152431 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11518445 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106580369 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112079084 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145193938 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067935431 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124760689 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093861507 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114880969 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129522604 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068993845 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093721511 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071875628 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119346407 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089524665 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071343822 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091789723 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126714375 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099026847 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111658033 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068509536 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109703806 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068952763 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068131455 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118503454 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126274549 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08437539 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.10715075 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072119644 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093086174 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069932364 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.111578437 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094368391 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.106280027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114089469 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137806378 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07153725 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108012621 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067387485 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113641216 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.085721505 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092856356 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069291209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070259126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091547765 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07188992 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114588994 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096420367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094869127 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085696425 seconds)
  done (took 7.388228128 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086943876 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117784653 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087096805 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109372721 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06938708 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069502005 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092848198 seconds)
  done (took 1.550978138 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070033405 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092113987 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116590403 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094789495 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114281967 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092866612 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102310313 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069397988 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110539464 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070346599 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112989587 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108307702 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092891876 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076530946 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11663347 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069268248 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094611779 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09305125 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072739147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116370224 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072481797 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113648166 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071653796 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068961251 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107023221 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069620878 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140571354 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074930644 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093329913 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072672793 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067344541 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144916764 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10662825 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080715448 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091037762 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085378976 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10874759 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067932989 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08924641 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099055009 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087021659 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093050265 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072656979 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069113796 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097874902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082662943 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095316079 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072537843 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073821079 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114417563 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072630159 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109488189 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072301728 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075425724 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095903618 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078459114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103815184 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071380237 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091937043 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095150212 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087772833 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10997081 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084469853 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109789934 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072842231 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105951398 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08432929 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072553002 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0948706 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072812969 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110050699 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067500471 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071084877 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105050125 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071038025 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116006712 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093907197 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094059666 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080391714 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069498459 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092624274 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069549181 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116055968 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072982972 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069058446 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096456528 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072471763 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089566562 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069070047 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072607336 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090119931 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071333603 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071923596 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093754817 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072137954 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10942938 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070447507 seconds)
  done (took 9.528023186 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071016274 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070688965 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094060994 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070819535 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070036659 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093663607 seconds)
  done (took 1.396448325 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101286299 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095284351 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084383894 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097721795 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111519719 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107684874 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086220233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111063736 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087989808 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105680938 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085299047 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110025552 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09078594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100041373 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085117783 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100199641 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085846549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104026289 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082230249 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099393409 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090825704 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099405273 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077691561 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109252394 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07388023 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098863034 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08141216 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105815708 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083130842 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107646479 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076080162 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07306128 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097447961 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108080245 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085670065 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097878386 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076256162 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074122069 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10274101 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072822004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108321669 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076773582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104593701 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074094972 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10931242 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07537358 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097326317 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080594506 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108455267 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074312754 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097374332 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075341808 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095752753 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074714527 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074425215 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108684113 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07417482 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108333154 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076506735 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099819907 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072509408 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096302512 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08529485 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096407744 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083654941 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096715798 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075201638 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099284322 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0763224 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098393981 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074815103 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073041578 seconds)
  done (took 7.473065404 seconds)
done (took 28.24664881 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.651999664 seconds)
  done (took 1.576089824 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.797697942 seconds)
  done (took 1.724713141 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.674534067 seconds)
  done (took 16.60581436 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.648875843 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.804784469 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819627624 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15828403 seconds)
  done (took 3.358610834 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.884045288 seconds)
  done (took 1.829583982 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24399958 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25536286 seconds)
  done (took 1.433495271 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720699994 seconds)
  done (took 1.657924016 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.274506775 seconds)
  done (took 2.205633355 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340074873 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188356753 seconds)
  done (took 1.469853838 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.533336154 seconds)
  done (took 1.474686755 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.528917509 seconds)
  done (took 7.475548521 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234204009 seconds)
  done (took 1.186268967 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273420675 seconds)
  done (took 1.214719741 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.242033061 seconds)
  done (took 4.181947218 seconds)
done (took 48.326141161 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080101208 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084283336 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106404086 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081277733 seconds)
  done (took 1.286487193 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080769354 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075589931 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105173294 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076971636 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105955323 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077032729 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102995568 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081810437 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099628874 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076758634 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078108697 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10019981 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079212081 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101351166 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073998049 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079572219 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103501698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075030106 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101399386 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076606794 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.095938048 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078411479 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078209761 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098217188 seconds)
  done (took 3.050514386 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081446309 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07568787 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100289687 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075321633 seconds)
  done (took 1.279599662 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080619232 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118822667 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093245554 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103501734 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096918005 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114026089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07244511 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071792753 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098273266 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080020701 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0933607 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102768671 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114950845 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079930445 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105234409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069220355 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071540238 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114532032 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079532272 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104998802 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072739818 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1034589 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071545695 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116404434 seconds)
  done (took 3.179516445 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080098108 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128379759 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082024259 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115244155 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094938752 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067570109 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10237202 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09404421 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.15362705 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067629631 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096642462 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068211413 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097972846 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068694066 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078841652 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13688437 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.139455284 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071381174 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123820674 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068551647 seconds)
  done (took 2.883623115 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077844056 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072194425 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090832936 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071347886 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079050742 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099219991 seconds)
  done (took 1.444409411 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070330789 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06905362 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092330049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069306718 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074089165 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093181749 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068455301 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070565344 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094189062 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070465824 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093240873 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067931475 seconds)
  done (took 1.885196431 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.454288946 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071083993 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094222744 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068100141 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073400211 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092717125 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083515497 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071670437 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119907275 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069552479 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094079372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071117426 seconds)
  done (took 2.318421671 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268417867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080351646 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.334898529 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17136129 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143118884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160121022 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106577008 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144774796 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203318686 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14189559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233915869 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205017721 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138547814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171911259 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117723242 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135675804 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191342713 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226284047 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133783032 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231496647 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187685214 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159796418 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209972476 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106706719 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137712004 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147843067 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098517907 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083011926 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236272561 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189052048 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180844248 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140560242 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12293642 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23982763 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225750847 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175943535 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167054521 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113288728 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159811652 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170825502 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268501151 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116604916 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200958939 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137312666 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108670088 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178022842 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149679004 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150877137 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139833086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116463315 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180423366 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246059165 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17217009 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115730866 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140299358 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143595156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147298257 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106251445 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278277887 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201043207 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187627608 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073882801 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125119669 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193369465 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164955479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145365924 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182922917 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097713838 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198376486 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194117307 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147371902 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204532503 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.163919516 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117584187 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151744243 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175680202 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158696475 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23650873 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158098839 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100015348 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156104791 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131042043 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08503172 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172076814 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078324006 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241044457 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128054913 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143360577 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1419887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115323177 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139733005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22519654 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208625185 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108851188 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093429716 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133262135 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154588812 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181580947 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116331058 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139411825 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151426519 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082197693 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19629199 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079535462 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155858798 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.106349479 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156959567 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166674927 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078338018 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181577239 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107021213 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131213039 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167817794 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226172549 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118311055 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086639872 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234240255 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159758589 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13648599 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180673769 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222166512 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129885046 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105164298 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20867883 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250816127 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118038287 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204537037 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134605114 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112397762 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091591897 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183796654 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143866536 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152011531 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087120714 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158202505 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234486288 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100860714 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099951376 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170269426 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110117181 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108690021 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144145018 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104986415 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123709518 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130425357 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136569307 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174427102 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158270964 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136571422 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1574337 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129358569 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226641827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118940243 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109175868 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133326705 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097301953 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171156136 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223131653 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083721834 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233930144 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159799204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134270597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152013609 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086584901 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200752586 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082689013 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073905762 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203071738 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142274247 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140717309 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191404085 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13318908 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159331938 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15604407 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191810859 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167236884 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167999315 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13711848 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09049207 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142978018 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185048892 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077395231 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124046616 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08552265 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133582914 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123888547 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110607436 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178743354 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159651284 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127215626 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144057016 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126931467 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187471465 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104409867 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164246196 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152902658 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098753077 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217315572 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222433402 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171269349 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130680859 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181964473 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098935561 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077877108 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118209816 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16283136 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111775066 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088042054 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148596606 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212278938 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161743986 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170501858 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14117762 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153210421 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220494067 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074375619 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14545691 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188174256 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158479822 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15874793 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117913745 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10419024 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207392043 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109529331 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282010867 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149810541 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15748975 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188619237 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13894373 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108302233 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108117055 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19878137 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135408525 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188294325 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130179896 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117345171 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141571825 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084829046 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134057648 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185711727 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151782171 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172020775 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149034896 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166208068 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105836913 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147899196 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156214336 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154411967 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066601719 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151826384 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227868709 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125651979 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151786384 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21800536 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083541477 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155407395 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246255339 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204418694 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089448906 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139945208 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154440244 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163940165 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149844082 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202370276 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140869718 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168558372 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14238928 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089771976 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117599397 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127569356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112413006 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125595814 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143437437 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147685511 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124781426 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164560129 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143480678 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142164036 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149804326 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126581581 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094963516 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127899397 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242679278 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154180252 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242312046 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1302213 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.186784999 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23448043 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10322261 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083625196 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109000749 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177523414 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087388984 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193661999 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100146778 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135887564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159571229 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204849959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100310829 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096948417 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140742583 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168819663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140703296 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103269082 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136836381 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228415769 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135415513 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083007285 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158467051 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134845894 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132996037 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24435168 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064263788 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126449821 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078992643 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109457839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164001986 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22057635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086316088 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157303326 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152425665 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153963439 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163461922 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130342262 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125982684 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142969192 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185111594 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161929595 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120219738 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145281249 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164177426 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221568887 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137239124 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099059038 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234610682 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219539722 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229904193 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092278616 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147858643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147447685 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143501561 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204602525 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087145133 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232913931 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111642977 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172083852 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135209167 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122512865 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162543919 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125414133 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092482019 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212263036 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151993081 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111457524 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100332092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145403713 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154050742 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134220483 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102750174 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175503969 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075663631 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198899162 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206828575 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111060259 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137787539 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125762894 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08769624 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137989098 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134223213 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115722117 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.122944287 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2403909 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120338739 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187502574 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203596695 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14677726 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172185699 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131203444 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666977878 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108181941 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194086571 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15053969 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271317348 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103700491 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15094638 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142079865 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155328442 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203785602 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137096457 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182062347 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192077603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154411773 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083381593 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134602468 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142982487 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119925495 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138805386 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146822914 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148386807 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130365766 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154554441 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162175417 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111059327 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100907042 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223711868 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151156666 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178001476 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201751106 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089893643 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151994333 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204035811 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083336048 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181861146 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194216767 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139501784 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130751838 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109305417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136685717 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211571233 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.10194875 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198386673 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181909933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117133128 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144890384 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.179732432 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167113443 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138182678 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15961781 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126955597 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143888406 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148458998 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113011154 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081839331 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137364232 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1447662 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129411637 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13330145 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.12395143 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216240798 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075472786 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125564715 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132408736 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180252032 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245468756 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119004023 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087759102 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150416859 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146136603 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148153999 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158384291 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111578159 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111255582 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087357342 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138725623 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141609648 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147506821 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108865765 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142571873 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234883805 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113347139 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231337615 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126432594 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14017584 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07295027 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109173016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125657865 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100078927 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135498702 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127226222 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237999774 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102210661 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121239252 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122103701 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077362708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112344408 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164481449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144161843 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154976844 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127703772 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066827635 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13994706 seconds)
  done (took 73.370802457 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137374679 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108021636 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124634508 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.18327156 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152392708 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24408924 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.186326794 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228755007 seconds)
  done (took 2.393890114 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071822968 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121026663 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108653984 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121097115 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092911124 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071235361 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.305356409 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113533147 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06892266 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117529492 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121568112 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094425808 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.486048874 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07041185 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098353613 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087290889 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070712613 seconds)
  done (took 3.241525607 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.444541929 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.637580767 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.44801565 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099498153 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.854724874 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110776492 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.266907665 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163259063 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093356411 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425338243 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.730696639 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.153191697 seconds)
  done (took 17.454206593 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077866991 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071341251 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113008048 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086532382 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101326558 seconds)
  done (took 1.475023304 seconds)
done (took 116.195811485 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082708162 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383301071 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056312259 seconds)
  done (took 1.499152552 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087311262 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088638489 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11549414 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087299362 seconds)
  done (took 1.414385766 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078162666 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078495748 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113860288 seconds)
  done (took 1.304057628 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.296354799 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170467315 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092570226 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086127831 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081191058 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107164258 seconds)
  done (took 1.308611487 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076147739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07829309 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102055354 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079876429 seconds)
  done (took 1.364290413 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078653172 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05623128 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059454116 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085063038 seconds)
  done (took 1.31353197 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092689289 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108468166 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085134249 seconds)
  done (took 1.317241246 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112702246 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116394408 seconds)
  done (took 1.263186873 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084819081 seconds)
  done (took 1.114118346 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096710224 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145134949 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164708499 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141037203 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.173122108 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14356363 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.116438532 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091805151 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107324211 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.11839448 seconds)
  done (took 2.332922145 seconds)
done (took 15.893105983 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08124493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.39724372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364347124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120945699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672952486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388195213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982388877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123456311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111436355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098545966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087479838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678508862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010264739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328879176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022563074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325717329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677545187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071235632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09523577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07081449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96411907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096410651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070785696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09668609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651314661 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373715002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097044573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32530947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096269806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073086343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357251861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097256997 seconds)
  done (took 16.033523085 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073057042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147231431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078035968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087259948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100267689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072294982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100650856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072595226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151793314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072706233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116652631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071550027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100353289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072092752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089875996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098329935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07137742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09702262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07114368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071851594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116401073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072036171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098089886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071579338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070497234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110358573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071020161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09634698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072046721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072159749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100297236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07147982 seconds)
  done (took 3.874383037 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11821134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.156497214 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078956169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13220604 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.145403725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073241613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173411186 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096698354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157189934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071105859 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114224245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071002729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131398587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071567092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117505001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071514687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097414844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071629359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070925105 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097601331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090203251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09645079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071929932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071695188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09722308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084301527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09757355 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074737745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071078509 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098970358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073348657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09768705 seconds)
  done (took 4.186321368 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07552584 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077576277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111758919 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087746171 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099857514 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074660843 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075192281 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099274073 seconds)
  done (took 1.74087555 seconds)
done (took 26.860892324 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081678224 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071884557 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102113986 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083880653 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10153375 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082016206 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069393044 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104039867 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078637733 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075445676 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105129634 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069529416 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100364879 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070457129 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076815076 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09689467 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081994123 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100660561 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08220689 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109144439 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073496305 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077517402 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102742224 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082570397 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108799324 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083513466 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108072158 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07612031 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071157885 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099796735 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07983712 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114691921 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073558878 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084143981 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098368461 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070661165 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096554954 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070330605 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082185802 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104221 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073111388 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103934941 seconds)
  done (took 4.712840209 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091985083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097987134 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117190324 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065911994 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098931391 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064810436 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119629852 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063406355 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064568931 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119308076 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059815483 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061096566 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089455311 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05723784 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059734868 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058219907 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090307075 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058565349 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059913468 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087017513 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063539035 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056084756 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089956622 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062151828 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059134859 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064423632 seconds)
  done (took 3.025761522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0783337 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084760971 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116933587 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131069001 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135837558 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078886825 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107808699 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088829486 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114089265 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069811679 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100888973 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099495072 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08943085 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103643599 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070664615 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112705161 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085641564 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071745541 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103683726 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091206426 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114797891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081044861 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117910454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08309407 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069488051 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100050235 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074406785 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111633142 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075955245 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079820816 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101310975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073774353 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099102379 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081807712 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100911023 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072115483 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089238006 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107841146 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078479485 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097591457 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074478762 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070458713 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118276667 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114715964 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098110757 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077014104 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104384621 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08099859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069558454 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115905308 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079444318 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096398728 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074209061 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069623316 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097719086 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08461958 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098653174 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074164835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079563379 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101101733 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082968664 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074148643 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113330553 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070014067 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105697604 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06967578 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070782083 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096518072 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09217848 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09852913 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111821705 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099946343 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071818434 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105586053 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078234803 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07635584 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097537112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085619591 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108559058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074451872 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08094634 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102472979 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073628944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115241654 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073590452 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071290173 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098262741 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07708135 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072584759 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09853747 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083810048 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097644851 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074087393 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113648993 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071913072 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074030228 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105290915 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075413168 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06940336 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110045731 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075459996 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097431429 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079635677 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096747473 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0740054 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080223216 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101706283 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069806768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101908478 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076705875 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070227433 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09895252 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073069928 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098120965 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08063269 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076028608 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10230185 seconds)
  done (took 11.558968938 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201549691 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192318908 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073341379 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185159754 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080898267 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119103685 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186114424 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.129668498 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07060708 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071145169 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.100070023 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110638711 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133127457 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142135078 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082960987 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069998658 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116322029 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139152517 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187573501 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152342147 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11876461 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077648062 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101204478 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071681253 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073976855 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108601891 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114930291 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082449655 seconds)
  done (took 4.351824026 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085343398 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129246036 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076081476 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118472403 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095036081 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097910698 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075677874 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072111315 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110582704 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083083947 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09770307 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077422768 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078290514 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106123944 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071406713 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106936594 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080996726 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099279327 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074865311 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074291657 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104870617 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084228257 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101872532 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07030276 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076867292 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097515153 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067597316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116775809 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070440668 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119702179 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068914273 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105148419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080929962 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070595902 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098094131 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072676113 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07307045 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.10040973 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072108314 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09584357 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070145214 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059694287 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097249423 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08345163 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104637165 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062870425 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076283859 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10349951 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07553379 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068000587 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101184164 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072785273 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10191141 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078280323 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074901837 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102970287 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07398332 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096730141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07741825 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072206038 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09423439 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069462186 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075103369 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097661149 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078053396 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103063979 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069538523 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072817838 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102715305 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07635452 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072141824 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.100907507 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068436747 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100279036 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075605886 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074654069 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101840724 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070103596 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070198549 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09874542 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057800497 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070371002 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.083563246 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074276026 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096559935 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069762196 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072642172 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107312182 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083708346 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100063466 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077195551 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071487405 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.097252831 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074078956 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.092678016 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074107711 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085325327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115558387 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07088849 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097390699 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084476911 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103703882 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071108222 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058372709 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106869041 seconds)
  done (took 10.048751318 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095413579 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122678597 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072555568 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08384581 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125122097 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09433257 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105848717 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076911872 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071809261 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116352914 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070491554 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106434496 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075099416 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079207724 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123340064 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077982275 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101042915 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080461476 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106459205 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.107121044 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083575705 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113392718 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.0812682 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099490068 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076004845 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081874521 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127273984 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080175866 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108004444 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085042899 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109207679 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098493752 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08570227 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102975371 seconds)
  done (took 4.290704209 seconds)
done (took 39.023627641 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.146224048 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.32307946 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.110759197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.993013524 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.143268469 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.124891381 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.124007792 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.11219195 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.655414528 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.112767001 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.351367845 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.710496102 seconds)
done (took 58.964090844 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.157655404 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.252254133 seconds)
    (2/2) benchmarking "String"...
    done (took 1.383952374 seconds)
  done (took 3.704420871 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.461727699 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.064043319 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.394984225 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.112593493 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.1104604 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.572684719 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.658474325 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.930024411 seconds)
  done (took 26.899156606 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.111711591 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.475761651 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.400927081 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.399056294 seconds)
  done (took 17.44474292 seconds)
done (took 57.725991937 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.102573128 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.136007756 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.122935118 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.097485898 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.236356261 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.143478574 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.231595885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.170303435 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.123247107 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.103678803 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.128655347 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.113035511 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.1437681 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.233561032 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.116819356 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.113663639 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.152442102 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.737999341 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.488923503 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.139867659 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.13008031 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.141261897 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.123242264 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.112649279 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.190246014 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.114242032 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.12207561 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.135106482 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.273850792 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.116714821 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.202097109 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.379553737 seconds)
  done (took 186.935424047 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.113918241 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.156421895 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.25229538 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.167240287 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.539919547 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.316203424 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.236022332 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.609834219 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.131084683 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.122914568 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.365352538 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.116190263 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.440263311 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.096180715 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.123386585 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.196180963 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.299319613 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.423852067 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.130205778 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.365467305 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.123759244 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.362850633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.271481123 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.316055828 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.152529185 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.135991355 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.14959371 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.13249478 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.303822439 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.240825321 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.154258527 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.131321493 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.680296989 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.972773393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.116554322 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.153569454 seconds)
  done (took 146.661910985 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.386131445 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.11444162 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.11554835 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.116044366 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.14357072 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.113090728 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.6251761 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.636356771 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.649184478 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.461590054 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.117951373 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173113008 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.320574701 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.115848788 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207489188 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.12666597 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.116797087 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.130341589 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.142701312 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.115563321 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.115201079 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.63639751 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.131293132 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.351493125 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.123870819 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.115369661 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.145315181 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.508570709 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.115295525 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.144574199 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.428775287 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.157603358 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.115743697 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.389205956 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.892576846 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22241957 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.117656853 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.145782036 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.115426647 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.379194711 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.116428016 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.116893572 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.119756625 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.669763585 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.116769495 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.629146981 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.116054742 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.0018138 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.116429321 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.116750557 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.722587983 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.540931393 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.116153705 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.115384169 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.11857276 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.116632072 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.117300401 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.145963045 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.819502927 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.216933402 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.11812514 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.12007214 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.145453278 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.117993627 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.506649402 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.120206926 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.193920869 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.18122884 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.226495535 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.118010723 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.643990761 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1216873 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208621583 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234338676 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.116922998 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.117573031 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.117075489 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.117256588 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.223074341 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.118165121 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.509831971 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123258339 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.119733938 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.176358182 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.210569026 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.117572176 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.406550722 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.118002905 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.117589583 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.798737778 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.117583221 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210085175 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.118443485 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.11757425 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.11872332 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.512377478 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.643312191 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.120747945 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.311946759 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.123108901 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.902841612 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.124075685 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.523113477 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.627208358 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678723462 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.120937261 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224868357 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.123089998 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.120443677 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.119092277 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.148290859 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.120055243 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.178313186 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.118859798 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.51401987 seconds)
  done (took 335.713687971 seconds)
done (took 671.756198472 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.803205211 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.753953277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.879830421 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.76676748 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.748284965 seconds)
  done (took 10.01702671 seconds)
done (took 11.081170728 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.295654181 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.296089186 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.176255958 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.296258776 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.147280987 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.313437292 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.274986172 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.139621788 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.216650327 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.190385894 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.217699758 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.166463983 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145900409 seconds)
  done (took 16.942119897 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.434558318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.428237843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.183840897 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.433058266 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.161079928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434941274 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.316054636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.3270445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.31252317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.135027683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.134459539 seconds)
  done (took 15.366279144 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447367891 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.433099931 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.188112957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.438071459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.162096762 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.44227103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.323456186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.328205581 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316582826 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.134996262 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.133540091 seconds)
  done (took 15.414027575 seconds)
done (took 48.78605471 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.129357732 seconds)
  done (took 2.195497011 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.164705625 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.324903692 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.142712879 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.13496812 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.131183047 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.131900757 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.136063508 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.131314917 seconds)
  done (took 10.365364607 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.126616995 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.129903753 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.130257289 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.127399094 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.126992888 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.130883179 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.12954869 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.126759052 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.130117991 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.12914134 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.130171412 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.128112963 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.130937723 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.12865151 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.128785942 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.12734275 seconds)
  done (took 19.128895552 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.130035635 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.127529345 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.128096568 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.129066768 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.127955521 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.128490679 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.128900623 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.127603863 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.128717851 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.128106586 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.129810725 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.12906784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.129339217 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.12820302 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.127415348 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.129666826 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.128777122 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.129680601 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.133259313 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.128522274 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.129568263 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.129202087 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.129505344 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.129191224 seconds)
  done (took 28.165927941 seconds)
done (took 60.921593063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.122313395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.698487548 seconds)
  done (took 8.889536373 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.131625369 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.131586249 seconds)
  done (took 3.333540807 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.131027464 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.130984257 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.131523719 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.13179114 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.130877516 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.131693907 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.131984295 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.131264422 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.131590838 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.13197372 seconds)
  done (took 12.383967586 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.131723892 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.13279256 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.129665956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.132784436 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.132490779 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.130275041 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.133320546 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.132581931 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.133199925 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.130059949 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.133161126 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.130541119 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.133219967 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.129442507 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.133641648 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.129591596 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.130326496 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.130375718 seconds)
  done (took 21.438454425 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.133043777 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.13243238 seconds)
  done (took 3.33508854 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.131236066 seconds)
    (2/7) benchmarking "second"...
    done (took 1.130587461 seconds)
    (3/7) benchmarking "month"...
    done (took 1.131075565 seconds)
    (4/7) benchmarking "year"...
    done (took 1.131257151 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.13161254 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.131525545 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.129181691 seconds)
  done (took 8.986331239 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.134301527 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.323958869 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.401785254 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.705191734 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.135385216 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.138106438 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.00557194 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.138144442 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.140486612 seconds)
  done (took 13.194089152 seconds)
done (took 72.628878277 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.122676744 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.126966153 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.996325275 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.134970124 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.144785375 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.47156629 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.132037099 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.248894157 seconds)
done (took 36.449708886 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.147047211 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.807320267 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.849633977 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.129537228 seconds)
  done (took 10.858022708 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.124358911 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.032081349 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.117894521 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.116967801 seconds)
  done (took 17.464002648 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.723859869 seconds)
    (2/2) benchmarking "read"...
    done (took 1.459307385 seconds)
  done (took 4.255296272 seconds)
done (took 39.794693573 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.135742525 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.131607883 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.135665994 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.132304785 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.135407176 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.132141384 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.133396808 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.135056401 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.13697425 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.135653995 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.135402481 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.136508438 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136139092 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.13401896 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134551115 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136078066 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.136444825 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.134209296 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133937741 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.134290704 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.136642411 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.134486942 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.134135996 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.133272196 seconds)
  done (took 28.306554817 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.136632444 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.133834895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.136296315 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.135923987 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.133500939 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.136745148 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.135904726 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.134103336 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.135386224 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.137311969 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.132651893 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.133668125 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.136348349 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.134711513 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137500404 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.134856026 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.136973012 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134808427 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136041682 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.134064248 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.136716492 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135280228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.134193225 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138013996 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.134732098 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.13407595 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.137477335 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.134375203 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.137050463 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.134738535 seconds)
  done (took 35.13853453 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.141871835 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.143929089 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.136723693 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.137016848 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.138693179 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.137340231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.137191945 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.137623955 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.136778178 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.137645853 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.137569001 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.137894339 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.13877162 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.13788435 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.137545751 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.137887078 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.136967332 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.13777694 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.137648235 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.138169166 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.139008075 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.138670876 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.138358815 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.138251216 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.13831496 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.139046712 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.138200367 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.139797251 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.138759922 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.14036092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.138739626 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.138402131 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.139030324 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.139679142 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.139239048 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.137810517 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.144540582 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.146509943 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.139186635 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.139955695 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.139030187 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.140136137 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.138831963 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.139333345 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.13887709 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.139044566 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.139251289 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.139488794 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.140093356 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.138798602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.140512049 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.140026533 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.139459325 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.13990101 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.141008849 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.140898726 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.139674055 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.140071442 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.139907524 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.14063233 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.140736015 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.141015592 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.140575971 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.140084639 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.140723782 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.140874997 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.141517007 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.140548963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.140739361 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.140482162 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.140094435 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.140374224 seconds)
  done (took 83.114703885 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.13990672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.138465892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.137768359 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13829721 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.138838516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.140999191 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.137761676 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141344743 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.138127542 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.141701902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14159081 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.139835438 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138873495 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.141234995 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141373648 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.138797062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.141818804 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138942327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.142042953 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.14156415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.13976956 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.139259881 seconds)
  done (took 26.156829926 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142391612 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.141441242 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.140295585 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.141782018 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.139718901 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.141221209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.142558257 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.141857005 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141613252 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.139644347 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139941311 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142333892 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.13999123 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139721353 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138974035 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.138453053 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142373575 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.14052682 seconds)
  done (took 21.614494297 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.140458651 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.140225345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.141736871 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.140655724 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.13829556 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.142910601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140297646 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.142917352 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.142132622 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.140305968 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.142377132 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141958446 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.143616063 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139558178 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.143006241 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.140477662 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.14325831 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.140780159 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.143525129 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.140778407 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.140190876 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.143389945 seconds)
  done (took 26.193416484 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144034938 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.143778406 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.141535771 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.142124316 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.141994549 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.144134542 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.144420217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.141351482 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.144062699 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.144491604 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14103154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.145271522 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.141447376 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.142186073 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.142121688 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141181528 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.144203231 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.142788802 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144271621 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.142293442 seconds)
  done (took 23.939906045 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.144958101 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.145396314 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.145669505 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144968802 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.146105318 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.145608858 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14619948 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.144624656 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.146049059 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.145814074 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.14627071 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.146178693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.144470565 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.145265906 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.146209397 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.144947391 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.145464253 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.145557347 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.146831597 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.146841305 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.146879163 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.146192986 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.146077589 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.145868317 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.146490929 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.146250049 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.145626663 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.146825623 seconds)
  done (took 33.165651566 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145416861 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.14585317 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.143582348 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.143960905 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.143667017 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.143551447 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.142386527 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.144681286 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.14657468 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.143763799 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.146183214 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.14653972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.145312326 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.146314652 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.146357016 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.146983079 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146920224 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.144500802 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.144590232 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144452104 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.147476838 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146051807 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.14623709 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.145480485 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144078075 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.147318692 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145156847 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.145330045 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147157146 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.145599237 seconds)
  done (took 35.445968741 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.166059811 seconds)
    (2/2) benchmarking "in"...
    done (took 1.16688068 seconds)
  done (took 3.417945355 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.145350315 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.14718767 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.147808578 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.147197704 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.145802115 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.148526447 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.148298718 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145074849 seconds)
  done (took 10.259460809 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.147479516 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.148256909 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.148242787 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.147949368 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.148026206 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.147559165 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.155363516 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.16393663 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.148140205 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.148704015 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.154305616 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.155398318 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.151159326 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.14893777 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.148803447 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.150863911 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.149139472 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.149733443 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.149400173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.148923198 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.149122887 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.151354021 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.151481768 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.145768888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.149510203 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.158794698 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.153750893 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.149486248 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.149275775 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.154330577 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.14896302 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.147301305 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.149330412 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.14966893 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.14868717 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.149589242 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.158335787 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16510208 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.157046195 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.150616186 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.149586362 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.146762341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.150012855 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.152174591 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.151539965 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.150612069 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.150323367 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.147940729 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.148733238 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.152754378 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.154420021 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.14952945 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.148834796 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.15429696 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.15200019 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.157949996 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.166195481 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.154075899 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.157847117 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.16150504 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.164832399 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.158011897 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.152883622 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.150444016 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.160818298 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.173819954 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.157852634 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.165250711 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.148473688 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.151218213 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.158365786 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.164559955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.160751371 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.151294035 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.151480852 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.151643748 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.151351977 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.153129605 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.15877629 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.170765514 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.15261072 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.152047832 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.161937769 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173574393 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.152072261 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.15234406 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.152596736 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.152089111 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.152944732 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161638833 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.168728534 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.153153491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.151772484 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.151958543 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.15380339 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.153795344 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.151372506 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.153166485 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.151056625 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.153229987 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.152740079 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.154794389 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.161004513 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.153787409 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.153310871 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.15845272 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.153860122 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.152521669 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.159144514 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.154317878 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152936601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.154191464 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.15827254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.150971229 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.156184089 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.161327757 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.153430881 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.154321347 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.153630235 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.15400892 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.162989467 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.179645861 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.155032242 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.154156087 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.158505457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.165000368 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154230359 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.157055672 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.15444322 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.152305984 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.152477148 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.155829119 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.155481235 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.155158847 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.154702142 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155131926 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.152367573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.154909091 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.15486409 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.155214179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.155226495 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.156443756 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.156279933 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.15721017 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.155634461 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.156428036 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.161678388 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.15594878 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.155729816 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.157045674 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.152567635 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.155418075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.155863701 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.156013718 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.154770988 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.156522702 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.155356266 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.155541108 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.155918869 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.156104083 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.156192562 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.157290387 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.159435858 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.157880347 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.159887526 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.155821143 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.154307489 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.15659465 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.156531944 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.156415699 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.157034066 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.154697616 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.15963059 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.164062864 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.157062084 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.15606235 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.158695661 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.156987735 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.157795603 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156247631 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.160626125 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.164051544 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.156946107 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.163725004 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.157936975 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.157128886 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.15777298 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.156191995 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.157845742 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157355516 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.15887996 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.164761975 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.168633147 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.165295927 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.15873599 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.161583035 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.157970153 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.161253341 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.16195884 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.158245081 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.157945453 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.157417003 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.157306024 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.158047202 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.158936598 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.157965224 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.158008255 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.157697627 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.158392034 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.158423786 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.157873639 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.158858332 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.158667935 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.155995981 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.159038027 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.157982237 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.157531739 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.157022828 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.157674357 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.159083496 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.158016966 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.15872819 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.165435431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.156920386 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.160443793 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160281377 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.159689263 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.157184444 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.15960321 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160827317 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.158669882 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.166087055 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.17622753 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.159930947 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.166411392 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.175110363 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.157235374 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.162538285 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.160435599 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.158346912 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.163120267 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.167661851 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.159249998 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.160416409 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.160044428 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.16007938 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1601093 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.165795138 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.158203932 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.159717978 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.161855321 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.162096449 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.158224537 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.162237156 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.162121077 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.161668046 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.163926781 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161235709 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.161136174 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.161902736 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.160728049 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.161197821 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.161007554 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.164745374 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.168927351 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.164967664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.160495345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.163657438 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.162125664 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.16509575 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.16193804 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.161865292 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.160428176 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.174341628 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.170892417 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167990839 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.162595811 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.162366659 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16697692 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.163144191 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.166127716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16241141 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.162333248 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.162042418 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.160516584 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.161341138 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.162774966 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.162609246 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.163287898 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.163311088 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.166327102 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.162300516 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.160570805 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.162108608 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.162838436 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.163483378 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.161304552 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.163875824 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.165315139 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.165219211 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.162242087 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.161553188 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169924375 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179697556 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.163870599 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.163539054 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.162555765 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.162405918 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.164279137 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.164241905 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.166064666 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.170034428 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.165741147 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.171450317 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.165282582 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172448527 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.16423293 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.166924622 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.170928114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.160616536 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.161131432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.163349513 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.163768247 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.170416682 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.181391785 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.165071037 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.167532722 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.163930004 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.164670262 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.166023394 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.164305704 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.164351002 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.164789312 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171891393 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.182185132 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.168265748 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167736904 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.161527587 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.164719608 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.164660338 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.164396634 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168139436 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.165111645 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.166926353 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.164186825 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.165123113 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.164673712 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.166375079 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.166637064 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.162766848 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.166054264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171587988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.183131236 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.169846164 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.166958995 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.173079907 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.166758725 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.172215561 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.183587616 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.166130998 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.166433295 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.165040806 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.166964985 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.165634502 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.165439962 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.166721593 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.166568474 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.169996349 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.166012291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.167000939 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.167316145 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.167618123 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.166470982 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.175324206 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190387855 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.16784582 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171021701 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.164353241 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.166886475 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.171563689 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.166613033 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.165365923 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.168634782 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.177103449 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.174152883 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.167146039 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.166541583 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.165823861 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.166774864 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.167433246 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.16772319 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.16795759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.167473778 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.167317549 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.167700836 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.170894705 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.166848431 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.16806543 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.167988964 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.168886527 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.177184131 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.167126626 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.169362251 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.168217373 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.168981264 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.168091591 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.168209573 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.167501253 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.167854897 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168594367 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.169381032 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.174306078 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.173697334 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.17064415 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.167493376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.168646572 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.168201762 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.169605023 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.169917077 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.169042442 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.169834487 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.170139144 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.169454745 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.170070647 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.167487737 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.170609292 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.1694602 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.169628939 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172042635 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.175987431 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169645619 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.167181391 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.16967577 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.169809079 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.168269894 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.169699378 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.176709135 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.172288525 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.178614526 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.177406984 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.172590784 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.169381303 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173123063 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.177099001 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.16910183 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.16905868 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.169893126 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.171698911 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.171384151 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.172975643 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169874234 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.176448748 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.169883881 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.16941628 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177632337 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.187598261 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.171620896 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.172082427 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.174431634 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.170567204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.168407224 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.171597166 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.170606842 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.177599928 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.189250195 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172471553 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.172848064 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.169529408 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.172596726 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174061443 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.172302661 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.172312328 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.168603777 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.171215532 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17117201 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.17179853 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.168873177 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.171198246 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.17020642 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.17402776 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.177488152 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.168642531 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.172916106 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.171486649 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.171966035 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171621083 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.171639742 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.169437037 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.169282682 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.171360275 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.172506828 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.172834934 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.174411906 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.172136456 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.173215746 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.173394993 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172733031 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175541639 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.182602523 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.180486112 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.1710352 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.171508638 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.172517699 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.174744533 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.17300916 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.172595912 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172691896 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.174235536 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.174415818 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173251114 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.173511352 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.176037211 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189216889 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.18998787 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.173454531 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.17393266 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.17695018 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.175421611 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.171275199 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.174711537 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.175801422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.176992169 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.18171593 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.175090219 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.180659187 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18981053 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.174771505 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.178645004 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.176965835 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.181948504 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.177487307 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174328784 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.175021061 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.17997072 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.19033177 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175933443 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.184487508 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.202934424 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.191460196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.175727676 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.173855469 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17383193 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.175041072 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.177075954 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.175238564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.175430615 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17581096 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.174844646 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.176759854 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17981325 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.177063207 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.175730798 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.175787838 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.17474577 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.176079393 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.173206585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.175969668 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.175869007 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.175423723 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.175611331 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.176040344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.176427337 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186957935 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.185809228 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.175670569 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.176687714 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.173925314 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.179686791 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.179550592 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187053302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.184049468 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.175905784 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.177146818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.177500063 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177077003 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.17389385 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.176282137 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.176037551 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.175287203 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.174233118 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.188081155 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185323483 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.18145266 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.176422951 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177483118 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.17695885 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.17766585 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.177864888 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.177389983 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.178557634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.178912832 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181229009 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.178438578 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.17804809 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.180622749 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.185180409 seconds)
  done (took 695.423204154 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.175814843 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175220326 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.174975996 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.176876864 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175317971 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176629107 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175866274 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174992941 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.175846691 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.176857897 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.176575459 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175725533 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.17594308 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176291829 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176041394 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176691288 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176645825 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.175788049 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.176022639 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176470935 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.176117391 seconds)
  done (took 25.810337003 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.178972861 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.176252599 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.176856468 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.179626658 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177177512 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.179188357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.176117499 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179923574 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.1801364 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177033832 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.179420121 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179472585 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.176281326 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.177160605 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176960399 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179455041 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.180536277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177750687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.18029679 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.177103164 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.180809205 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.177950392 seconds)
  done (took 27.039303995 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.179900384 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.180620643 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.179279089 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.178205514 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.180592791 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.177934568 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.180535636 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.180649275 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.180150456 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.180108163 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.180589158 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.181729113 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.186571011 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.185633711 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.182112105 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.180958613 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.325161247 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.181514996 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.180740828 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.180940147 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.178688486 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.185656454 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.177640532 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.179340362 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.180301453 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.181524471 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.18084013 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.181587365 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.182571018 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.18210935 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.185321545 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.180891279 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.180710522 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.183463378 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.180227649 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.18320284 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.185418278 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.182135875 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.178850386 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.181061927 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.191973567 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.203094264 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.181872908 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.188132588 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.18301928 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.182581333 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.184906903 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.189718683 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.179651096 seconds)
  done (took 59.198126577 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.182793566 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.18314608 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.179435555 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.18292531 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.183226704 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.183151981 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.182184413 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.182914001 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.181265833 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.180760942 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.183228266 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.179905041 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.180982086 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.183308552 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.183534759 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.180594989 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.180690837 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.180324464 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.181043035 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.181352171 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.181073183 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.184696684 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.18437812 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.181237586 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.184142917 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.181639022 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.181667006 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.182679945 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.18133515 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.182623389 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.185061998 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.185038567 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.184754239 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.182850617 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.180883228 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.18433577 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.183961405 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.181860226 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.184732825 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.182464426 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.184008515 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.185348009 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.184323103 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.186598627 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.183234021 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.182952969 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.182895793 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.181813747 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.183682161 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.18641712 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.185542792 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.184029403 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.185327751 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.183227585 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.185705406 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.186222762 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.183888009 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.182757007 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.184975544 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.182390723 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.182638259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.185897513 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.183200198 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.185842058 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.185234065 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.18266573 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.183202311 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.185810506 seconds)
  done (took 81.578880043 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.186801885 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.185159278 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185478594 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185151793 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.186650159 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.185639895 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.185665762 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.186226379 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.185611025 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185522482 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.185812247 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.18685436 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.186169346 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.186297064 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.185274773 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.185587259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.186375791 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.186363684 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.185788065 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.186427305 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.186323551 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.186560017 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.1862782 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.186249014 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.18702265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.186450193 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.18711693 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.186943974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186782279 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.187446557 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.187655468 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.187360889 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.18705961 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.186456372 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.187759103 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.187082737 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.187461884 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.187076685 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.187763128 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.187369857 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.187788743 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.186874026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.187871312 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.186077586 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.186859495 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.187203547 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.188165473 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.187761369 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.186850332 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.18743432 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.187868862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.187717004 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186750539 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.18667148 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.187334022 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.188903104 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188950104 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.187187046 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188411736 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.188845225 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.1876853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.188760942 seconds)
  done (took 74.710329448 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.188707416 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.188818892 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.187114027 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.18579522 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.189137026 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.187236915 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.188872819 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.189392002 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.188485748 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.188898822 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189383731 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.186537134 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185871164 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18894678 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.186749379 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187622629 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186279697 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.187849843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189852472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.188115801 seconds)
  done (took 24.884190879 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.187928425 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.190030877 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.188151329 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.186947446 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.190586442 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.187384437 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.190083913 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19046654 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187963972 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190474741 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.191306401 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.190507311 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188324287 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.187506078 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.191700087 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.188515463 seconds)
  done (took 20.152853358 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.188031442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.190623296 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.189164891 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.190753435 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.189124529 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.187277887 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.190894925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.188831374 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.187745333 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.190923596 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.190926076 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.191643221 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.19116296 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.191314991 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.188072814 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.191091701 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.188938114 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.188160827 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.191330292 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.192021193 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.189386597 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.189096494 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.191855216 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.191678061 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.189852593 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.190207313 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.189017238 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.188991771 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.188550899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.191960559 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.188517762 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.190796365 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.189450141 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.189311979 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.191827697 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.190276937 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.192412632 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.191836462 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.192230515 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.192970748 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.1929334 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.189567129 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.191639714 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.192493051 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.189969837 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.193454697 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.190028313 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.189912199 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.191182771 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.190406639 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.193492334 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.193284753 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.193308202 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.194344454 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.192137958 seconds)
  done (took 66.613350535 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193839581 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.193405644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.190919416 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.193167185 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.193081229 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.190612597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.19303374 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.19001398 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190874107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.19394983 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.191903962 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.194142449 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191302676 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.193731546 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.191644436 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194284685 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.192151387 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.191262332 seconds)
  done (took 22.592047086 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.192208894 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.192709156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.193405339 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.192169807 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.191689824 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.194961707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192163644 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.193993114 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19422535 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.192050499 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192116374 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.195243323 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194662146 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.19501053 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.192889478 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192885107 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.195518477 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194772574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.191955655 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192361996 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.195182305 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195067432 seconds)
  done (took 27.386026932 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.194116459 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.192716644 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.209493019 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.235738332 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.224339426 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.192410685 seconds)
  done (took 8.377689664 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193795042 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19464944 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193460786 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197359789 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195789319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193872078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193302298 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19260167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196551339 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193419489 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193666436 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194764257 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196399402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193598509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195181376 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196875084 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193519939 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19488633 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194037263 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196812775 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193659433 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196147285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194549669 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194315158 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194562992 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193986479 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195344877 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195434239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19329052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19709033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197802792 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194076494 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197273272 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194367381 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198608114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197059734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194303768 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198108432 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196902059 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194524552 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.197627323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197377147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197973554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195029815 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197958371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195115488 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194814796 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196142871 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195420952 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1976735 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197933988 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195637437 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198489787 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198107502 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198283139 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198197025 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195865043 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196715952 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198667001 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195357424 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195733228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198752149 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195689917 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196960931 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198230811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196680669 seconds)
  done (took 80.058969025 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195261389 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196316513 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195286186 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196541906 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196143128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194862242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196038656 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195257425 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196495903 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195973539 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198940455 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197365344 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196084452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19575078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195962695 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195977615 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196388216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196523643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197002164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199936173 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196176064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196219986 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196815112 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196993616 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197780835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200591944 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196600375 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197151357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197069342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196793288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197258508 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196894422 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196011706 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.197098064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196557641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197527919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196615565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196589951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19684983 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200001953 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197397561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200085133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197661484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197176905 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19843761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197197217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198523173 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198882433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198140014 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197410519 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198227691 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198602279 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199466511 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198317177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198372452 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19769711 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198966915 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198390884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199264434 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2009296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199018836 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197953775 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201755528 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199063177 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198496039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198777477 seconds)
  done (took 80.171408173 seconds)
done (took 1621.821703858 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.190807477 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.277673643 seconds)
  done (took 13.603868082 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.362596325 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.321541459 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.198351404 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.242627509 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.199258362 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.199415262 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.218226845 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.198502277 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.198541304 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.198550783 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.199269531 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.389076994 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.215206554 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.19958514 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.200016855 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.293424955 seconds)
  done (took 40.977151061 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.228294138 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.205443211 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.313900579 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.219881093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.226086238 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.385069711 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.255017262 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.203946081 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.369820431 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.243183058 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.733429341 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.226331968 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.204513761 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.288470053 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.221954728 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.384591439 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.444597712 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.739330103 seconds)
  done (took 28.030348312 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.644393536 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.224104781 seconds)
  done (took 9.005908107 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.242342767 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.218302887 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.200116097 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.228902544 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.232596696 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.207914508 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.273684144 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.269374785 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.197079131 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.207791345 seconds)
  done (took 63.422349345 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.222715057 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.205453622 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.205130923 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.202765277 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.196806684 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.213161041 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.202500556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.200655176 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.780810469 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.330589953 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.218630226 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.210592783 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.20503621 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.204778871 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.202012816 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.240175305 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.347979377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.202278563 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.201016489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.210872162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.206001873 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.287801447 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.245358484 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.202636373 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.327317979 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.822287391 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.20823167 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.212352658 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.330198634 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.203287385 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.20338636 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.204488319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.206914643 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.760726809 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.741292523 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.212325121 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.242747053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.213795488 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.202391074 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.33416543 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.204625872 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.212391125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.205740472 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.711009006 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.362502355 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.31787684 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.453514001 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.206866537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.206343963 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.268397879 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.206285141 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.205939916 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.234223896 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.94891525 seconds)
  done (took 104.255593527 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.216114101 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.687236695 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.369108046 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.219791375 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.057974482 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.82827056 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.198992744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.481282768 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.207695855 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.197750001 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.47698359 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.700998074 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.201581436 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.24246501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.737940274 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.230704208 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.199488107 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.094524627 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.200253296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.199144641 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.619580237 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216675965 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.199981114 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.280663327 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.238334964 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.658270648 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.603390663 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.598388886 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.200297561 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.199831554 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.664875852 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.20366819 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.239211444 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.202732797 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.472166043 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.551783921 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.528790189 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.206353333 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.204826423 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.202971767 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.228716684 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.655853148 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.540471131 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.201363909 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.200276677 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.660753954 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.20134952 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.209362767 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.200996651 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.408600342 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.102128185 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.201748924 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.605909205 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.202986995 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.491792476 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.301127683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.268412317 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.688096629 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201315 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.267147184 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.248511379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.199769244 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.208389329 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206001508 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.204264086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.544561903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.597206797 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.202073776 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.545193378 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.659743613 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.20214597 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.725986187 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.068570581 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.204448008 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.236777008 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.202555057 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.923968516 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686681274 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.202835266 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.201796923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.53120499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.20404147 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.480061506 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.223845715 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.203199707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628929804 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.22485136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.237590209 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.202166151 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.202267132 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.99325147 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.205651744 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.468636706 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.264986144 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.20370771 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.202955673 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.234276261 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.203238768 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.203702577 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.202695013 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.727884023 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.20475662 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.328875921 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.221231205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.204301151 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.203560698 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.206232021 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.204617847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.427242863 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.813142516 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.205795737 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.20297584 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.203350075 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.21295117 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302100128 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.206217774 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.508041617 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.205079342 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.204319593 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.221817229 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885172398 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.23077616 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.204181272 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.209084371 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.036015011 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.414583918 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.222580693 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.205358171 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.203775306 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.219878742 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.550983542 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.205668621 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.212049477 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.206211168 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906763567 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.2160551 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.218000718 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.773384939 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.214216391 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.206193643 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.20855571 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.205155348 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509202377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.477695641 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.51334588 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.20710365 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.206620329 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900078358 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.231157805 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.347187452 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.224097964 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.239088219 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.403364416 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.316289447 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.207611545 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.750142622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.206939176 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.425110077 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.220090241 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522373721 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.695993657 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206651299 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.211232998 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908877982 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863567993 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.862854822 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.210732553 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.483558033 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.211970632 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.660725162 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.206618481 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.208716382 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.793248312 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.209155558 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.207551149 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.207344185 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.208617394 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.26899956 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.383423362 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.085652579 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.212962602 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.664349975 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270925997 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.207137558 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.224071195 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.210675702 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.56197971 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.265941188 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.210498133 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.227902938 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.209973752 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.214077974 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.677201611 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.100596161 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.209341846 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.361899773 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838997286 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.208944847 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.208811372 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.989661349 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.52131487 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754377067 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.25449088 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.513763606 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.210610166 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.247531657 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998148397 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271051905 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.719606196 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.209996226 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.209478599 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.805611103 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.20840892 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.260028266 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.208406737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.210029078 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739267698 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.209334495 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.210973573 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.559614497 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.209994562 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461777894 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.209873507 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.256843941 seconds)
  done (took 1083.129590152 seconds)
done (took 1343.559418358 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.210516566 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.213035769 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.199025782 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.215482032 seconds)
  done (took 25.988916205 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.221235316 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.217968877 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.218890334 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.216942726 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.220799506 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.217189093 seconds)
  done (took 8.466643956 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.429431086 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.214445304 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.212791016 seconds)
  done (took 19.010114035 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.433429563 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.448854972 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.586323117 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.37227327 seconds)
  done (took 9.994045345 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.217747094 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.218400689 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.21774812 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.220441906 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.220297496 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.22315051 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.219338691 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.22045575 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.221796759 seconds)
  done (took 12.131691201 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.151575614 seconds)
done (took 81.893095785 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.211653623 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.211715439 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.071876917 seconds)
    (4/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.338282446 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.19681471 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.455074522 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.197095696 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.49103097 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.226344135 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.614138497 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.311045281 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.698703101 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.253509579 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.042055887 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.237994611 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.289327131 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.21100906 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.293812931 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.445133978 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.803815367 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.790003398 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.271555615 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.122052515 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.212608801 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.739204199 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.232576836 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.302681126 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.239182709 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.7913439 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.577784218 seconds)
    (31/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.485406029 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.435022711 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.211471681 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.215947799 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.308242661 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.218187877 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.323736267 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.31718279 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.621569521 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.808513574 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.34377312 seconds)
    (42/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.982117071 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.208603 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.202726668 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.319524364 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.5812269 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.52141646 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.32377501 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.466238182 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.238987824 seconds)
    (51/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.202656471 seconds)
    (52/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.278351275 seconds)
    (53/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.074401943 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.206217469 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.864645641 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.574622184 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.927235195 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.827336831 seconds)
    (59/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.214927244 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.202984754 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.280305159 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.23988069 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.236843956 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.691738904 seconds)
    (65/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.843349973 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.42699238 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 4.271318929 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.641309168 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.250395979 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.138911592 seconds)
    (71/309) benchmarking ("sort", Float64, false)...
    done (took 5.524199091 seconds)
    (72/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.57233933 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.280244953 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.69027775 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.215638759 seconds)
    (76/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.339252401 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.213539435 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.232222748 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.050617035 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.26500136 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.214622024 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.397534365 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.705866849 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.240622718 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.632239042 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.094993065 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.135225072 seconds)
    (88/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.846594167 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.216317104 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.241282633 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.493123975 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.228510998 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.800709176 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.885843954 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.215843759 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.678945409 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.154214343 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.20107254 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.718357866 seconds)
    (100/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.743108187 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.229655418 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.27497084 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.998111809 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.798539985 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.242662971 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.305041589 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.34513016 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.422132418 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.796335131 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.228814433 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.323276213 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.032827006 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.247825103 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.218022535 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.340838889 seconds)
    (116/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.225980744 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.243024218 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.80009346 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.217619605 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.268005475 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.224024257 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.738903487 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.241084997 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.24215673 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.217260275 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.870187739 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.570103646 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.489617772 seconds)
    (129/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.300238345 seconds)
    (130/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.550962135 seconds)
    (131/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.745593376 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.554107919 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.97657527 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.302841974 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.486937286 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.217790941 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.259312659 seconds)
    (138/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.224288509 seconds)
    (139/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.041950765 seconds)
    (140/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.943564141 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.243294012 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.763865562 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.348691492 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.236212127 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.885279504 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.270305497 seconds)
    (147/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.85463305 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.017427961 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.218677327 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.983383955 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.692419207 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.244088426 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.220786387 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.502502099 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.062581805 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.526187164 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.28425769 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.306781733 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.551589119 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.30633 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.241704933 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.218670145 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.230170782 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.264072107 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.269406759 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.585063217 seconds)
    (167/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.600859475 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.204492771 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.594488605 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.975082758 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.223502215 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.57662275 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.22302261 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.420832031 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.29615156 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.342878447 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.218971178 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.587166635 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.224364146 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.671059638 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.630733261 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.267057119 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.979016172 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.416577837 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.154221884 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.513889885 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.387840947 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.377145537 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.235909516 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.246775605 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.356598535 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.22132568 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.248882274 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.43094368 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.998423251 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.262633259 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.245492361 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.205862793 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.238237301 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.390637426 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.220944338 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.400932589 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.448142084 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.068308226 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.33600571 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.335785362 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.278374814 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.293500782 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.631042504 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.501805245 seconds)
    (211/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.857664339 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.305178484 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.705762524 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.268608472 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.638738124 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.82606155 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.248772128 seconds)
    (218/309) benchmarking ("sort", BigInt, false)...
    done (took 6.220371626 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.227000924 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.85841348 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.430375329 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.375468126 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.325781247 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.383509248 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.634676198 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.349400647 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.059942719 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.208139597 seconds)
    (229/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.287286183 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.631657379 seconds)
    (231/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.410130525 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.305824324 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.598810361 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.245543655 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.249406065 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.716322273 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.239856041 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.264135385 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.793390034 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.104439967 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.591358846 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.096035817 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.72209405 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000098431 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.674760187 seconds)
    (246/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.520719073 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.225316228 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.409840185 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.601753416 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.296970898 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.239259618 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.5871323 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.739596913 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.786939293 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.832404822 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.078640081 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.690692842 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.233007327 seconds)
    (259/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.305494709 seconds)
    (260/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.516899931 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.329795243 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.435103213 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.653712384 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.699415026 seconds)
    (265/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.273712258 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.494675388 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.250269708 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.243295477 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.896725549 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.620813048 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.529587129 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.035665605 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.479702937 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.823361808 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.239205477 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.682798079 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.906226609 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.085137101 seconds)
    (279/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.413601931 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.25406349 seconds)
    (281/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.582042954 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.224752333 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.33611131 seconds)
    (284/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.530591783 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.534691555 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.067278133 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.075642527 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.095978546 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.889694239 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.25031511 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.318407603 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.30827211 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.210670823 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.337082737 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.963216116 seconds)
    (296/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.606432096 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.077627516 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.978728052 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.211131396 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.287541524 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.610242128 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.267890266 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.335860415 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.21502582 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.226447826 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.629229116 seconds)
    (307/309) benchmarking ("sort", Float32, false)...
    done (took 5.266058904 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.2354797 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.250026573 seconds)
  done (took 888.570522178 seconds)
done (took 889.725066907 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.261238857 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.253641104 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.238457866 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.259442 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.348694374 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.27116336 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.247909164 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.240480557 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.286457843 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.288108932 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.236793129 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.270202642 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.238963159 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.237813996 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.239367539 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251720897 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.279886755 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.238807959 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.254195732 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.249455102 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.254889764 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.237013972 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.288177512 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.270752223 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.242888983 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.242085914 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.241576486 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.257226272 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.349824621 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.241847942 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.243154817 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.249748192 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.280255331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.23714892 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.23456146 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.258030567 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.250139823 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.251176773 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.243136899 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.271424245 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.676761865 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.238448575 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.241432073 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.240893995 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.241562708 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.246261437 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.23987606 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.24767445 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.252337546 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.252704121 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.66543195 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.255067689 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.24313804 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.241910714 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.252348909 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.24024036 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.244270434 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255637199 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.258860961 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255960706 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.272327085 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.246882176 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.243497835 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.257314795 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.247007215 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.707495023 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.237663817 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.247330186 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.679758672 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.24684624 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.709149173 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.249272566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.244746982 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.256089485 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.273595764 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.285711176 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.23774813 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.242300784 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.248711785 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.240035108 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.252218645 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254047881 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.248321234 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.242650401 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254981605 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.275478037 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.253306915 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.243230059 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.251412626 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.261355843 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.248935403 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.252621989 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.24708573 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.239091762 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.25300582 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.24656463 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.244445511 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.244785572 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.249381265 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.252671284 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.682865027 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259130089 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.24064887 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.239143429 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.243420901 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.256493119 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.684119969 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.243634633 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.265618937 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.292061683 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.244873068 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.275952742 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.246515799 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.258765108 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.253562384 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.247413722 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.240185303 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.276045123 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.679718396 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.257774343 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.246770342 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.241128192 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.260064104 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.2463396 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.240716497 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.292118576 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.246511342 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25754519 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.3652137 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.255478901 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.275633598 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.243538602 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.247293945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.276063857 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26019738 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.274902629 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.248359403 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.259070511 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.260749019 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.241673799 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.255673592 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.256367056 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.247216882 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.252261106 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.240467559 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.273337001 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256981383 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.258333229 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.268022028 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.365900321 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.243568129 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.278556817 seconds)
done (took 211.514324194 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.30292314 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.241290575 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.333640131 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.240753746 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.341133939 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.339839505 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.239363403 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.239957197 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.239341833 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.618319004 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.238578531 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.239978975 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.233775575 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.239402311 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.32359983 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.240983229 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.238458133 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.581594899 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.241729333 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.312315642 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.234389171 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.240059304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.241235254 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.63350324 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.233519622 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.240283065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.312422651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.242461768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.594448696 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.236666498 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.240065388 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.598901189 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.330629404 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.260217437 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.252166157 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.249348754 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.34326718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.259755953 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.322975541 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.324382229 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.335568134 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.280659458 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.236565674 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.235972806 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.244602055 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.243373984 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.240233006 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.270266528 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.24181348 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.241030774 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.583089393 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.252961724 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.241476993 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.240612274 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.241317835 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.27147315 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.241555395 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.244074889 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.331385465 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.242985139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.306168848 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.633222316 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.621568679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.243514187 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.244986199 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.241031808 seconds)
  done (took 142.345590623 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.31054531 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.316013667 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.354777168 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.244442395 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.295385065 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.359360843 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.24424522 seconds)
  done (took 10.302252626 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.249693549 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.244688025 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.295017987 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.2916879 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.242968463 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.390922245 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245238819 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.255465294 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.242237057 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.296607695 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.245994955 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.244922214 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.252160978 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.238912281 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.291973912 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.25529484 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358938083 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.245170496 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.245634507 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.39654426 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243175025 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.25294619 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.297006026 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.256948458 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.24771553 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.251721303 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.814362695 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.246288012 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.243980746 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.246304621 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242872891 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.283001628 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.245890476 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.245641192 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.242729611 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362797918 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.246100144 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.242955288 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.246735899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.244839752 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.245793375 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.246584343 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.246836756 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.242824705 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.246781998 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.268792409 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.245885636 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.247661249 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.247332005 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.248292268 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.297106861 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.247019218 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.244990914 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.24457804 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.302371882 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.254156907 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.24735232 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.243954491 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.247634053 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24543343 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.398883052 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.294692993 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.246828334 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.294696991 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.247337718 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.247822788 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.247969832 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.248024568 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301526309 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.247872438 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.294684147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.245079879 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.401618941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.27020576 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.249933152 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.251273376 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.249392098 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.248350478 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.245125069 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.252108267 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.246440181 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.249061814 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.254007252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.246008634 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246015354 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349746004 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35545535 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.246162431 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.260388245 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.25505207 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.246793006 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.301837265 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.248881617 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.245887164 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300979561 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.364725827 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.301708225 seconds)
  done (took 144.679069453 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.253494114 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.256186534 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.249635845 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.265805837 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.248741284 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.249408617 seconds)
  done (took 8.705815783 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.251268779 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.251493915 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.250357146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.2500461 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.25027072 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.251013429 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.250141472 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.250465388 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.253688049 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.250819618 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.251163179 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.252453512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.251912843 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.250850289 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.25125762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.250314035 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.251022281 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.247996828 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.251453784 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251022779 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.357132935 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.250954211 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.250272473 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.252615458 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.255796035 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.251340453 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257937127 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.251621809 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.251805716 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.25896509 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.253128693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.251984553 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.251706451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.256449547 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.255101265 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.252638808 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255564998 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.253720397 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.250238488 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.253247618 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.253717985 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.25098432 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.252095034 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.253910497 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.253016163 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.25709212 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.257183521 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.259559482 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.252551196 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.253083171 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.25419513 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.252186658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.253043973 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.254520234 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.254027913 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.256269407 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.257857895 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.252907248 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.251633039 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.25340301 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.254291833 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.252794239 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.255532951 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.256417145 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.251584533 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.254235262 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.254677859 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.256772674 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25398383 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.253048522 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.254944959 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.252229383 seconds)
  done (took 92.509761835 seconds)
done (took 399.715898027 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.739076109 seconds)
  done (took 7.925235749 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.26806614 seconds)
  done (took 7.456065383 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.943115006 seconds)
  done (took 22.13481018 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.339458688 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.246387933 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.26451482 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.245963134 seconds)
  done (took 26.282943532 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.626146499 seconds)
  done (took 7.81214296 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.253428049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.246572085 seconds)
  done (took 13.688261513 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.715858062 seconds)
  done (took 7.902511824 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.642617122 seconds)
  done (took 7.8353688 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.273514493 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.248729287 seconds)
  done (took 13.955248326 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.249290674 seconds)
  done (took 7.436130519 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.230309621 seconds)
  done (took 8.41704755 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.260852842 seconds)
  done (took 7.449748584 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.300916001 seconds)
  done (took 7.487199637 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.428011969 seconds)
  done (took 9.615634235 seconds)
done (took 156.585277234 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.246223284 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.249624238 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.24961718 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.250413212 seconds)
  done (took 26.182315436 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.28759557 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.287746338 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.28859746 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.298487514 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.291508564 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.288863399 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.280270014 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.281121186 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.2985054 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.292094759 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.290632623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.290286071 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.289438478 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.281912407 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.291793913 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.290186347 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.300146468 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.290112134 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.281134811 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.29250147 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.256113671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.300549902 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.292270573 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.257263532 seconds)
  done (took 32.087917517 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.454770891 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.328212709 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.41232624 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.309908123 seconds)
  done (took 6.693890358 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.307832052 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.30893569 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.32203338 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.360200491 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.386175588 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.317977386 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.283809032 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.276875973 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.263456307 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.30991203 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.384818807 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.324816106 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.393661881 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.256330507 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.443543301 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.255963654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.256264966 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.308510409 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.363650159 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.37539892 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.2574858 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.308283728 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.312539972 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.32556035 seconds)
  done (took 32.893331816 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.2551338 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.263544435 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.261321804 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.25636656 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.256666261 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.255800643 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.262172294 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.256381925 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.276720013 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.257499675 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.256365062 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.255987259 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.25656661 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.256406563 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.25534292 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.268612347 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.27009729 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.2557147 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.259118196 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.263153614 seconds)
  done (took 26.38906293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.249052351 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.122382248 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.601715493 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.509876993 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.24983667 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.25333248 seconds)
  done (took 27.176646922 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.331354436 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.465709527 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.25797268 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.624371311 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.699649955 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.258715802 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.257829367 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.50137277 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.827658718 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.826077754 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.319309419 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.325042826 seconds)
  done (took 18.888586456 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.253874956 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.255455202 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.254102775 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.270868256 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.313704613 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.26213599 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.265603785 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.252046173 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.317207224 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.319509537 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.26259634 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.314817462 seconds)
  done (took 36.535521978 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340000121 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303764702 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.240943253 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086832441 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.442603017 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465451741 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.154216619 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.680654494 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.258991576 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526370892 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266564933 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343767394 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.512378489 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252516369 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.258482929 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.287848476 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481866878 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7428685 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256285088 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.285122266 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279797594 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253706284 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.453496366 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.282233906 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465981083 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237704775 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.515813795 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.03326839 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549996299 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269354086 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264782683 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255335277 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529068773 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92162257 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351252688 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265175307 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.109084697 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.807162727 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.256614669 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.365434765 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258085365 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.258404435 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26588677 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253820812 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19013012 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.257189208 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691851514 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.261831335 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.967268111 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.256269616 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266948128 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349676023 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.260131905 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.829851014 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34102212 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.26211824 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.25242299 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262843605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822770201 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.757212314 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258359027 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.193728385 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.717134851 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.318637841 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885915394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359919604 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.261071011 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260318361 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191841996 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.349554019 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273300481 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394304969 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.282027753 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918844864 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990495664 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.259846102 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.188012138 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808073365 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259696691 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.194943636 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487496989 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032512932 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197378789 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.200842835 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19163033 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974902731 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266605518 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.671454583 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.264684106 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684123866 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.2696321 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274051476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281025322 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.481636132 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.141950064 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257137079 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.26522804 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375800102 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279942738 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.690412018 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194491847 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.261640981 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516249575 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.470096791 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261271846 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.30025928 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461193909 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26840216 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.277332397 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.269001142 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.271515321 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.845147941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272297534 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.762359769 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277264014 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.035328788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014005182 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26089719 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.364476119 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.26639318 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512289229 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.046530466 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162615972 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327441332 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264128488 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.258952122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.400114613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110837175 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.166622172 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.260981733 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260617185 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.272787545 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.259786852 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22131689 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.27250816 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271183029 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.037939959 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.485402244 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275179058 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537240383 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194484008 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397717622 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276577828 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.48372631 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.529862612 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.261987677 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52246772 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264836493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275408394 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274433994 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278952493 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357097846 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283302649 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.269087867 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.522345162 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.263918286 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.265528496 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.400278955 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.041800493 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269253153 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.266831748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.129418787 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854192735 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233944571 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265122408 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155640116 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.275222509 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329697534 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267756439 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.272855137 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.151384087 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.235438956 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.269780213 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.260136314 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486860541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273291463 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.397829582 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343014669 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.458757802 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.861944318 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275438652 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.196363063 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.973016493 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.954710119 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262073193 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.452386208 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264180543 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271899749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273817383 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.906261401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858947266 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26453676 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.323073564 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.269416241 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27408676 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.267230496 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263409263 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.120907476 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.795274668 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278151314 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.278261643 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406692159 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.277467774 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198443752 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.779345566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268931736 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262506799 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.03895557 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297136867 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.327364527 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746249319 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526065183 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.084380743 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278006295 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.427733985 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.29591755 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.269357236 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269037429 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273345357 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.270553344 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276346838 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.275253796 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.337903139 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.712164985 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829485942 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006411771 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802229706 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222327998 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.280517487 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167595748 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700971498 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199990048 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924085541 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462452915 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.703123383 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222956938 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464919402 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.530823152 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053937332 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276455022 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495281748 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217297373 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.280933136 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277547937 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478214592 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299838437 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.265556694 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197692524 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.567964378 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50013875 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271734756 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346399288 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696864757 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266031758 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.04449122 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.26584921 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.631840677 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442225489 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.900306563 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.661623991 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274279969 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283133645 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748324289 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.271158847 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.795170545 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896997565 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272445472 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.469784344 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206188258 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.277728269 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.277524634 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.267169286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.620515936 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.277025526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.523943287 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277908903 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20172827 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270842916 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807355862 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.121409959 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.273012122 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26761772 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020897043 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276242476 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5679917 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.27861181 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.10730445 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270661096 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202514354 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20298073 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.96106557 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27764213 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238326951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76509952 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.68296609 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.346181977 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296564286 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121419955 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5263156 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.282435302 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867055124 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494423355 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.198765032 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293138254 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.369035331 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270893679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.256312951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.162980498 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.505016105 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.128326732 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494546855 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.276313658 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.174751858 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268388045 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485845526 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.16787508 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26821596 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533179942 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.980902504 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.292635976 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002747329 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295797819 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283984089 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286816678 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.734638021 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280942911 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341052889 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280661986 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.280997257 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281326424 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446592356 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286233396 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271453894 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.28263952 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364090086 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.931456349 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.1175676 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.043516593 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875310499 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030571949 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872150529 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283461262 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270905194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271970246 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2047379 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417844874 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.79836774 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544722009 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390127183 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.827716631 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293229455 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271140645 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292144081 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486890119 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546319875 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147621106 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26985094 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957907472 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.16884461 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282750408 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.482847121 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774098796 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832276532 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391570092 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284217492 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.706712028 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546295979 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.363640622 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272316428 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865127344 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.276572826 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.652139784 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.277744374 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272241196 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434416673 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281560155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945832261 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.282241475 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.432090177 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.045759688 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.448099501 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.529585763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.769924647 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.283284451 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877295082 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994235887 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53811577 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342423808 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284036747 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.383124971 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4189322 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.271957099 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.1742755 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272635955 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120973921 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.982837936 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.282512828 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879277007 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541309264 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.27056467 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.274286928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296453211 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.283340183 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497876023 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0001254 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499995962 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284535997 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283274971 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.265170618 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880110034 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288772169 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208191829 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.277769301 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519404909 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510845773 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299851035 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.726971722 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.985649987 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833505701 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.249514128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296902433 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274220879 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998900198 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8772809 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.128421343 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775539429 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93619155 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290907609 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552340844 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.281062394 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275329205 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554624582 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.279155896 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27425791 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290888326 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.879074874 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070306401 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.279363372 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.384192926 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.210536424 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.503131478 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960954322 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217583076 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276516378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.464054947 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278709973 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394593578 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287051085 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.276726851 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279099797 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.012056722 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557016132 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.28256795 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.281554391 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.27164234 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27843902 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285662512 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51199732 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280928709 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.951466985 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.626814231 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535087644 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27626406 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.264521249 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.280314527 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276149433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995017788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2551021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.928120306 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843466682 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.27708277 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.291719275 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281333674 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.493661961 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489190215 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283681077 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290353685 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291303613 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295198496 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.182710798 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.050382837 seconds)
  done (took 1557.074214941 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.317931564 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.296682109 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.301583952 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.342443625 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.292819487 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35368341 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.377203599 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.381550152 seconds)
  done (took 51.881113414 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.291113012 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.434315491 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.30930702 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.286926714 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.286381351 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.288026285 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.752268855 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.288856836 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.286801333 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.287690877 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.291465241 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.290077447 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.955054331 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.286786742 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.283920923 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.276500451 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.287424152 seconds)
  done (took 64.405536787 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.286044084 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.431801191 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.386661807 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.281073932 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.381751559 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.278349176 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.343809628 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.309792482 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.28371334 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.320416757 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.955809313 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.29372874 seconds)
  done (took 78.771923466 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.286928999 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.286838763 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.285841567 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.286790002 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.286597196 seconds)
  done (took 7.650760218 seconds)
done (took 1967.818884789 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.527576109 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004362395 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968839853 seconds)
  done (took 5.191272856 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.425208819 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.47736968 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.636522071 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.628011679 seconds)
  done (took 7.385743826 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.568428977 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.64787136 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.472182948 seconds)
  done (took 5.907390941 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.763026347 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.29260962 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.408212843 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.280107233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.282640115 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.28043366 seconds)
  done (took 20.06188363 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.283179685 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.286899217 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.285290482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.286434238 seconds)
  done (took 6.361654891 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.264985643 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.993912716 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.266306804 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.283854205 seconds)
  done (took 18.027510904 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.031592049 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.044243241 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.028439448 seconds)
  done (took 7.323350545 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.296447767 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.12841312 seconds)
  done (took 9.644479102 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.583538803 seconds)
  done (took 2.802587588 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.415597475 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.61235604 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.379284924 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.283906228 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.398647839 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.27767607 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.998883206 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.553161487 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.273248102 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.563281564 seconds)
  done (took 27.975678819 seconds)
done (took 123.890830529 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.215846643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.302933273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.483719106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.188457313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.514469354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.483964762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.560374125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.156115863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.697131039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.686389758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.193651898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.51477416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.732119965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.30418385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.729324701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.302515698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.513554928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.256723763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.877691773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.120794105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.561276283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.824303051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.022089791 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.846252744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.514035845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436597313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.408135604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.305420804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.052265354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.426461045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437950367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.285208894 seconds)
  done (took 190.175793673 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.281777266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.2979761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.282322394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.282802815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.297439785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.283908954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.285780388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.293164427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.293494959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.283373676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.298615475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.302574562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.284482482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.298380878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.300817905 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.282725994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.283672285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.283423953 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.284560937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.283170463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.299532002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.29650216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.283456741 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.290453766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.283307959 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.28621775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.283819791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.284325262 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.299795726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.290286739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.291097802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.283833565 seconds)
  done (took 202.479953416 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.283469638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.284819825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.284599595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.283269528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.303509422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.286213817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.285802525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.283636763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.284812958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.284045921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.284390121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.283206141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.288257346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.284839709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.30739533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.291617417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.28476466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.285703003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.299784441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.297950875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.293158425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.285436487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.284765828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.30613644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.300012542 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.286671565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.299798553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.285005052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.299926548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.288622962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.28768854 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.300612575 seconds)
  done (took 202.515034754 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.489790001 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.292824702 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.294392213 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.244220592 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.294024689 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.293004062 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.284507638 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.485382257 seconds)
  done (took 13.903363553 seconds)
done (took 610.293486423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.608320105 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.322913821 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.492860677 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.315304569 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.085651338 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.314543798 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.314077642 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.488478229 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.222803136 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.491137072 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.568545427 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.311977714 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714318492 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.311525208 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.565434029 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.41201567 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.196452194 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.31236812 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.631469366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.850387919 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.579072447 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.816725798 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.491167972 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.244293463 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.713337776 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.785642332 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.072659664 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.200303949 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.313357119 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.635291002 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.992438339 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303578744 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.374580148 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.35555577 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.410609011 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.391819373 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.274436985 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.354981721 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.495361092 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.554422524 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.858608399 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.042290438 seconds)
  done (took 90.018677954 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.282714012 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.28227118 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.282929054 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.282296315 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.28464773 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.283631555 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.281801601 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.282569881 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.282423993 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.283097406 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.283228862 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.284038376 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.283194619 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.284079859 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.282935272 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.28328743 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.282593143 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.285266635 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.284288013 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.283303439 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.283551218 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.283004504 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.284190957 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.284108998 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.284768985 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.28433305 seconds)
  done (took 34.59762369 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.297622553 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.552777237 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.726268458 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.305863114 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.297138549 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.300464328 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.37776487 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.300337473 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.299754969 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.300023772 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.452125645 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.301318027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.333828724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.749541248 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.302265055 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.298901627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.298172885 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.296659598 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.561371597 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30682067 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.398178146 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.298672635 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.376842765 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.308102737 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.319329816 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.298496652 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.301779107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.817415434 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.299806766 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.454842355 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.113451303 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.378768424 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.769698272 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.732494967 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.118320353 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.302620749 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.299430281 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.465173073 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.300324211 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.300123904 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.377594602 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.300097989 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.728681023 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.923463919 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.315955959 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.299793888 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.837996564 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.458314118 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.554536319 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.307599591 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.751572975 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.302168404 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.301425735 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.300039958 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.554692274 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.306480934 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.298752352 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.83350088 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.321177476 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.379555168 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.300597024 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.300421518 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.575494854 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.300037716 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.55601335 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.30085448 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.310995878 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.300426934 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.731440422 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.303651525 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.945233865 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.318193027 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.300538941 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.455520448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.557668809 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.872973216 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.303427753 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.579878609 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.783380358 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.37899624 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.30344968 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.807538266 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.382972545 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.303861076 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.304085953 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.30388971 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.30186509 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.352573204 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.379153952 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.87632899 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.935635272 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.848897204 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.399119222 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.314836868 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.302544342 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.833993331 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.320907865 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.301653563 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.72716057 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.947481069 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.318970892 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.309142539 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.929387431 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.321001639 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.383380075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.30676821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.738021749 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.303036614 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.354187208 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.303788141 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.309601555 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.305925295 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.383286959 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.30649386 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.303684826 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.91693967 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.479104142 seconds)
  done (took 171.995556915 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.295852719 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.296724883 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.299886947 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.294532796 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.295809341 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.309848086 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.296306871 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.297320546 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.301605394 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.296731232 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.296922604 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.29877084 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.297646432 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.307634372 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.306850902 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.304608013 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.908731745 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.298234153 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.296691403 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.29657222 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.119472479 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.301227572 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.298324404 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.296990707 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.298012627 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.299006468 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.301223274 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.316381619 seconds)
  done (took 151.063137389 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.305646706 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.89090052 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.305001788 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.440666578 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.326118622 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.302490239 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.438171131 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.363662649 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.305012049 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.302798161 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.303726424 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.619065746 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.305631526 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.835143434 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.502895374 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.442117161 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.840324683 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.305804944 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.303031608 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.303989275 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.44277999 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.314579378 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.619603245 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.89223321 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.306259844 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.892891722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.295300608 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.305824341 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.303621467 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.896227749 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.304750202 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.621694008 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.383865627 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.3663202 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896037167 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.837784269 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.838327474 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.456261218 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.307452526 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.303936543 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.302458672 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.294507015 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.921833631 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.311706051 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.30599615 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.915342071 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.327443784 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.306569184 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.314763639 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.304221537 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.365675239 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.367262492 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.633944843 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.932230378 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.389983365 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.326496765 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.44053301 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.68169843 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.308914591 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.838044763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.294145338 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.928176547 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.313170337 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.295865413 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.307335289 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.31215736 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.463270278 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.444882106 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.843194087 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.30949109 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.841439477 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.465311803 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.308626109 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.306659405 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.308634974 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.897617568 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.843124785 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.465729528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.450746414 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.510036423 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.298027804 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.307024757 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.297478019 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.387169775 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.307372726 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.899841125 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.84394736 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.309644745 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.309968528 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.30937685 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.309629448 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.492098734 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.90009739 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.387207978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.83617034 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.640178067 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.626339036 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.30931582 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.368328594 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308244652 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.627395253 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.311217627 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.368248602 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.744634984 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.6262443 seconds)
  done (took 157.192127087 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.565051963 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.536925198 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.399942305 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.426068385 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.901824467 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.884382787 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.575898194 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.432994577 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.419022177 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.556551278 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.492257802 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.398686896 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.483260852 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.382704421 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.057061766 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.378826008 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.40308515 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.434316806 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.406864904 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.336979633 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.953123985 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.598628214 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.482538831 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.288734988 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.404830677 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.120230777 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.868021378 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.849340114 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.48333597 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.630172097 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.846299991 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.450111887 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.297400054 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.984229975 seconds)
  done (took 63.971074982 seconds)
done (took 670.06177117 seconds)
SAVING RESULT...
DONE!
