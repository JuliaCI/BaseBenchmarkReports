cset: moving following pidspec: 27177
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.376594315 seconds)
loading group "string"... done (took 0.512838786 seconds)
loading group "linalg"... done (took 8.549394821 seconds)
loading group "parallel"... done (took 0.174376899 seconds)
loading group "find"... done (took 1.280424245 seconds)
loading group "tuple"... done (took 2.022510017 seconds)
loading group "dates"... done (took 1.337578746 seconds)
loading group "micro"... done (took 0.204956165 seconds)
loading group "io"... done (took 0.566964535 seconds)
loading group "scalar"... done (took 41.102682379 seconds)
loading group "sparse"... done (took 12.796455229 seconds)
loading group "broadcast"... done (took 1.142195843 seconds)
loading group "union"... done (took 13.980126115 seconds)
loading group "simd"... done (took 4.857894657 seconds)
loading group "random"... done (took 9.73284994 seconds)
loading group "problem"... done (took 2.197310469 seconds)
loading group "array"... done (took 23.320756276 seconds)
loading group "misc"... done (took 1.072148304 seconds)
loading group "sort"... done (took 3.528976272 seconds)
loading group "collection"... done (took 20.770688386 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578122494 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132629505 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143939708 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172427336 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20031026 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136125935 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153893484 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459387361 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.011065073 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201037076 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138688677 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.497979445 seconds)
done (took 5.576603551 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222733912 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081998783 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12473898 seconds)
  done (took 0.906508506 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073251033 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171318953 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091966121 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107198775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107390254 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091839245 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107056587 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105229896 seconds)
  done (took 1.481511963 seconds)
done (took 3.394047909 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.735701208 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.823807031 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.516072319 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121144279 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.151784335 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126104322 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.297580659 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.146683706 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117840837 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114406352 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172438901 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.384669598 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.471609078 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.963232518 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091030419 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.123489074 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.077174496 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.731227191 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077804238 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114898801 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504107669 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.103697264 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.111856695 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125025904 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203462602 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111877763 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.177659028 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106026514 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681638971 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099254107 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179528993 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.093703947 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157607651 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.21031863 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.090341527 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089062235 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674879295 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185970803 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.106235011 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.090831795 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684447257 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075988516 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190265008 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104546975 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106830584 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192806084 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099274804 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091088941 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081476325 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100149535 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.153896113 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45659996 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102822706 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140302651 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092197983 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.724909274 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090702196 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152280031 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.120482102 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106427713 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080090577 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104523048 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156510974 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095224125 seconds)
  done (took 19.506907447 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113646228 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136113283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090275658 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134991958 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136125686 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076390329 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097686951 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073609311 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123065305 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17859982 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134366499 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140905657 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07347548 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092276126 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097895752 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246914266 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115853392 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101417521 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094288975 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086508778 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136128194 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09104206 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106617277 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106552472 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165079204 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201356876 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104884211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119987611 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090043333 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097293349 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13866639 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157705316 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072647495 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089259697 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175398116 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102817318 seconds)
  done (took 5.014063713 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191920541 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097968594 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.196596162 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170201592 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142423594 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157982371 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10378381 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259428939 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181540863 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160454751 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126077751 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112041215 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075820522 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092580606 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075354201 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.701761708 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1645027 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142724793 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119655241 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099312558 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079628356 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.70212616 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082191393 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094444221 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080931752 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085172112 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165233406 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158969748 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097803567 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.193850363 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09641402 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106056703 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128191882 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191187282 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123278696 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128973661 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083190107 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094261033 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194120406 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085292801 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.091607828 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.099979272 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130699962 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132294572 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094170228 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086535212 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241238292 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078524253 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112523503 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.999127798 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.20945751 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090997613 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09186658 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332445377 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095128964 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09806742 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077328073 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282839934 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115564802 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092950161 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074139413 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09983598 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076636725 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094266699 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387688834 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084938915 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.974718932 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079243584 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151644904 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094969177 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09877969 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082211269 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081136643 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11571126 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075464959 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095013638 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074967967 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092873091 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0797049 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112973709 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095849501 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076882692 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142729626 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092851441 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095690103 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113546814 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121614452 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080612529 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074090673 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126545565 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093800803 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07963147 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094979683 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119415141 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10073528 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10915205 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095298963 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122879216 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091634883 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.165137635 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092966681 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10352804 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096558451 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124793817 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114057401 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07588495 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097574409 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073922667 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093418406 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14398848 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090771223 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077286143 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094963966 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089891892 seconds)
  done (took 23.228546468 seconds)
done (took 48.45017076 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.37947316 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106988079 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106367471 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106787661 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104438088 seconds)
  done (took 1.579477474 seconds)
done (took 2.332484461 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.313338641 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192897234 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084432819 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167894885 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099948748 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174254322 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157559992 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114239591 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18491781 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096147576 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162453512 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09498371 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084197438 seconds)
  done (took 2.70462513 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088354922 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112265802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077059003 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086271837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087957958 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086985518 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10143289 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107202658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101920936 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081570508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087272041 seconds)
  done (took 1.768247123 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087491777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094163502 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092450142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08610779 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086732031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087191972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102010034 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096735141 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101977365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081914615 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08695485 seconds)
  done (took 1.752525401 seconds)
done (took 6.968119667 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074293654 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.605899569 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099057116 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169081601 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.325625529 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195771854 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.631043744 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13411286 seconds)
  done (took 16.180673349 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.107110977 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10923593 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075665242 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092434341 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076744992 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092629058 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075523715 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094532921 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078793652 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077310402 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094226868 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074715997 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090455263 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078360867 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091961904 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077934753 seconds)
  done (took 2.202679887 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111097695 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109602642 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098236454 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084341337 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097285152 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079366233 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099491328 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080774337 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094480935 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080207722 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099828582 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08249472 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097825147 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077947147 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097803009 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.100297007 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078226866 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09848612 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082725535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098538082 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084056579 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095542815 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081706482 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09927423 seconds)
  done (took 3.067338399 seconds)
done (took 22.200498288 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160798142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080296038 seconds)
  done (took 0.997403603 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096345831 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114455488 seconds)
  done (took 0.973221182 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101869977 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093088673 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129714021 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092985876 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093099595 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.075787434 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125610025 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093494936 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077065017 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076717276 seconds)
  done (took 1.721247728 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081238082 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080691794 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10155131 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113904112 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087808301 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09516967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082226854 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096868316 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082499119 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091839783 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084489731 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113826914 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100246559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097342818 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097443914 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08306845 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102170029 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09743353 seconds)
  done (took 2.454810828 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075658269 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077807418 seconds)
  done (took 0.916041868 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079167153 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075385639 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095421279 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094743929 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074929783 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073998156 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091546221 seconds)
  done (took 1.35040168 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.461430986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177369818 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318192227 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109223265 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.130008996 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336809385 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.128661213 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108138664 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109264673 seconds)
  done (took 2.683070441 seconds)
done (took 11.856127458 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087120511 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127721995 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.46963013 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110844463 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074260813 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140993738 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.248306836 seconds)
done (took 2.024389467 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332459412 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117388745 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082783459 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074303376 seconds)
  done (took 1.369591426 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074556195 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080856661 seconds)
  done (took 0.926811681 seconds)
done (took 3.066064717 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074415974 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.121878495 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073675169 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070845953 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092747474 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071840958 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090378044 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070933329 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073796442 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091859109 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074274714 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08980595 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074075288 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073348221 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088219182 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071587976 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09045447 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071285527 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.190025014 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087561319 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073619003 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088775631 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07146149 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074158008 seconds)
  done (took 2.853471672 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100109325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091960977 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080176421 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097447997 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078563731 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097805616 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080700064 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091043264 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080640769 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093729881 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07901599 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094697426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077428566 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094973815 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077407618 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095077072 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080303067 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091509253 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076480766 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095615756 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08064407 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091682097 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078748222 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096721376 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078562528 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095827345 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077978707 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091477771 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081072922 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095245263 seconds)
  done (took 3.39622502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080772878 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071396859 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089331707 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082726355 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089265385 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07697663 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089181225 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07253407 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077074381 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088859765 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077793698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088686003 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072170448 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076853101 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093497229 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07950485 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107064201 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072667723 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089060322 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076678925 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.094016966 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.071676342 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075550593 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089221569 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.07181367 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089352348 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072923933 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071586906 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089738384 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072131118 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093692462 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078637891 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071677932 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100442577 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078719658 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088472576 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.079500865 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089329715 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07680894 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071644675 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090290101 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072330298 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08901481 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082595153 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091739797 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07552091 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.073136685 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093352763 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075400224 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097161174 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072296453 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071821187 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094499889 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077135215 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095311586 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071543416 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090609592 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07207723 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076892946 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089000172 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072236731 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089627588 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079662337 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089945789 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096425855 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10083331 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073242736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0776139 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093419798 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080037803 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094728255 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090635614 seconds)
  done (took 6.746528481 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077116999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100794107 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073918047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074188405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087959074 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073667399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09677632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07319307 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091834617 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09151959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089910474 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074914652 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091260615 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076582523 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074041275 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091769069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083706154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08873682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072748866 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093907563 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073171245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096535097 seconds)
  done (took 2.632981126 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214488533 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101000906 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135535376 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091507254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110154494 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109668569 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07995875 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0984802 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079800174 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100041209 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083364478 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096580911 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110714873 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082205398 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100566011 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084959167 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096163563 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083994617 seconds)
  done (took 2.643297863 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088303768 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093269195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09886917 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093222713 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078396441 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095606042 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080921809 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108474847 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07708758 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093045496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085598017 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09465147 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077164752 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093150899 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077992375 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093240116 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076873291 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075400903 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102756366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098781958 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080993447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104094672 seconds)
  done (took 2.755661895 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091724667 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09497301 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096710547 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097054536 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073842871 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094060835 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083505611 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093164511 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085047359 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094539811 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074798554 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093148307 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082993842 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092831776 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081811237 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092934734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076800363 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092519892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077341304 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074429838 seconds)
  done (took 2.531334564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116415459 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1069075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089634268 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117700351 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092223226 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107557663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11816432 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090471766 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107512627 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103807896 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10622721 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090250445 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118245937 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114333149 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090402616 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118698686 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119258029 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102149894 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107045056 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090706116 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121245612 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107160616 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100935244 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107467878 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089632718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107312007 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090310208 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114151892 seconds)
  done (took 3.737075928 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074839063 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07477145 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090459715 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072942455 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07252349 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090293353 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07277938 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090320393 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074595441 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072774876 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09255023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076136191 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091897779 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07492825 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074320341 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091694221 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075126302 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090226656 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072609644 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073155632 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091943002 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075271207 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092074542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072399375 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072952082 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091996144 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074151829 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090034667 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075136834 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072585186 seconds)
  done (took 3.19777987 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083288578 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097998203 seconds)
  done (took 0.97561829 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073443576 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108890067 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072114083 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078817369 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099397543 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075655574 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102978316 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097985483 seconds)
  done (took 1.500639862 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099059017 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113372952 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082047513 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106047119 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094140473 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112139281 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155481423 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081312335 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.100972157 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076514858 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113528783 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075481857 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083090465 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098599953 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085282614 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108116741 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077295735 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10363603 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084355838 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095111013 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08279241 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109365986 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087509885 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101433367 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078684993 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105691077 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090088691 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10527334 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081765684 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105852904 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084258553 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087292785 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080449811 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09970632 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077063408 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111271515 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094621641 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099058318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086593 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099143583 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084847361 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091646225 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087859299 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10067723 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08876045 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098754829 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08273756 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092367607 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076636845 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.097087181 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074322054 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080877369 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087839177 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085946867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103167003 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112340831 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079079742 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080810253 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098347649 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079878938 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101174217 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080326418 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10452674 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079856974 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103672542 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085148502 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101493436 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075331507 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088093725 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077515078 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103325558 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100242863 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106068193 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082646173 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100657524 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077654592 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100565553 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083436879 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10248395 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087441054 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099324246 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083337708 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105352192 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079638689 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098537273 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.083071438 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078589528 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097110836 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077204259 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113156366 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078276637 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094389532 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077603138 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106039285 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081863105 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098062407 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077406476 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104349763 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070697611 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09948116 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082888319 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100204486 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.08803319 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1002037 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082338399 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10282903 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087214556 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100188998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080062984 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072440233 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100817003 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079763459 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.102701529 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070729713 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099892258 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.079829188 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099275506 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.087001576 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095955946 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.080818226 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104348601 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087145309 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09655965 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.073013183 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080069449 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098512567 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086443807 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106009338 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078770895 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093577535 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0765215 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103396338 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081386515 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101494918 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082184461 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100051663 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071277501 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096202141 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081955988 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105294531 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079647481 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101115229 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085140228 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101691346 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079854812 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104786263 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079132386 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076767208 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103440567 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080984451 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092404829 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086870276 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099051372 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.07974135 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099242736 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087325424 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09860992 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082988875 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09684961 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081245155 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100704063 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076675438 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099994739 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078638342 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106181367 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080172333 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075394188 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091706245 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.0823824 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095396512 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080259673 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094835548 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081633911 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099939177 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077204928 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079968179 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097422558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094609308 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107470288 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083158128 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101312881 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088327844 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098648731 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083653976 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098937218 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083280281 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099953236 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085214396 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102634509 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082721567 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097792695 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.072846791 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101805186 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087799345 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094829054 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077391094 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077474488 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099422788 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088309933 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098610933 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082931699 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096226024 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083520516 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104887413 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08156349 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098655902 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076693876 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100109882 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086431805 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082364721 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101169415 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105811419 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082035385 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075070991 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103821098 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07876234 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103436496 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075996282 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095188082 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078365631 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101968616 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079848273 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09719206 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071129226 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086387324 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104910146 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082215447 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094729153 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082081983 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108767472 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079743864 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102102448 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081581089 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102406731 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095391505 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095501745 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080861479 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107395964 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08181683 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088607644 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084665445 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096813006 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076665809 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097700421 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079062506 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082452681 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109507465 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08207663 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088052051 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081600689 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09701171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078085856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093965455 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087519785 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100097992 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080873364 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109293071 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08328972 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100705455 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083731971 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098887607 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082275798 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101651292 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082250604 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082344706 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.097433436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077002976 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098803597 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077412719 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095493492 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080612349 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099349491 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082133796 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101920516 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079587236 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104385389 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081478151 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100822538 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098593921 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096889523 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.077481971 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100290504 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08391178 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099062871 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081083028 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094036111 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08721749 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100469998 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087133884 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09891725 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073746198 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.081823061 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099448104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.082575789 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101239343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083358079 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099258676 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081299993 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100066728 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091482122 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096800418 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088577829 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102423702 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084471135 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100693016 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082925114 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098900681 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077761103 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081814687 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101635155 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08301379 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100077766 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084938552 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100370904 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081269906 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099258199 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083898784 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100389494 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084148462 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090281583 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077119032 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.077838419 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101716672 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085521209 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101331269 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080916202 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098636577 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084185241 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099442652 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074079568 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103452902 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08457722 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101940703 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091150584 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096471182 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081795431 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110835861 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071151166 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079010407 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097289168 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078472016 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105978262 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08273164 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105364591 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084190985 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.096164411 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073997887 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101211163 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080303619 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07215862 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096132946 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085035502 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098477848 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080658346 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101466043 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084996677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102487167 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085833265 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099863581 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081959522 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100569382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074702343 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079051545 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095932596 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08215383 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101029458 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07941135 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09275308 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082210826 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100141402 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082697696 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08094866 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099376095 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086744247 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100446109 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081790851 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106626663 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071671496 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10084507 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08114716 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099446225 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077770372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101223187 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083070506 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102255216 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086392229 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099687596 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08418633 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080964131 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097382752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081785577 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100091893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083447498 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096104802 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083511195 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107076969 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078231544 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101203964 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082863747 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09817477 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083081444 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102301733 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083085497 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084630011 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100840831 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081833741 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103914851 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081886103 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102821555 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084062599 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099303018 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086712282 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096148647 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08918189 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101231703 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084078312 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098604412 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078894298 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099586959 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081641917 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07968777 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106057007 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083283866 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096889851 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078107233 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097338607 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.081741607 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105490121 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088661226 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101020731 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083427629 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095108836 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.073968074 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103187184 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079206704 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08088658 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102808828 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085994707 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100783369 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079576009 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099063738 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.088585743 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10475338 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084780749 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097353958 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084900085 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101906678 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082779948 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098884189 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081555869 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102228782 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084362433 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099892573 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078014619 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109148091 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086395374 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102353644 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080557151 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102762779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081512705 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075909557 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102944505 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084064628 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103202676 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083019752 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10104621 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091006055 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095835888 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081752692 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106889966 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081607064 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10583456 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076590648 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101221123 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084306469 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102049554 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076103568 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096553663 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078878319 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082280646 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096922735 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076660881 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110922217 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08723312 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101764566 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081187104 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098686378 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076575196 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095172905 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07814366 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102069223 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.080940526 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108898627 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078136433 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078095854 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094968513 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082039322 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102823686 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084654426 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093557344 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076811453 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078022464 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10260305 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108176349 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080526479 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081884867 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103011119 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083045302 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096877913 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089058385 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093906917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084001056 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113154835 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084019743 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103123464 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084808668 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108083172 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084173449 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095326447 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084822595 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102693171 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08344423 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102769669 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083617941 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115929494 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083236722 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.096773615 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082089749 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101104582 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078575901 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108758885 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084999905 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102556155 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085769132 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080343539 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103763979 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089319311 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103494425 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08248907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10271214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080886896 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100613878 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080140056 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099067862 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084694838 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103160435 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08300395 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103937009 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0787046 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110946949 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089414216 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102749361 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074647703 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.0787894 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097947183 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077236002 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102184654 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077345152 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098966407 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081191138 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080437287 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104084359 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083583299 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102106722 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084538742 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100699797 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072920427 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104799207 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.082973604 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103843744 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074864939 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10135236 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084522313 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105956616 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087960133 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098628851 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08275344 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081503026 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104196805 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076419146 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.103800283 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081410566 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100343921 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078991599 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101214387 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083992791 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103171658 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084299331 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103987318 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083989675 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.085930401 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105879265 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.074669117 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093515879 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085503355 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097799438 seconds)
  done (took 55.015901057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121411588 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103383882 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073437727 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092674319 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120189024 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077966121 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073469778 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096333666 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077922944 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105833195 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07343506 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092206739 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115129658 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101778756 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117668218 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107131735 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073797596 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096757637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073850443 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097304056 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09541282 seconds)
  done (took 2.827397074 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099064065 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110424833 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090311484 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116806142 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103677914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091728174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110110487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11125574 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096171019 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107067005 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115009692 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091887004 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105002157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105783092 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08640616 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107751431 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095167582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104078167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112515319 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090358865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108311685 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109965702 seconds)
  done (took 3.111079272 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087745778 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081416536 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106683867 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073626551 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101548396 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.07287833 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106062288 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075347876 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10542999 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08219805 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080039367 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101322722 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086784254 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092819085 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.081009899 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094186102 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.085859826 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080924217 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102135126 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075926121 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120590014 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09556908 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076744169 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079387952 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.110924893 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082456744 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100223123 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081678771 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098297106 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081965937 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094507847 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08440853 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103838985 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.079918302 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.078981971 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101564318 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082722995 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095154437 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078866268 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104176028 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077166966 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08290705 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108667276 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078102102 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094801513 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083473795 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100837183 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.07333812 seconds)
  done (took 5.14871526 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113973303 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129534933 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101588398 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139312212 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117563121 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091858392 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102458217 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140877771 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.075431654 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100803549 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.09874574 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116564891 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102479409 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088355276 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104438458 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082920795 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103247567 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077213329 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10592672 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078360779 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107081994 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085227522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116079674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113056972 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086821896 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101085975 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077791831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107714177 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113254708 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088728316 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107072282 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088877912 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117540914 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099910713 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078628841 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103516432 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098610315 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102218415 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084183019 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09636274 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08521972 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107166134 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103976681 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.099574755 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102001989 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083720402 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101711623 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076038958 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113548325 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104619225 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092842198 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116694649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087146596 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101898099 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107691752 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097680126 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101465458 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080811581 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106695788 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115420421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.07644725 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106115362 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.095598844 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103734641 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092376113 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115662065 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10340109 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086278536 seconds)
  done (took 7.798177245 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111131651 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107866887 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100099054 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12033472 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108009608 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088129777 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106193636 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088980648 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107359083 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115005 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087810422 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155126611 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.103934066 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094006883 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107414681 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088045622 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107277318 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088242977 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108180611 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087464901 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107902947 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119383319 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08772649 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119826164 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120020367 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085199269 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107115214 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087799018 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119435139 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108110386 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10130202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107254309 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107213477 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099868476 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119826912 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107027456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08182656 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107570776 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088208273 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107724631 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085192904 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119317954 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087229764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105479701 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107988885 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08901633 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118315635 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120200987 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094572735 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114144895 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088284009 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119169074 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107118264 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088283725 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120850356 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127239132 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119745847 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099625914 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107946933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119972898 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09941214 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128528839 seconds)
  done (took 7.39285895 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111379261 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114717522 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119162747 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075390682 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096547432 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087319516 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09585872 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.077748975 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114503323 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0938477 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116326135 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106238649 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090657952 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11675151 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107026371 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090821951 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106379149 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0874475 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114094701 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107097955 seconds)
  done (took 2.885538743 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08817141 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120495035 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080059101 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107414703 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082801875 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106873806 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081644919 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101296273 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080163071 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101918434 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092798372 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112690934 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080653195 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107539009 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111310119 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086716347 seconds)
  done (took 2.397864867 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101053156 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121609343 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126338867 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084266266 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076614917 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103276243 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082022242 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095616142 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075204852 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108093035 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085943399 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105745075 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08255814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097323973 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080572467 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085890116 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096331431 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08273926 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102432833 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103876393 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103981743 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082657033 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10422629 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080968803 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103143803 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084713031 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107292771 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076776464 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09980996 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083488545 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103054451 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087123594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095809245 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084593863 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097791443 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077715099 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102452512 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083666231 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105490288 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082404356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.097607347 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082675855 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081880834 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101891008 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075164605 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.1031665 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075536116 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105109887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081368622 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102748091 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082598987 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108741607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086526587 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110895861 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089391059 seconds)
  done (took 5.991012504 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095062088 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103338156 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085170166 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097455628 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083277035 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.087510726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105626617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08181061 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102105618 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077075589 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102028013 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084909619 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1019877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084146928 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102221858 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08471797 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094921873 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081851801 seconds)
  done (took 2.519449285 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085427747 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079452796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106923798 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079763495 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099717958 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082044843 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095885596 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078594506 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09749093 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080669376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079627333 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102663301 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078750339 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101696783 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080571388 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099221165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08174207 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077520096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101092109 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075716504 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101602034 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079058884 seconds)
  done (took 2.811130058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097249017 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131551038 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094148819 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142485419 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082917121 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104721457 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.093002559 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105440541 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.122141623 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.084062872 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082185189 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104966226 seconds)
  done (took 2.110976305 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10384205 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136351012 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081296183 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103175752 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094139544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107324348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0848709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106204977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119145229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098092613 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105298603 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118870011 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097958506 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117065635 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113715378 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094408405 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105288191 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104844937 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081285769 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128918868 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084422145 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119837382 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105008741 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085364807 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105152213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096124209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11922417 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118422722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104881868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099783661 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11357577 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085201113 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118987281 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118897756 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082411151 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119232702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105347631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128304138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095015948 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117054708 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082787127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114290139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119297626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092815661 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119307636 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105103946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091791512 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105266401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085040015 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134600077 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114754994 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117888035 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094098394 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119682723 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119027679 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134993163 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119868328 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097895461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114645586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118911499 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095639561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115104814 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117231913 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119866284 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093853717 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117414699 seconds)
  done (took 7.955152919 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119805615 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102346186 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085125691 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122025675 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117099377 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085459206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105811793 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084475913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105877255 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080828814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150692426 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106899344 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117081148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096815724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106714447 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105933765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085879324 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116606967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082234829 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133794291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104629321 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116770299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09748501 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117790122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119065795 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093201516 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106049431 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104849079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085099703 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105801033 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092268866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106066607 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117668824 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082145617 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11703456 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085632523 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105661518 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093318267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106689375 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114547073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097849677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128842587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106500374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086378488 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120660159 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105997976 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086124563 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102311799 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086037568 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102233029 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099281884 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119309382 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120144417 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119039563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085761755 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106274026 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08622164 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105822299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085744281 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115326358 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11686415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085330745 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133884694 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105941861 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085958755 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118172488 seconds)
  done (took 7.767677961 seconds)
done (took 149.475423663 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098540543 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136524832 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094809189 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164813144 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080956606 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135645742 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114187219 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116439693 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080471747 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079879286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101305139 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084632266 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167096669 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080710008 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101058442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084557794 seconds)
  done (took 2.591589092 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176543583 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281181333 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101042045 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108228858 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086791718 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103810558 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085838557 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108322183 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082488174 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113445051 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08381398 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103047444 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093317724 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103725731 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082205358 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102710139 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.093056013 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103923863 seconds)
  done (took 2.891804355 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111802103 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145395619 seconds)
  done (took 1.133895961 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117199274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180844282 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292206492 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.132920095 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.368559623 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123545324 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156554298 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100837555 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197873585 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125185481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125176684 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086333885 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133756034 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113185286 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090983786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107904847 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.114628739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109375007 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08775404 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108834211 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132471187 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089377239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112904577 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08908307 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182194505 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123200786 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109327441 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08726763 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.10851848 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088491478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112848063 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101452801 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121986423 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162769009 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113162449 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159483865 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114641642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086236074 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109030108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085730725 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113007165 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111591199 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100793438 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107535992 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08763868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114440859 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088329625 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10824436 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09474353 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.115774765 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115216218 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09309218 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179776326 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096047824 seconds)
  done (took 7.565623537 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.780626676 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148587073 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085941131 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.889982245 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112271077 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122099569 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787425762 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106220151 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229988583 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.804849514 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098812676 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121182169 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226893882 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.24845584 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137897575 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308847592 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.68624625 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098805377 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135237081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144807371 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092628145 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134638092 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125488261 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448286024 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087722489 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105932585 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091605117 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117460346 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157691078 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085673939 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109711212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175068542 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260113739 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199197344 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086982941 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105073231 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085037778 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.164275671 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264023822 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213405796 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.148720178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104296278 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08482684 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118150138 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126348979 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082104502 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159790632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169494476 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190714232 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090428848 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117891674 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095328968 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117959943 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157798469 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082565001 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333962286 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337064453 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084626955 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117084534 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12329999 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240784297 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107736599 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201810925 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134235903 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211269705 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08501109 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779034228 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164126126 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083814621 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115114023 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092891516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114262321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117488776 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142703216 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387172206 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12140693 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087810167 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106219014 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.201949106 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107579606 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084913477 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158680816 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108925929 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092727592 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122450818 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119627421 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167759351 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245725928 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119807206 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094968705 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112364832 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098213004 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109525932 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213737719 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216447589 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157871535 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20963753 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11904621 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16315213 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163662456 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117075671 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168076042 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092768112 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124870329 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118997322 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190669337 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137684036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107629572 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091422612 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114697636 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140553514 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08881673 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113843932 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166419946 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479742426 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162444528 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.103421105 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089985919 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115521681 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159801437 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091994533 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261460374 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116000757 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166429983 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093525451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104259749 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097245199 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159530601 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121202898 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121412385 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097289184 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116553586 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.247625759 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217723955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09898016 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23848036 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174315687 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094904982 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16977545 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116425418 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164951029 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116218686 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09610793 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109349701 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759864902 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121343505 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11396542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091535602 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189743713 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084549673 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109954265 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085141986 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104550793 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779739682 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110529776 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083757096 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107949048 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094163614 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115107031 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092450542 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112710134 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160189877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231032075 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096220272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115249436 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085315033 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157094391 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110261758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08570356 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107375159 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086702477 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116015497 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089728041 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111043859 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168938539 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156655546 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220803146 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552660508 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107815335 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085845396 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228132102 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085036384 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304518976 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115729551 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203067451 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161863699 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105428449 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334259188 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16433679 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192105908 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088999733 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168356417 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105777023 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092539741 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157296987 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10782196 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091885405 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178169392 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100624134 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120488616 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.138130643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08560725 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222996376 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104660817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166681754 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087740202 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11911169 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305596428 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086259106 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126284963 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158239604 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089703011 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108166811 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701846847 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107264489 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096293096 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115946189 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198670267 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184489418 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092775573 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115370994 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096212411 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181802385 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208002421 seconds)
  done (took 42.884488042 seconds)
done (took 57.941482026 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303012627 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255286652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.25255285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212709405 seconds)
  done (took 2.000201635 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173216549 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.124278227 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142547658 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104523733 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125547506 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103889943 seconds)
  done (took 1.675512829 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.42438136 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.354418393 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.325624829 seconds)
  done (took 2.009929732 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244176312 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2650923 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.317349365 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.394579393 seconds)
  done (took 2.231605506 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199660899 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097181698 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119255428 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111941424 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165927061 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.193212274 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.114757962 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.147110751 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.124640433 seconds)
  done (took 2.225200683 seconds)
done (took 11.049878783 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.29912871 seconds)
    (2/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.260713632 seconds)
    (3/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.174833699 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.156115684 seconds)
    (5/286) benchmarking ("sort", Float32, false)...
    done (took 0.169308397 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.164751443 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.183500179 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.155947554 seconds)
    (9/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.097551096 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127969147 seconds)
    (11/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093182649 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121431806 seconds)
    (13/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.266763068 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.219049702 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114479026 seconds)
    (16/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097870794 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.224609073 seconds)
    (18/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115126402 seconds)
    (19/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.212586208 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.163815541 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096079323 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.208804344 seconds)
    (23/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192644806 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090462086 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.160320306 seconds)
    (26/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230254662 seconds)
    (27/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092053944 seconds)
    (28/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123653836 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.138353077 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109709234 seconds)
    (31/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117567479 seconds)
    (32/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09474373 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170952846 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.22812337 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.201737075 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.212815123 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088998375 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117744533 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.09808109 seconds)
    (40/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228418472 seconds)
    (41/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227623161 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091685095 seconds)
    (43/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.191691802 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135608392 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.155044605 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.118756722 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116575821 seconds)
    (48/286) benchmarking ("sort", Float64, false)...
    done (took 0.144104963 seconds)
    (49/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121023223 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.231341979 seconds)
    (51/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198215028 seconds)
    (52/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098917519 seconds)
    (53/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.158999467 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091956369 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.219442527 seconds)
    (56/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094315945 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096834407 seconds)
    (58/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071465678 seconds)
    (59/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.201145308 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109482735 seconds)
    (61/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088842354 seconds)
    (62/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119374752 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.214879739 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089640331 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177631688 seconds)
    (66/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.12384543 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.098454731 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178373937 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168323995 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134392316 seconds)
    (71/286) benchmarking ("sort", Float32, true)...
    done (took 0.235302438 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184726293 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.167033322 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.125271041 seconds)
    (75/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14645857 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074746626 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.139857869 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072580192 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.203147542 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.144137225 seconds)
    (81/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.133780241 seconds)
    (82/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.095007639 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.084124493 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.1396538 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139196679 seconds)
    (86/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087813582 seconds)
    (87/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184080689 seconds)
    (88/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097846737 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.096080715 seconds)
    (90/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08196281 seconds)
    (91/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11170604 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098001887 seconds)
    (93/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.097990327 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091353364 seconds)
    (95/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073364695 seconds)
    (96/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132659647 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132986468 seconds)
    (98/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100374685 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072257629 seconds)
    (100/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.182186481 seconds)
    (101/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116111159 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.192225209 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09015735 seconds)
    (104/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202280758 seconds)
    (105/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098643697 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.149298283 seconds)
    (107/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.178554843 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096012051 seconds)
    (109/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109874195 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097873044 seconds)
    (111/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12237811 seconds)
    (112/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.190652368 seconds)
    (113/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089186534 seconds)
    (114/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113441727 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.080047308 seconds)
    (116/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.145657784 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074826356 seconds)
    (118/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1122103 seconds)
    (119/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.172178054 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095084048 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090164631 seconds)
    (122/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095098788 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089333989 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.095245469 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.192382471 seconds)
    (126/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.097279711 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120215413 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096256293 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11352556 seconds)
    (130/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.070891569 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089142402 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119219229 seconds)
    (133/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.071192151 seconds)
    (134/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112216822 seconds)
    (135/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.169726074 seconds)
    (136/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096343274 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118400444 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075415322 seconds)
    (139/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115393632 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.073815491 seconds)
    (141/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.088739113 seconds)
    (142/286) benchmarking ("sort", Int8, true)...
    done (took 0.225474558 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10713945 seconds)
    (144/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239549606 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092301045 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133707398 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096719274 seconds)
    (148/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181682016 seconds)
    (149/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116600958 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095196082 seconds)
    (151/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112735495 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.071994887 seconds)
    (153/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.15879327 seconds)
    (154/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079573908 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119435868 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091805845 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114087326 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085139478 seconds)
    (159/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120773324 seconds)
    (160/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.130040149 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113605747 seconds)
    (162/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.086923444 seconds)
    (163/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.147732746 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127822582 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.097540866 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085084811 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12200079 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091078808 seconds)
    (169/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.095992126 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.145529178 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096821932 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091037947 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111929239 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098035318 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116084213 seconds)
    (176/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077058258 seconds)
    (177/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112031657 seconds)
    (178/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081916276 seconds)
    (179/286) benchmarking ("sort", Float64, true)...
    done (took 0.234473236 seconds)
    (180/286) benchmarking ("sort", Bool, true)...
    done (took 0.22684628 seconds)
    (181/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.157347323 seconds)
    (182/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072563967 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111548709 seconds)
    (184/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088888514 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132952743 seconds)
    (186/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103013052 seconds)
    (187/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.099515947 seconds)
    (188/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.071902478 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096417272 seconds)
    (190/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.090176814 seconds)
    (191/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080786881 seconds)
    (192/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096063906 seconds)
    (193/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087080707 seconds)
    (194/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.095200668 seconds)
    (195/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087487708 seconds)
    (196/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.147863789 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09041641 seconds)
    (198/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114229764 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099221078 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120415616 seconds)
    (201/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072803924 seconds)
    (202/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.104093407 seconds)
    (203/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072757902 seconds)
    (204/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075874935 seconds)
    (205/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.104372354 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086465363 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107614591 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08974484 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108288457 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085963276 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072514308 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.095668821 seconds)
    (213/286) benchmarking ("sort", Int8, false)...
    done (took 0.18969052 seconds)
    (214/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.081393822 seconds)
    (215/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.095715565 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086335031 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138156645 seconds)
    (218/286) benchmarking ("sort", BigInt, true)...
    done (took 0.242424472 seconds)
    (219/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.080137437 seconds)
    (220/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.102056105 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089797141 seconds)
    (222/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113252297 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0902455 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116576046 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091930333 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.100100986 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089949988 seconds)
    (228/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187838311 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09553296 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114606785 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088514915 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110654782 seconds)
    (233/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206011065 seconds)
    (234/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075021597 seconds)
    (235/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098725876 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090936436 seconds)
    (237/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07548628 seconds)
    (238/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162262302 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085551325 seconds)
    (240/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.096490761 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089268538 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107378773 seconds)
    (243/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084086138 seconds)
    (244/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.105662171 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091608704 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18590269 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.171893782 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097599861 seconds)
    (249/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11547971 seconds)
    (250/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075532822 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083737772 seconds)
    (252/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119406944 seconds)
    (253/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137052488 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072858353 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072983046 seconds)
    (256/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.103164997 seconds)
    (257/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.156440658 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116456492 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076599818 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116923077 seconds)
    (261/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099779532 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.115067457 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084821928 seconds)
    (264/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.098406877 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084837727 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133888332 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076142853 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095372754 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097018604 seconds)
    (270/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.095761989 seconds)
    (271/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.167087051 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.111464419 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.086939123 seconds)
    (274/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098390627 seconds)
    (275/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224541782 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110201329 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16778038 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.097513343 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098181782 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085811929 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111464076 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084096253 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113230245 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085212142 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133551468 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089637178 seconds)
  done (took 36.458070949 seconds)
done (took 37.373254542 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097806006 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150308048 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094937182 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137690682 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098169327 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123997182 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09280723 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120289681 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097078272 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122909769 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096052957 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102631889 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094741636 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11921692 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095040023 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139033917 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097134294 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114345569 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086316996 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109845279 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.087184692 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111089469 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088592441 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102861576 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094889814 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116811068 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090339872 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119441287 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088061223 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108729396 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085327379 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11595018 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085595214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097366359 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112852277 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08674679 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120000355 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093540641 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112654011 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087186803 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116633513 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087484029 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114075694 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092037382 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.111658171 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086138337 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.110701292 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098495035 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139572619 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088012342 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11619815 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094363528 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118408056 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.091162637 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085153018 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.111469181 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087556727 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139508918 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.086435685 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111888979 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091472383 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.116538632 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085910368 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.111777992 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087765249 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118842261 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094698152 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11038218 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093359133 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114040737 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083108082 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110875753 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086233024 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084475404 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.116835111 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093938064 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107033137 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.088161514 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115624156 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088488736 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109914721 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085359382 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08847729 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111817756 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08514071 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103117761 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085103962 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113520166 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086011729 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.110981452 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090354806 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114441644 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08908708 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118733159 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086942781 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112377414 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087220734 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086787925 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114242709 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085146889 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106916257 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085764116 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116814815 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084750619 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.112068984 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.09757604 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109373534 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09055988 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085797491 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110481669 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.123810994 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094132971 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087583124 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112687444 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084300692 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.114023816 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084549913 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110326096 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085347 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111693893 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.087326444 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112230535 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085789342 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.113885978 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097275095 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083073994 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11044256 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085966883 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111223881 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.108453483 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111558549 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084535904 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.110675957 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082980132 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086061708 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.10957149 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090329213 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109633473 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086827707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110331597 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087480438 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113067311 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087473351 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112485354 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085002021 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104754034 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090725437 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085212465 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113739793 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08760276 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111241472 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082839055 seconds)
done (took 16.363442665 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094112653 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185324399 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145548082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1477577 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.119897472 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129972911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123785018 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142905879 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095494647 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14083557 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144024716 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109678731 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149204869 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094651128 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129538623 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.11882298 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092483647 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.12951664 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151397381 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113547836 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144764032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120107687 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.115094239 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138425573 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11750435 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123413047 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121714882 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094372625 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122121002 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127538229 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110423569 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122030694 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096738046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131255217 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101568508 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118809363 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129720765 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090082003 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120034244 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094446094 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133664466 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106469256 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115935533 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.125707442 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094702123 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122000554 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092550607 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117508862 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095372334 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114291102 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100031732 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140615079 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119074386 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096891986 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123101917 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094755983 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120976852 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122849487 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.097115949 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12231164 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094856861 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121992596 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.099521808 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136502321 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11928352 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.095699369 seconds)
  done (took 8.783030392 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108664378 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145746953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10163535 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125971379 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121464664 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082885483 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082918741 seconds)
  done (took 1.74701849 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084951695 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138696925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116163617 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14124779 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108753645 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.145248338 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126295543 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085002128 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132694711 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093312542 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137335009 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164426508 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086468721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122249108 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119513924 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109997094 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119749454 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109506949 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092182954 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142109656 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114491824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.106314895 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123567555 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085391687 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13276445 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086597572 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175432212 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121020312 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08438425 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090381894 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115401926 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179358594 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105856798 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119926181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08216367 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137803035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.131191691 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089248202 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133974149 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090058048 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131074394 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091084518 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117333101 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090710908 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117264252 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100294917 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121146315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092810819 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115611939 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112791418 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120726599 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131600198 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086132414 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088661071 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12047178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091709262 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124203142 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115955836 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112685339 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11650622 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111437217 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136093191 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106190126 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135939941 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127380617 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10681683 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.131215251 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09064179 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118399067 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09248727 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136565676 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088640703 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120404803 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100772227 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119822655 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112183385 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138402717 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088641546 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123040089 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089881133 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112802801 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085561564 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138874534 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088867616 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11318208 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102269311 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122542829 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116177926 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089197199 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13219165 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08911088 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122026434 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095266632 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113764433 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100099856 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140292774 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120502162 seconds)
  done (took 12.020078281 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087897846 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087974398 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116682823 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087608675 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112045217 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087739429 seconds)
  done (took 1.564432071 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115441284 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115831727 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101944464 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117633188 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128368857 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135666972 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136502998 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09632617 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1307929 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.100283985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135954911 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.11193383 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140052553 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118273299 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109908883 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119143019 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109799844 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116351576 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.100349985 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116091454 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103991822 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119054723 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090015187 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134499086 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093951611 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119104708 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093552919 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126576601 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100618192 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.1217519 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118212959 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095301131 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11882316 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095450155 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136542203 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093429764 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11514321 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095380418 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120723523 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094038646 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137533416 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089044293 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1259557 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096516576 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122957998 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094628153 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121359916 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094149717 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135617163 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095820292 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120636649 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094214855 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119843375 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096669452 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119171232 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121834973 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095475314 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136760798 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092691215 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119577115 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090556958 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121090844 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096113322 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120024002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094075662 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121229284 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093505485 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11623198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090767702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118788059 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095516549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117206791 seconds)
  done (took 9.040602693 seconds)
done (took 34.125755478 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671740238 seconds)
  done (took 1.656323949 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817298447 seconds)
  done (took 1.802547696 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.510108316 seconds)
  done (took 18.523599412 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.463350362 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.55317312 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.963945648 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159430525 seconds)
  done (took 3.126515203 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.965752751 seconds)
  done (took 1.975578605 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291305554 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23260279 seconds)
  done (took 1.515410241 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.808410929 seconds)
  done (took 1.81256261 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.493401376 seconds)
  done (took 2.490568603 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339071798 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.170217272 seconds)
  done (took 1.513966722 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.560760115 seconds)
  done (took 1.564481833 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.087920511 seconds)
  done (took 16.092332254 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236409047 seconds)
  done (took 1.251087237 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291942513 seconds)
  done (took 1.294962298 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.550983435 seconds)
  done (took 4.55464406 seconds)
done (took 60.16690687 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096421663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099387999 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125561642 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096909569 seconds)
  done (took 1.415412136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100471164 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119576082 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097549556 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11899837 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101352864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120363623 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092714728 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.163676189 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.093553321 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.122331886 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094396864 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119771193 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094970965 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118441036 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092035236 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120658101 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09668779 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120248461 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094999676 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119829534 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09135102 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120529989 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0968094 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117195607 seconds)
  done (took 3.63993708 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096085581 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090342033 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118278155 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089474429 seconds)
  done (took 1.406245443 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09999362 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1319006 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104559787 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125665873 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106699663 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132750139 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089028953 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114281325 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091018552 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12603767 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089986781 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135855522 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.104965579 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110766539 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101295728 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11221639 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086556627 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132574458 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09873668 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126079859 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088643393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125704412 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096921451 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129925147 seconds)
  done (took 3.676727666 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170335278 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127902031 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138306197 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096368857 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16516717 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113975162 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.113856806 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140889235 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088645804 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126654032 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092703394 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166859374 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.098507756 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117717155 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.088055428 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.120973646 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097289539 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124257922 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090949724 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128282055 seconds)
  done (took 3.421080575 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09628356 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089498709 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111525217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088077947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122327235 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091103883 seconds)
  done (took 1.616611162 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086261482 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084447522 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11219791 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084393121 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115378031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085804638 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08422228 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111413531 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084979081 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11130573 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085317731 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084286191 seconds)
  done (took 2.150513125 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.376162673 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11409737 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.091047707 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112871497 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093873659 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114546805 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101768192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.115479385 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118813705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.114452136 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.088117305 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.118570806 seconds)
  done (took 2.580081703 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20337823 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093840175 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259244224 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346670821 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153037333 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162814309 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273671335 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160250183 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181229322 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134422814 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189957993 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127138158 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151659798 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175687865 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137143573 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.172865142 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171187038 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196762299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119293614 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227343491 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160748758 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16352553 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147804539 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148099481 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133890608 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154626347 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089453022 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126080503 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168661964 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167031919 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17102445 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14729491 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109222966 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222508856 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209646026 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174766069 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300692623 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128971435 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.18711934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180468062 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221684937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135529868 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190900792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151689348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126623475 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176075165 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126157097 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177480805 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128842443 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138653247 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180209211 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171948723 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17670907 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133541927 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300293138 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143060521 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116611245 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179582259 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182741147 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186036258 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162233785 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118093938 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181746337 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176306074 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175555524 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143331531 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165759395 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094461346 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17090539 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189957287 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172365271 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159876796 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209718783 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131028541 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133551638 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167522134 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150693359 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175840913 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157244101 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.092043556 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147715354 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135665114 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098639576 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.184371799 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093581364 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225434192 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105431884 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186394156 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200269566 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155585537 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158228202 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162039614 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162025864 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115932273 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118227954 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144735651 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157318888 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12675271 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130184065 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155110749 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112387007 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125843625 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149717201 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093943263 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157451592 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132754716 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164229247 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160976463 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.098107626 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161940135 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146486951 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128338201 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166747573 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180285902 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12940058 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129308901 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188790739 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12615918 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131455899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17270821 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181970295 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.162289401 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135248391 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167310978 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188984238 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111328597 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18352972 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138149122 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131239577 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119732779 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155511553 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154096996 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154595165 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0997983 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149338516 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187131638 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124557317 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106356153 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170782813 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123524675 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125874782 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110961315 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133458668 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139404085 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.116203567 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134954972 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153188555 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156794617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122010209 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15484032 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140824469 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187857117 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130630993 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157857876 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117082443 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117559495 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17589388 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181737411 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098156889 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221359729 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164901859 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193802193 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163936996 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100959715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175046515 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126794175 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089882071 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163959393 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159013924 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160664092 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179361123 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190909616 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161656092 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150589374 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145809396 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164497428 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1700539 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154045346 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113551677 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159655021 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163853791 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120571297 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092909206 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12505265 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111043692 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128501058 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10172419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204399702 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160440259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183703763 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15599926 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111413041 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17855002 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123594033 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162017015 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170173331 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108629856 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180402386 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176171517 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164150191 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140253659 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173916083 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089107631 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121776215 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130165556 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134338582 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129607976 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131632815 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11163717 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176878299 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171202581 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148087146 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224753243 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164764024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187269844 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092560452 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161661514 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166590463 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126817402 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179402073 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128856271 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128930789 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172658524 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139295258 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184711484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159732145 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166052066 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19436451 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154693498 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127843398 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118823493 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162493882 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13918629 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163852123 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114441705 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133329766 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151134045 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131032258 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095302809 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176575113 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141968737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176655765 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154997827 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169182673 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123983554 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11201805 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158303123 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143586518 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.087112941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165502138 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183136503 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142268346 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156024302 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171371846 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126749572 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.278712891 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208755068 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180884912 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105080514 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140561601 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160054024 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15628205 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161165833 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147016385 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14090547 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17674389 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156300395 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140457154 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104944537 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145174636 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147138901 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119205121 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129678225 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151471861 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139010813 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179658932 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111414047 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156155994 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163319452 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146132742 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118560235 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140432284 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195795995 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15592918 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174526825 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152457162 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161717658 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194447023 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093815449 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127518504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096336131 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176079361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131230772 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158861445 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.181868312 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194316204 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156002146 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163175827 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106209081 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118966853 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157611131 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119060543 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223175083 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13766482 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105396537 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185849093 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148998033 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099404146 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159131235 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286079389 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138482318 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171343826 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115056949 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271111196 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096754647 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128710662 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128792036 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166290053 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135828245 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179138351 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134845656 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141216063 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158780687 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135472408 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185285777 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200214605 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168456234 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17312557 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141760521 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154992657 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15936616 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172627828 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114001029 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142113222 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159109163 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177824155 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184561235 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10290576 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161660456 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159380455 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157059938 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170001931 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103485363 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224148436 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10003403 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163984195 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138717768 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092351552 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155252665 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1819185 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128739078 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172775805 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15443178 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101829763 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124803276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148661037 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154603093 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110659548 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126266733 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176204757 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094943833 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160347045 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177457727 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128505016 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123199138 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144134258 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136319347 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110734967 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144042605 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13244683 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141027735 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174801771 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128964016 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173347967 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175001143 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163153785 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158153752 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112783626 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664727506 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12577202 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17656797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116793818 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180577945 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145249244 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1650846 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158476747 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118417756 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164756791 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146537881 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21957767 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16403455 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157537069 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099868164 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144091292 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141159144 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099613833 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14913412 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159954897 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109680835 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134920414 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154345448 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142060001 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112725287 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137435466 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180622285 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144323714 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178485037 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177580704 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106360048 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16433436 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172531699 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128673297 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158092938 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169488197 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11026928 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148219467 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129621384 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102395045 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177481761 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122816414 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12864253 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156980626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158656108 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160111805 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131715686 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127697019 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140177171 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159457717 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098072944 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152729564 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155179288 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131102822 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.09773559 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152780279 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15722677 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155436334 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095068629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166867059 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1791565 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094760918 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129871265 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282544497 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153208577 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188173319 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12025071 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133177318 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140097293 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123210854 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150935267 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156832946 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126149743 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100741755 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128618842 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.17638063 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124071929 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153515405 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181810684 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158204826 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196449023 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133145904 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232303429 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135926683 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15199606 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099757688 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126740895 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140119812 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103772413 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139316958 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186306528 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175525949 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1497146 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11320909 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124856091 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096668408 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131344916 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158207399 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150973562 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126942704 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140739542 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115763836 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111758768 seconds)
  done (took 74.235779131 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142376036 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128775697 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145292577 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192908242 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16297264 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239768397 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201874762 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22330579 seconds)
  done (took 2.543799026 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.097371711 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15498179 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13676678 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121796113 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088416832 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.329895809 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13441682 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12094673 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116143008 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.135070207 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113196653 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.531543647 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11988409 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.120411747 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.084761596 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.111738017 seconds)
  done (took 3.613275925 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.281270566 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531627706 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.118917615 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.225335999 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.219853488 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170543566 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.724646183 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.178303073 seconds)
  done (took 12.554059262 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118916548 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.109873248 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160810206 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161108393 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116795595 seconds)
  done (took 1.777496921 seconds)
done (took 115.628754684 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093095985 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094816779 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121636496 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096959807 seconds)
  done (took 1.500843053 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107800235 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077847455 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10826239 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077356999 seconds)
  done (took 1.480211707 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.416780087 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076799386 seconds)
  done (took 1.634608308 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112598094 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131640778 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103876381 seconds)
  done (took 1.464246778 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10030876 seconds)
  done (took 1.211334574 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093918075 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096834118 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138370051 seconds)
  done (took 1.440251151 seconds)
done (took 9.841726685 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109143815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.433873232 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382042582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135433039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691462869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405226624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041635484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153772395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164855888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087837574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134524568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.66701351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018566645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337759062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002119902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340817573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699403019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089852231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122921435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089274909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.050518065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088142123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117994464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09055047 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697157689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392562724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116085238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.354389684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116162001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094506692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374563661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116655271 seconds)
  done (took 16.816083879 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093794707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176610543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096211384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119044252 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092448893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119970747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098846773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129573751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179119813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088102984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134759676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087534694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093445959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117188337 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107479952 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11736765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091366885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118904714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094553119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118632661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107596995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115983353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090273478 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117879213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087812938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100764935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117407662 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101524623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117312985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09481216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120243841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089158218 seconds)
  done (took 4.651224047 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138366317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185836807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124633923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12309942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166851432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090348336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201182174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157099284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18323714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087952869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135573814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087779716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152649478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088910442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138577994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089003425 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120082862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090396625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124584338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090126448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136904534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088211294 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119592195 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09093423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116697273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1029138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088254649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129957178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116618947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094845091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09284544 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117790356 seconds)
  done (took 4.992007143 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095871089 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.097868115 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133420991 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134375986 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090633904 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.096116388 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125377018 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090883711 seconds)
  done (took 1.982545013 seconds)
done (took 29.552476069 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105498758 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093783829 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130284648 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100439105 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127087826 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101968057 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115775663 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.09959958 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.129287346 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.09773167 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104231037 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116033155 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089296081 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115900726 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101547366 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.1207305 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103562662 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097361563 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136560223 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13179655 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.089457989 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099043736 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126399798 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.10829931 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138602589 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108239902 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133041962 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094511112 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11809826 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089111824 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131326998 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110811184 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11962935 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105457572 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121788804 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091859328 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089153709 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118766919 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104032892 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128252803 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094954395 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128164676 seconds)
  done (took 5.77721388 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115273571 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.160805133 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088652097 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118974633 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088894148 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.158426744 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.12389123 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.118270657 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089178655 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142846111 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.114214074 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.118555116 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.088415413 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.11762882 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.087632399 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089568787 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141608997 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.142519818 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.118640358 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.149162239 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163637878 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.12009998 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.153776545 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.112612683 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160785345 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.153879394 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.109915931 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154201316 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.145628159 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.088780672 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.149279248 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.12063321 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.117906606 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.088032198 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.159516488 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.123742237 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145074119 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158517963 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.11946891 seconds)
  done (took 6.041251051 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097314772 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103106497 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13817853 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182032045 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12502392 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.1269536 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098233938 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137227954 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105236369 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117991805 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090482012 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149624808 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10822994 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126800026 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089138561 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10366048 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138538672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090958461 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123181129 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108211998 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137384808 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102140762 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131640397 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099093589 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118890473 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097453989 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12179034 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104220628 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123363959 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097028036 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121952705 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093417384 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121762152 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.101101173 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092564468 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124941859 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139605512 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096865749 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097731291 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119361323 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100849141 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122384187 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109785914 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15683225 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0882225 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124941361 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095547446 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127032753 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087536121 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136269253 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099191636 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119240992 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.105265564 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117762209 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087791893 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13337353 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089697475 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092054732 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125875279 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095834447 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138192127 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093124955 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132320663 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089609933 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123819992 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088621578 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088154806 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122732564 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140247536 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.091666711 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.157359087 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089192469 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124278101 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096078358 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094829183 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128674087 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089150485 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133664321 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099936443 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122334698 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099216509 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121877949 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092762269 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106356433 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133827183 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125295928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094561578 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125319416 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092288503 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126787324 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102836243 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092550084 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122516401 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105093969 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119807595 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091976866 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125236258 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09448185 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117807601 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102545673 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124102073 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088180362 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098971209 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118861662 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092920045 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12824234 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093021854 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119437349 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093095532 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125326196 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088615277 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091865733 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122117048 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091179599 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131976143 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096601345 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121608601 seconds)
  done (took 14.216451111 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233920401 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216472671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191148912 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.298467372 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110246429 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146652257 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212210751 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163739044 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089679405 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157929532 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178032754 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187040748 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175268158 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185878868 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170553296 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088643682 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138761874 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140324255 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21689374 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.296064199 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140209614 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10355582 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159970383 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160055434 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108453051 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13576938 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143383334 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110643733 seconds)
  done (took 5.799581223 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105600098 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155497509 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096816941 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145573551 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14655264 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090741798 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09381619 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11969981 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102081683 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134483904 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091737636 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126785771 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094815791 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129431841 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.08919739 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129767934 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099498867 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12921859 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092332114 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123270148 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102620991 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137476978 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.095312726 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122377638 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105902651 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12246439 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090897886 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140348133 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127717155 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113885026 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117412925 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098589828 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133437328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089681967 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092128085 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.121601965 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09250066 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.123012855 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091273753 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087069301 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118654673 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.08060216 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122616213 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105586436 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126744541 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087433947 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126472242 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093799754 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127546987 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086150376 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091807201 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122221958 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09438133 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130514118 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093200019 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126676474 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093488488 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122829867 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098591782 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122155176 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086453434 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090819918 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126287074 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094328447 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.1282161 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.096176417 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121587169 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091915858 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.124470938 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096996245 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09244051 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127805456 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086202615 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121195179 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098798719 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127908942 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093871199 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121368168 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093469795 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.08864722 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107723536 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08930555 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106724858 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09304671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.087868604 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12163077 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091182466 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125546653 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135220839 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099221008 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097253384 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119964851 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092450064 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12455401 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087084771 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.123779142 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107455098 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14031317 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088429162 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118440046 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105140592 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12139387 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088275824 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083046077 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129467477 seconds)
  done (took 12.622708622 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130106277 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170727356 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121339161 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109007574 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154752299 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.131495865 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128252776 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097249902 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121224462 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109081971 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124027226 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098576075 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123790911 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103173112 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161941708 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099202139 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122625905 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104179377 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125239523 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143297133 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140385822 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159145837 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.129750564 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123489543 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096057806 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157400365 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.166386703 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103850717 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133421076 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.130864203 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134088556 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165146476 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.131782228 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125476739 seconds)
  done (took 5.533605792 seconds)
done (took 51.113416456 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.258152499 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.434700637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.210367366 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.209487163 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.270798812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.259794445 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211918555 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.406130284 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.985313933 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.210262496 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.210993698 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.210805105 seconds)
done (took 28.024020338 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.290807087 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.374533066 seconds)
    (2/2) benchmarking "String"...
    done (took 1.545688935 seconds)
  done (took 4.063318967 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.212124521 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.212020207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461894964 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.213235831 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.229812986 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.230143917 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.21352763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.233769461 seconds)
  done (took 15.936659807 seconds)
done (took 25.647873956 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.276686261 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.411974055 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.481844589 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.232439961 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.219026409 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.226898359 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.218647667 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.257773388 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.228463733 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.218858289 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.222300557 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.479287414 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.235002506 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.600958355 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.215037161 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.24661589 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.232226523 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.453949044 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.214228291 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.286873118 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.202013818 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.227607211 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.243058165 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.235351851 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.222467285 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.229847467 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.231644493 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.227677907 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.414557379 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.229193824 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.254054122 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.219393756 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.23840989 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.223719627 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.327156564 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.24360953 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.416549391 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.224020709 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.203596144 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.23090718 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.417800678 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.621201588 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.21563762 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.217134486 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.220673526 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.295900502 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.206189132 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.937605939 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.224214759 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.217818004 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.223621789 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.615136788 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.217469284 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.228161108 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.22339888 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.459163308 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.243662703 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.245183474 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.245859306 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.225251534 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.215779796 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.214530063 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.224862055 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.217169688 seconds)
  done (took 144.523368997 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.215990453 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.214731431 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.217215234 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.220063703 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.214743887 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.216165955 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.215869429 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.215293387 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.214998862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.234559737 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.216855846 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.217588103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.219077916 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18909509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213274159 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.230402156 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.214233687 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.21463811 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230940208 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.214830965 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.236211565 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.213726112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.220770014 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.221474941 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.250306896 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.284650616 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.234129464 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.231025039 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.210171251 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.21372774 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.253856027 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.259082624 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831297302 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070344352 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.225142017 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.224359165 seconds)
  done (took 80.668048006 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21358553 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.212563769 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213238521 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245686374 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.217521868 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.788052302 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778264101 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.926623658 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.419610065 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.524830466 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.463278239 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211604247 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306410552 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224683336 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.21802613 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227579079 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238802469 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21287599 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21178016 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784040626 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23053393 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.315812112 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.391206872 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22915238 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243982188 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611865739 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212973996 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212289742 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245455225 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546455445 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261239323 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213659532 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.574867039 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.48802112 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326274141 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214385942 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245492279 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.213161747 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.494485494 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212940564 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.213507537 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216393567 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875463398 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213657632 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785021077 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218640781 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.158833599 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.213434969 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215073037 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.391001128 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.844162017 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214180583 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.214089409 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216999328 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.213963053 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215014968 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246844398 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.455350988 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.308196904 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214938691 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216576722 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24770999 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213920865 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.214563565 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.339871398 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220444766 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.842624252 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28015128 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.323162049 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786737367 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218658323 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311716089 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335412087 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.215464706 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214122341 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215490993 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214338646 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.325452972 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215074956 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.627406058 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.388750303 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2323743 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.517098598 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215315909 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31140135 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.216664205 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572457792 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214403859 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214477571 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941792992 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310736279 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.214979979 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215640318 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214099922 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215423783 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624511694 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764318881 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.450808459 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214917407 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.700015307 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219296918 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.628316375 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751183479 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.852962892 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.21494893 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326288699 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386227205 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22911127 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.213536205 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.479559222 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214265744 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269501059 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21892824 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609923698 seconds)
  done (took 366.858769177 seconds)
done (took 593.193329372 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.83565368 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.82836611 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.936721175 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.819217415 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.78245272 seconds)
  done (took 10.346448331 seconds)
done (took 11.488965517 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403524479 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407676589 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277877452 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405604643 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.731395218 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416425466 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384880919 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.239029842 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.31603346 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.298787403 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315820861 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271236933 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249188988 seconds)
  done (took 18.861256643 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54309625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21616441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278151509 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536384887 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257377431 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537426519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422052186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.231514538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441568616 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231228064 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227602948 seconds)
  done (took 18.068927569 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549961858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.214751227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28057379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554872424 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255671684 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546386506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.443029884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.242798839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421250873 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227979324 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226682914 seconds)
  done (took 18.109569683 seconds)
done (took 56.183190734 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256302777 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.3827089 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242374682 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225069075 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222045306 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221819493 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22717868 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223128901 seconds)
  done (took 11.146544252 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22014648 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220069874 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217923077 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218785265 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222550841 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218568596 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218892173 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221268666 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.221290257 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221236802 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221295209 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218801201 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217417827 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220403877 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218981783 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221522389 seconds)
  done (took 20.662308718 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220749994 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219400914 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219670862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219330405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219367635 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218722132 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221310504 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219682468 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220490426 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22026522 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220384228 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220238729 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21911081 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220338818 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22018099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22041153 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220434536 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220854427 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224380651 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220682894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220722711 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220893267 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222483837 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219446747 seconds)
  done (took 30.435668645 seconds)
done (took 63.387894684 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.217410334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.233845749 seconds)
  done (took 5.595115966 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281494142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.282571456 seconds)
  done (took 3.710666193 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223563698 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222621916 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223728183 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223110474 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222938573 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223506034 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222692299 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223883364 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223799715 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223458035 seconds)
  done (took 13.37807858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222608911 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222937956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221746445 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.223173613 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222916729 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221161461 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223151281 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223698043 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223911248 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221481716 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223490963 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221008255 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223973234 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221263589 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223737545 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221387912 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221113755 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22223157 seconds)
  done (took 23.150223407 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23848692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.24508671 seconds)
  done (took 3.630009762 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.351737502 seconds)
    (2/7) benchmarking "second"...
    done (took 1.264174888 seconds)
    (3/7) benchmarking "month"...
    done (took 1.331211363 seconds)
    (4/7) benchmarking "year"...
    done (took 1.319233095 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.264920177 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243466594 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262829132 seconds)
  done (took 10.183374863 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224932107 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.431605965 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.536234626 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.786543075 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226066339 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.228959381 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.11762266 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229678999 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232132327 seconds)
  done (took 14.15990357 seconds)
done (took 74.952015851 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.218318969 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.240639331 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.228413004 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.237370792 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.562315219 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.270661753 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.219687594 seconds)
done (took 16.124148611 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.212531925 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.211770684 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.210639 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.237559636 seconds)
  done (took 10.018910746 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.219359146 seconds)
    (2/2) benchmarking "read"...
    done (took 1.542492529 seconds)
  done (took 4.90894744 seconds)
done (took 16.075430875 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225330122 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223001815 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229801333 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.222670131 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226733351 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.223932139 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222608351 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223300624 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225287709 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.2258934 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22546268 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.224929839 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.224856403 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225310286 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223642411 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224079179 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224337449 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.222643608 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222692157 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222921117 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225749156 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223712547 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223230709 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225721169 seconds)
  done (took 30.537822588 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.2247038 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223701137 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226301261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225021405 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223375651 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.225286848 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229168263 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223902323 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226137592 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22541567 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223068811 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223484722 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22549753 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222374809 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226100748 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22334065 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.226666313 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222812749 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225829365 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223684466 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224908178 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223330544 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.225010044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227741281 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223308915 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223396691 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226154154 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223889852 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225307132 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223372653 seconds)
  done (took 37.891137788 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231627034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231554273 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224233834 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22578441 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.226737576 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225054874 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.226286466 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225376316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226417843 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224914851 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225895596 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225450099 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225891128 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.226358338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225699089 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225568889 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228559141 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224869336 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225263198 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225838238 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224784555 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225661337 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225989107 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225945226 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225632822 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22627926 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226167084 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225524034 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22506454 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.224476198 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226147958 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.224597754 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225303327 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226385647 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224266304 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225270537 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22986731 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232824753 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225818721 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225186978 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22717591 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226641905 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225566083 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224266573 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224067784 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22515478 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226139443 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225325031 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225651521 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226023893 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224372186 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225643013 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225891757 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226238771 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225780903 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225173161 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226313601 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226171403 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226440354 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224518152 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226010044 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226436188 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225460583 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225528481 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226494624 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.226884756 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225193009 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226599577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.2252079 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.226288378 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226317928 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224115578 seconds)
  done (took 89.42142252 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226850436 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225251096 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221873984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223025706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222936333 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225943623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222989589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226238284 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223268959 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227167841 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226598206 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224168993 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223995587 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226652763 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226905347 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225011906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226454602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224755954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225926377 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226612839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22513495 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224572478 seconds)
  done (took 28.101343114 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226869493 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228842679 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224395193 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228039353 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225973856 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227951496 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226397193 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229149451 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227045524 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223530173 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225936462 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226056687 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225969789 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224425763 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225481991 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225933304 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226784537 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225939666 seconds)
  done (took 23.223676463 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223926355 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22369451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226080832 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224359546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.223693187 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227966715 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225029049 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226522951 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226776053 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224751766 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226950935 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227139265 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226850609 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226127555 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22864865 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226306454 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.226918504 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224564489 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22703441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224860958 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225821885 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228459221 seconds)
  done (took 28.121833782 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227605188 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228250698 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225035593 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226761098 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224836219 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229466424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229864174 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225592385 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228639758 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22917774 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225881264 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228451468 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227909866 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225571696 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227340582 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226276605 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229049762 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227315148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229110708 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225927409 seconds)
  done (took 25.697228721 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228820142 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229176638 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229269369 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230331105 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230350175 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229512005 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229633312 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230365263 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229571217 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230211906 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23026344 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230439332 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230028585 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232044247 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23060383 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231420335 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230599601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231646015 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230543397 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230755727 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230449597 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230174652 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230706498 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230593167 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230517311 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230702089 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231149683 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231508503 seconds)
  done (took 35.602909227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230064007 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231387633 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229220054 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228809767 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227640248 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229166456 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229172601 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229156202 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232046173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229066807 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230865319 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23011275 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231642545 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231765839 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231451381 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231297617 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232034683 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229980881 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229560489 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229927492 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232492831 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231328227 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232409253 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23003792 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230238211 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232575303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229310399 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230948632 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231650286 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230051448 seconds)
  done (took 38.06946371 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271832786 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277688037 seconds)
  done (took 3.70346505 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229781598 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232748208 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.232309806 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231127348 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23004742 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233867005 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233668522 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231344284 seconds)
  done (took 11.008903731 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233073865 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233468466 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234731952 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235916269 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233842599 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235364379 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241359559 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.249522441 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235861465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233986647 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240323463 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241947028 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.2379053 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23570781 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236331356 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237596036 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234437231 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235381933 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.233995032 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235074706 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234836791 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237568048 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23876196 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23345195 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238014443 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247815082 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.241352361 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236808306 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237833686 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240519552 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237078511 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233758553 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235595227 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23628111 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23639684 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.236460526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246364488 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25701781 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.244362583 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235871711 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237230201 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233188799 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238240568 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24006787 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239130192 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236464112 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.238247086 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233546164 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236381087 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240320289 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.241006399 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238964937 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235239074 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241367565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.23947014 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245354715 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254685051 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240788239 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24484419 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249425448 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.250403752 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.244936917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240380138 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237615876 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247594261 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.259561297 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246066339 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.252630797 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235711783 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237769548 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247401736 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250918922 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262632349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237331271 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237418698 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.239173682 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240795456 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239265499 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246918348 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258633755 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239054178 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238217053 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248025481 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258221938 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240157356 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238535304 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237723346 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238342151 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24081869 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251799029 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.256276588 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239974529 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24005685 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241958407 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241412752 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238622902 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239642357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241211334 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237995784 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241374552 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23934662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243781102 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249399653 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239522314 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240308689 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247203906 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.241304669 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241454741 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.247496688 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242154244 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238512377 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242816147 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24667227 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237962655 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244232959 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248436905 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239954953 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243558675 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241141128 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242731871 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250083659 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.264247803 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242468954 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.241455191 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246793247 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.250742541 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241688047 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245432517 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242168071 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239874511 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239663975 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2428289 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.242718954 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24396891 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241390208 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243865986 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239315187 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.242243667 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242382754 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243958147 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243798323 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244097646 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244117626 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247254476 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242447126 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245010615 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250551471 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.24374037 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245187666 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245022727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.239770188 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243847269 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245209316 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243216962 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24388124 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243574168 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243904702 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244207508 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243365898 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243653199 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244064098 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24487886 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249149823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243584122 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249399292 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244710236 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242095898 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.244482474 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244887141 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245130355 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244506062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243630718 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247801627 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251395659 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244562273 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243502828 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.2488841 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245455646 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244476983 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244025083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24941875 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25234693 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244421894 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252018091 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.245971448 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243905413 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247626356 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247673277 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244826676 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246642047 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248891985 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251338195 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257944776 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268410475 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248015564 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.249049907 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247779591 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.248489196 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249726446 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246243814 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246568864 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244689612 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246426133 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24495879 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249044904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246181928 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.245690769 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247628603 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247566945 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246088927 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247776293 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248791928 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248683128 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.244856518 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247013892 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245746657 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247862308 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244546056 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246673225 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24788805 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24778194 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247496226 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25447493 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245396174 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250732305 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250243687 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24773242 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248921608 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248664912 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250782221 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24866979 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255736706 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266592446 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251038759 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25461873 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266100572 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248443858 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251546223 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24860597 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246239201 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251388371 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255562019 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24813654 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.248881771 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249069969 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24993388 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250840744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255741171 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.247642912 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250170935 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250389044 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251813635 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.246545791 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252076834 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.25077542 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250648536 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252225905 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250361777 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24963022 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251804287 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249225209 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250722864 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250944923 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253401075 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256262779 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256527352 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250791527 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253866688 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251726672 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254268784 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252031644 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251201672 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.250759968 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264482681 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270900587 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25918655 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.253035054 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252148549 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259184502 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.252896933 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25477456 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252828002 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252973909 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251885949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252314057 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.247674714 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25338817 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252338277 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254337384 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.252473993 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25585261 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252347464 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252231735 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25099568 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.251549161 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254325033 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252356609 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.25367261 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256106163 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254507687 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252178079 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254656591 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260543867 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271478315 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.255164315 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.253388802 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253603096 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.253175938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254337888 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25254933 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256506284 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258765973 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256609072 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.260087993 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255517887 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263513157 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.253084427 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.25723106 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.258866225 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250098355 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25126938 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25377237 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.251644394 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261730878 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268262404 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254462354 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.256228146 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249037432 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.245287912 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244554371 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.246830872 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24834143 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24535241 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256552649 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268721468 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.247748579 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242093234 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.238351676 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.240178888 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.240484238 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.240307284 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243207989 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.238609486 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.235094598 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.233660398 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.233424188 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.233937487 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.232803103 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.232007351 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23020622 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.231908425 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241560839 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.249482632 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.235284566 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.233383428 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.236428817 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230473149 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237964608 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.249763895 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.23011677 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.227391119 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.227666326 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.227793404 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.227170033 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.228796763 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.227483704 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.228426389 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.230938746 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.225202647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.227463525 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.227176898 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.226385858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.224844412 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234721692 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247510185 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.229265084 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229547551 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.223324895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.226695378 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.228346412 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.225492479 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.223727916 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.227523976 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234294115 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230848098 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.224614146 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.223619878 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224842459 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224880088 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.223061264 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.225836525 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.225586178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.222146994 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.222365766 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.222054892 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.22447376 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.221961621 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.222532381 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223691414 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.223058791 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.23187808 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.223762309 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.224575505 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.223502617 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.225676536 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.223667072 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.218451632 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.223643461 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.222696519 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222585248 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.222660244 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225863136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.226053895 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.223165709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.221887604 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.221958408 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.220095882 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.218486842 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218349623 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.218425483 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.218151535 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.219075105 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.218805771 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.219309681 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.218339802 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.216599932 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.216381021 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.217037949 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218745091 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.221601948 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.216532862 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.213419498 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.216840756 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.212406648 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.211854792 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.212431637 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.219994613 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.215142031 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.221437956 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.219839084 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.218263987 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.212037633 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.214308711 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.216734774 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.211383898 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.211488736 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.212510667 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.212690975 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.211728656 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.214539656 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.209740296 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.215785479 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.210264568 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.210609831 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216445267 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.230556583 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211645916 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.210901442 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.214104773 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.209876372 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.208841794 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.21146968 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.209876034 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.217967097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.228512406 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211463402 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.213385292 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.210911149 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.211977257 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214529313 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212575545 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.21195909 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.210244692 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.213091456 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2132302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.212793059 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.209438148 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.211878918 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.212083579 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.214407907 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.216916104 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.210064301 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21278519 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.212313308 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.212523373 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211911685 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212692924 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.210203333 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.21020694 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.212529002 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.213892296 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.212876652 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.215522328 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.211347875 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.212775808 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.21353354 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212342212 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216119266 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.221023805 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.219133314 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.209943566 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.212393183 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.214069006 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.216406009 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.212153692 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.213137957 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.21432765 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.213905108 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.213011572 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214758696 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.213598045 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.215425638 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.228554481 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.234546773 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215286706 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.215518345 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.216568093 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.21499263 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.212228494 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.215405505 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.215314906 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.216826492 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.22101354 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.215882353 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222916379 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233007011 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.216842769 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.218417844 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.21852383 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.221242875 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.219369533 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216058513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.215669356 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.220031916 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.230179851 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217485927 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224703555 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241012238 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.232869565 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.217252158 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.216821213 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214336453 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.215802568 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.218125747 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.216498771 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.21701602 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216482435 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.215951972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.216892618 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221017221 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.217802974 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.217567968 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.216438462 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.216203095 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.218125692 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.214522938 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.218275721 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.217798035 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.216498537 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.217604136 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.218415701 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.217087662 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.229788441 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.242756894 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.217439113 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.217795645 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.213704901 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.218312704 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.218171682 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223793161 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.222038578 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.216086635 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.215928463 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.21682921 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216029405 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.21656194 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.218377524 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.216691371 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216523306 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.213831996 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.227820253 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22256224 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.221937538 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.215989212 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216603989 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.217814981 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.216936895 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21796753 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21767234 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.218643868 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.220890819 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.220289591 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.217889482 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.216636583 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.21952183 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.222893998 seconds)
  done (took 737.470657313 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215884225 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21600664 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215021502 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215038373 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21591639 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215031497 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216229628 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.21506316 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.216807328 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.210425211 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.21177765 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211653885 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211361542 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211740135 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211723115 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211563388 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21330111 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208423954 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208688206 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20788942 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207438936 seconds)
  done (took 26.605753472 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.209604852 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.208870383 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208828496 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.208207671 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205971405 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207648485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205383361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208651325 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20965664 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206280339 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207309236 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207872485 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.204385667 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.203432166 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204885676 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206175037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.208480949 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204803843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.207134663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205546672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207348266 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.205032559 seconds)
  done (took 27.684014199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.207659988 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.207524659 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.207825053 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.206035478 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.207718907 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.205397036 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.208211616 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.207868353 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.208467886 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.20776562 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.206208512 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.208206451 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.213913052 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.21123573 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.209753493 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.208223704 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.208480894 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.209120911 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.207876259 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.206544425 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.213504849 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.205896723 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.205623643 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.207417448 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208769814 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.209033213 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.210241253 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.208255606 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.210000701 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.212631013 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.209357384 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.209494485 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.212022361 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.210282254 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.209614377 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.213162468 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.209218164 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.207422603 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.209637067 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.219157418 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.22687984 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.211392184 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.216239594 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.210754331 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.211171312 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.21301346 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.216427809 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.209228471 seconds)
  done (took 59.210037123 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212151023 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.212159942 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.208643771 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.211367331 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.211737903 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.211044675 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.211102031 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212131041 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.208552904 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.208728777 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.212546817 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.208813486 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209532522 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.211543604 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.213117279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.208986095 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.209158964 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.208797059 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.208836065 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.208889141 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.209686451 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.212701963 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.212367785 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.209784639 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211417224 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.209285726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.210765678 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.21318493 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.211396145 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.209316379 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.213024535 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.212713017 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.212889336 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.211468984 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.210514159 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.213558437 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.213164695 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.211525788 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.213561909 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.210752044 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.213245655 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.213741222 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.213183728 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.213018592 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.210581022 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.211742253 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.211270336 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.210855417 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.211892484 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.212958056 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.214097545 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.211358851 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.213698261 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.210680517 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214288295 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.213567231 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.210890237 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.211900736 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.213062963 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.211081205 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.211839904 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21497881 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.21258348 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.214822979 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.215743544 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.211736342 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.213360858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.214102348 seconds)
  done (took 83.530685802 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214203485 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.214982542 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215463354 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213568398 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21465716 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215369664 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.213876914 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215124542 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215784248 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215519454 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215991784 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215598604 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.214602681 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215399384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216067016 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216248145 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.21555667 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216198063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216920848 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216117206 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.21653136 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216075795 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.21574011 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217173311 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217694824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.215722029 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216860899 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.216958956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216966506 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216671413 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.21752572 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.215980824 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215007475 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216085178 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.217072712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.215644319 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216384143 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215804288 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.217558407 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216725492 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.216320781 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216578219 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.216012439 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.216774247 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216713241 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21712365 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217650544 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.217864801 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.21821858 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216436988 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.217979734 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217655883 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21688458 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.216583122 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.21780984 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.217854385 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21744171 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218014497 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217571517 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.218060611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21746796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.218749301 seconds)
  done (took 76.555723269 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218289211 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219027725 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.216111017 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215970461 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217531525 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215623514 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218051154 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.218852383 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21857738 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.219233846 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219648003 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216977775 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217829863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220319877 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216260491 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219195024 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216793392 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217803312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219812648 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218350223 seconds)
  done (took 25.498676972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.21806591 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.220678614 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.216944372 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217643723 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.219765966 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.218202774 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.220047504 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219956524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217007723 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22001588 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221800911 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219710127 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218284957 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217560925 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.220360668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.218994961 seconds)
  done (took 20.644937612 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219176994 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.220537269 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.220272012 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.221295738 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.218833539 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.21726707 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.220609907 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.21836073 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.218702654 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.221273446 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.221034294 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.221247397 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.221630932 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.220711667 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.218105185 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.22162697 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.219307266 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.218634616 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.221732529 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.221515768 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.220320121 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.220112224 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.221806782 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.222295281 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.220356407 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.220389796 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.220114253 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.220113955 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.219841827 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.223401929 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.220059625 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.220251765 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.220263459 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.220266087 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.222862446 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.219809982 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.222820913 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.222224551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.222704267 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.223268946 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.222292418 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.220886443 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.223665261 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.223680238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.220932673 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.224336382 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.22169133 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.221788767 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.220912407 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.22273103 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.224232309 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.224688665 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.225157705 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.225157368 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.225260421 seconds)
  done (took 68.314709986 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224813931 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224835739 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222446941 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.224906255 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225425503 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.223445534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.224561957 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.22464777 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222809362 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224680626 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22354433 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.226367175 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222654893 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225235065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222270399 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224503404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222661322 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.222712016 seconds)
  done (took 23.177581391 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223597705 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223888607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226085904 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222643998 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.224003418 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225147256 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222499077 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.224689317 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225945524 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223054992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223845916 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225765585 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22575314 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.226063919 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224192699 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224368643 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.226107918 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226288979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224206692 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223770528 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227149834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226024265 seconds)
  done (took 28.091227969 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.2250012 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.224319985 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.225414511 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.239997266 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.241942505 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.224125996 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.225065938 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.225512407 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.248175875 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.273017599 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.267755476 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.240728665 seconds)
  done (took 16.006584712 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223806835 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226974486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223714887 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227303555 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228015934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225046987 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224430659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225827591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22804606 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224311952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226465058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22780161 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227069674 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2259775 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229455646 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229337355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225515706 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225285005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225809732 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228048346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225078492 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228174223 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225413956 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225736089 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226069414 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226633754 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22751687 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22700184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226627182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228212084 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22891862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227088911 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229820631 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22738711 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22887667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229568654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22705916 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229119756 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229885783 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228006047 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.229282035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230101894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228688692 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227294783 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230077195 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227431809 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228313242 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227441548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226484127 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230744959 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229560765 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227641314 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231146232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230268055 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230238933 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230548703 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228174647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227502371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230665861 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228928921 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227771316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230901109 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227965913 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228778178 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229739072 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227712896 seconds)
  done (took 82.181734551 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228825156 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.228635449 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226407935 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229517897 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227546906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228985392 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227939937 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22884605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229332455 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229042235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231740392 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230157326 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228546131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229967298 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229344571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229733495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229618501 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229375408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230119286 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23290308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229843161 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230141134 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229650526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230207961 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230442004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232469853 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229899922 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22953508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229977084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231725486 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229694878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230781532 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23092219 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231895468 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231900041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231690735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230330163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230716158 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230422491 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232610947 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230945603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233763542 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232052098 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230940612 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23207446 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231958648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232446788 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232297105 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231458178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231634409 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231684666 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233029479 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233113975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23145809 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231783278 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232302155 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233157454 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233103751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232499576 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235023233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233235572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232309708 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235534357 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233439546 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233034558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232869723 seconds)
  done (took 82.401994005 seconds)
done (took 1709.901094562 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.396338143 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.352412502 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.234787139 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.242722278 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.235006887 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.227110855 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.244343773 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.233459481 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.233691916 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.233153826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.23293999 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.420681727 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.291130585 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.234426768 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.23486354 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.327107232 seconds)
  done (took 25.529520327 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.2583401 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.244458824 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.345707862 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.262341899 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.264126146 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.412807528 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.295411501 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.241863525 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.399431937 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.285812187 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.233964297 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.268451832 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.243280396 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.235115277 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.264212847 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.413510068 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.476216124 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.24626151 seconds)
  done (took 27.546385297 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.652404524 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.267385206 seconds)
  done (took 5.077871688 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.259379891 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.241954398 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.244114752 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.241316111 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.232983299 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.233949717 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.241117227 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.238900476 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.240700993 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.358856524 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.243382015 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.251864807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.260525558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.243960303 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.241429665 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.279048809 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.415807122 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.241185969 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.239837707 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.248484821 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.243454969 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.340659524 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.281617452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.242082341 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.358992045 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.247273822 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.244329888 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.250967629 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.37825719 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.242141733 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.243355291 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.243538908 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.244024171 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.102289731 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.736335308 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.237433001 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.266520804 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.252623759 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.241820553 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.38188824 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.245126433 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.249672903 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.236421837 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.725964467 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.382560007 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.358606311 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.251869508 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.243633219 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.244834617 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.303739534 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.244696878 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.246775998 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.286637338 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.000501095 seconds)
  done (took 80.161132187 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.247838523 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.238762269 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41222753 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.262417652 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236724872 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250602233 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.235733146 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.505459989 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.244201796 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.248108089 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.554731256 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.765195325 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.257296331 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.270218201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.078703108 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.286618481 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.239377471 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.237994369 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.240201638 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.241845497 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770705982 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245181225 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.23835932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.497293246 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.276476112 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.721359153 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.245587314 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.245218162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.239324085 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.238743735 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.726919097 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.271659398 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.301311547 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.240926118 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.495318647 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.600768656 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566160277 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.237800699 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.269810083 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.242780244 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.267367844 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.714410574 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576221355 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.239292606 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.256487419 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720407256 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.240640471 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.250138699 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.23996957 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48354583 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.241783075 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.242325657 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.240463976 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.241940687 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.240878981 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.307445967 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.308138781 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719389586 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241421436 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.240612223 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304943876 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.242761513 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.245118972 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24368733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.241172759 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.582081011 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.434460216 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.249428514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579612139 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724063983 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.262207941 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792670807 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.262971412 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.273348125 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.250700919 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.241057768 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.241358673 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717278048 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.269984045 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.242502573 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.564650174 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.242596711 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.557725809 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.261225015 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.257367183 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79972829 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.253725214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.249080647 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.243020447 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.242443585 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.24266114 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245264203 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.503839198 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.29324946 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.244295355 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.243788445 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.252113586 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.249879832 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.244016409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.24725659 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797294169 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.260443892 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.245066311 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.246567171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244989514 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.246904552 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.247390538 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.245015603 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510198075 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.245769682 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.250528679 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.247309805 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.245302001 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.250022888 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.490627198 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.252043617 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.535062842 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.247486582 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244733001 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.251459206 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.24476879 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.294294992 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2451314 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.248926202 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149229925 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.537118016 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.261809527 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.245760781 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.244987146 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247840454 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.245428446 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.254105002 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.267005887 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.247260014 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976888927 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.279573183 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.269094944 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.245771588 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.246374246 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.25593809 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.252837156 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.246041839 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.528824613 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.503032637 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.404893493 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.250929373 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.245264139 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952000821 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.312390882 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424735349 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264068278 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.246866167 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488192623 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45346018 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.248417673 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.24732918 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.249529059 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501915549 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.248216487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542321989 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.757727657 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.263640697 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.25217204 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97929679 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971294473 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.256428619 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.250700619 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.565296577 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.267848244 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.247609284 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.248237267 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.249635686 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.247724208 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.251483144 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.252043448 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.248264002 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.247936757 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381328574 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.435872729 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.264890282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.2585375 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724437237 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33249513 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248465144 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.262766971 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.249603283 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.24888537 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.326415531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.249362299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.251480451 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.250081144 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.258580209 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789827784 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.24933434 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.256717461 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437759704 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907664175 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.264832072 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.249495046 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.249343083 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.127170343 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752300262 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.273293194 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.542025343 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.254768022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.287638928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.249838425 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352648582 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752920848 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.249908229 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.250620575 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87044168 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.266652337 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.800800744 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.250989034 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.250123783 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.8087756 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.266392044 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.253895237 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.252272051 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261414112 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543515994 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.251659262 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.271728248 seconds)
  done (took 477.818443615 seconds)
done (took 617.286773679 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.250962144 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.257384759 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.244298069 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.260516582 seconds)
  done (took 10.189462473 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.263338336 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.260822727 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.262742117 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.25909893 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.26337105 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.261481771 seconds)
  done (took 8.750927326 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.254238428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.263223755 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.261386162 seconds)
  done (took 7.957381799 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.454752798 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.286370291 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.571963012 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.276172941 seconds)
  done (took 8.768125415 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.263957227 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.262672118 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.263236087 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.265595431 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.265349859 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.266427421 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.266639469 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.265660546 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.269452857 seconds)
  done (took 12.568296186 seconds)
done (took 49.409820151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.25137235 seconds)
    (2/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.761715979 seconds)
    (3/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.27509924 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.26948901 seconds)
    (5/286) benchmarking ("sort", Float32, false)...
    done (took 2.257135589 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.276201633 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.663658069 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.147661323 seconds)
    (9/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.381536916 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.502297485 seconds)
    (11/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.364933752 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.298935105 seconds)
    (13/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.245017655 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.246088713 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.284563385 seconds)
    (16/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.267696913 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.244354888 seconds)
    (18/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.285354645 seconds)
    (19/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.246597006 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.36815884 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.251030832 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.252343106 seconds)
    (23/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.245674078 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.064066136 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.262913205 seconds)
    (26/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.77298716 seconds)
    (27/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.38556329 seconds)
    (28/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.282468287 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.659198879 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.305487006 seconds)
    (31/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.343671879 seconds)
    (32/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.361973853 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.38411952 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 2.258867142 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.258007451 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.247443726 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.291738629 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.392473168 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.26020447 seconds)
    (40/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.280792854 seconds)
    (41/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.255979886 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.286576501 seconds)
    (43/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.308465035 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.286046569 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.271682094 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.27269693 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.297510046 seconds)
    (48/286) benchmarking ("sort", Float64, false)...
    done (took 2.267829568 seconds)
    (49/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.286065011 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.247203876 seconds)
    (51/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.248185631 seconds)
    (52/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.284508893 seconds)
    (53/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.975766042 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.37225551 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.24750599 seconds)
    (56/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.273887457 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.516305314 seconds)
    (58/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.064149424 seconds)
    (59/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.263840354 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.319907405 seconds)
    (61/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.462804507 seconds)
    (62/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.386149466 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.189793342 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.041650081 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.248622315 seconds)
    (66/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.858886142 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.256168223 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.265643226 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.255662871 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.280008392 seconds)
    (71/286) benchmarking ("sort", Float32, true)...
    done (took 2.26803549 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.285532124 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.248338149 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.267160652 seconds)
    (75/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.155894553 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.248570144 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.883730679 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.247826821 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.146152135 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.269738283 seconds)
    (81/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.655740108 seconds)
    (82/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.197448868 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 2.280200796 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.159911294 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.277530327 seconds)
    (86/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.277937202 seconds)
    (87/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.259368475 seconds)
    (88/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.298121594 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.258388165 seconds)
    (90/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.259526835 seconds)
    (91/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.40895084 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.359249474 seconds)
    (93/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.253367416 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.289506745 seconds)
    (95/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.249817719 seconds)
    (96/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.273242549 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.282102475 seconds)
    (98/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.355937623 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.737436635 seconds)
    (100/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.852438391 seconds)
    (101/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.295283211 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.262288431 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.875122239 seconds)
    (104/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.250577369 seconds)
    (105/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.348130875 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.096754799 seconds)
    (107/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.262488416 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.490541667 seconds)
    (109/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.34646651 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.262945284 seconds)
    (111/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.37492339 seconds)
    (112/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.251925536 seconds)
    (113/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.306027779 seconds)
    (114/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.328508531 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.251869721 seconds)
    (116/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.449543878 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.257383546 seconds)
    (118/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.350585887 seconds)
    (119/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.263200548 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.136936614 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.099570773 seconds)
    (122/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.251367107 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.608696735 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.268278597 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.794397511 seconds)
    (126/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.983182458 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.304257737 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.5229233 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.6598042 seconds)
    (130/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.640895408 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985112166 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.538573608 seconds)
    (133/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.476062493 seconds)
    (134/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.285582397 seconds)
    (135/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.300248854 seconds)
    (136/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.265756177 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.38075191 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.267144319 seconds)
    (139/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.298934736 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.252087378 seconds)
    (141/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.269701255 seconds)
    (142/286) benchmarking ("sort", Int8, true)...
    done (took 2.283714099 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.987814564 seconds)
    (144/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.269090909 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.290866913 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.265590504 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.303613941 seconds)
    (148/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.253060957 seconds)
    (149/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.300456222 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.389913603 seconds)
    (151/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.309722266 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.25456954 seconds)
    (153/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.451856278 seconds)
    (154/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.261787233 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.325719777 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.266893758 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.729037304 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.35621769 seconds)
    (159/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.378786171 seconds)
    (160/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.624956504 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.385695999 seconds)
    (162/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.331590616 seconds)
    (163/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.628858408 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.252470051 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.280854417 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.036509906 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.978299867 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.310762862 seconds)
    (169/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.25454098 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.256307915 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.259904347 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.295007796 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.282699464 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.317969913 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.26781363 seconds)
    (176/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.280735755 seconds)
    (177/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507390641 seconds)
    (178/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.264506093 seconds)
    (179/286) benchmarking ("sort", Float64, true)...
    done (took 2.276475529 seconds)
    (180/286) benchmarking ("sort", Bool, true)...
    done (took 2.270340218 seconds)
    (181/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.257736173 seconds)
    (182/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.267702048 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.332888909 seconds)
    (184/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.31967791 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.285061392 seconds)
    (186/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.270752878 seconds)
    (187/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.262957509 seconds)
    (188/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.841244734 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.255799027 seconds)
    (190/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.409704357 seconds)
    (191/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.260866232 seconds)
    (192/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.776104806 seconds)
    (193/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.323314175 seconds)
    (194/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.880645432 seconds)
    (195/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.340578531 seconds)
    (196/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.854452442 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.840854987 seconds)
    (198/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.287461764 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.194812286 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.485383875 seconds)
    (201/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.259190631 seconds)
    (202/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.265235295 seconds)
    (203/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.273725999 seconds)
    (204/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.276470555 seconds)
    (205/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.263571833 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.370254517 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.281188304 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.269023255 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.293552477 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.352781084 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.258460589 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.257482109 seconds)
    (213/286) benchmarking ("sort", Int8, false)...
    done (took 2.271571744 seconds)
    (214/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.007321102 seconds)
    (215/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.464154426 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.31162077 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.281949376 seconds)
    (218/286) benchmarking ("sort", BigInt, true)...
    done (took 2.278804536 seconds)
    (219/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.640227976 seconds)
    (220/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.289016528 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.676991392 seconds)
    (222/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.297010322 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.616495389 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.286630644 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.312071761 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.260665137 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.171715421 seconds)
    (228/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.274497985 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.274073201 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.192824799 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.305173612 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.286956931 seconds)
    (233/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.268956008 seconds)
    (234/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.261948818 seconds)
    (235/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.261695669 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.010857219 seconds)
    (237/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.267889631 seconds)
    (238/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.29223855 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.298283413 seconds)
    (240/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.265287563 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.390154415 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.477076036 seconds)
    (243/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01335583 seconds)
    (244/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.27722608 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.306572661 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.382764822 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.259418414 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.667609361 seconds)
    (249/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.373332014 seconds)
    (250/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.26487736 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.710400427 seconds)
    (252/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.304825423 seconds)
    (253/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.314429992 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.513751332 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.123514318 seconds)
    (256/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.629267045 seconds)
    (257/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.26249431 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.164182213 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.267633473 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.366266197 seconds)
    (261/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.279750904 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.281750022 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.36408398 seconds)
    (264/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.259781767 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.409246707 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.122295202 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.276801475 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.264334222 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.278112103 seconds)
    (270/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.273239561 seconds)
    (271/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.406430295 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.293719432 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.316119018 seconds)
    (274/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.262882898 seconds)
    (275/286) benchmarking ("sort", BigInt, false)...
    done (took 2.306495232 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.123706034 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.278320716 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.555967333 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.276340605 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.304300109 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.372786401 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.519110801 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.375279384 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.105694823 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.282680917 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.340305431 seconds)
  done (took 547.555835308 seconds)
done (took 548.736035786 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.310390971 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304818687 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.286578814 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.309124935 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.39870441 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.462540239 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.297975599 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.290450977 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.335034677 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.336139084 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.285941279 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.462829445 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.286935391 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.28675148 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.286544494 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302171344 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.276178325 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.294586906 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.304103786 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.298268706 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.304620856 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.286057445 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.336622717 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.463548056 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.292316159 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.290772342 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.291566879 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.307340342 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.399810385 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.292482971 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.292232714 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.300594012 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.279735598 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.295115457 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.283262457 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.307493232 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.300695267 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.29984566 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.293222293 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.320527281 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.289954159 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.293953453 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.290595726 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.29091279 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.289224987 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.293937834 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.290535012 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.296392541 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304468663 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303780827 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.285628058 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.309395558 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.293282705 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.292084952 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.30098802 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.291002975 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.293321693 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306753581 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.309836373 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308427575 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.279547956 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.304287835 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.29199199 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.306642868 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.297438182 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.286888171 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.29255981 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.29691007 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.294492746 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.303389428 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.287448936 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.305998173 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.293175234 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.304136193 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.323037346 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.285826139 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.293194902 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.292388155 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.299140802 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.289809803 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.302014844 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306717752 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.298131349 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.292621097 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306347006 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.468883278 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.302120066 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.292663268 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.30228059 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.310502517 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.300228621 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.303269264 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.296511591 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.289607561 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.302819186 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.298576663 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295387502 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.295388877 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.297831513 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.304630497 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.294246827 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318909559 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.290667252 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.289824297 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.29274974 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.307919215 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.296280287 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.299301988 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.314930164 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.342683743 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.294969276 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.282944957 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.304897756 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312641314 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.301348348 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.298057121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.290244252 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.282683808 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.29452541 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.316735936 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.29771809 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.294427833 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313297866 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.296932794 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.294527473 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.290372759 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.303191465 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311681496 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.416566562 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.307153021 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.327882243 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.293616107 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.301364078 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.330441974 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313128829 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.327560828 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.299350245 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312725506 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.312862923 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.294342173 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.306751079 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.307638533 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.299209759 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.303924568 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.292662401 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.330871887 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311115183 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311157613 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.317507821 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.416655442 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.293842708 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.286778523 seconds)
done (took 215.933731172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.35386518 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.294187075 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.381975294 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.292921294 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.392640505 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.389749472 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.290047978 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.291212243 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.291211025 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.667465286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.290737422 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.292452001 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.291455854 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.289592461 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.375246663 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.293811558 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.289393453 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.631729118 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.293551177 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.369757128 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.292703418 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.293064377 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.294482686 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.673093109 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.292462987 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.290139422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.370088228 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.296064353 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.638269833 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.290659257 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.290017292 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.638290514 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.385984821 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.311200492 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.303826255 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.301395339 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.395028537 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.314752965 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.375153518 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.373857571 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.381536515 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.333146796 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.287848069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.292112151 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.297008771 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.295335741 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.292761113 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.323269455 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.294730027 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.293399357 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.63500885 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.307009639 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.3025437 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.293773902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.294458281 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.31606163 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.29574234 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.29738177 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.388036176 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.296516683 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.357345535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.675946219 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.671599851 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.296962003 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.29373522 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.295138464 seconds)
  done (took 101.802247981 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.363356478 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.369984807 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.436320098 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.305348801 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.349455932 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.412046517 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.302980158 seconds)
  done (took 10.750510742 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.302635914 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.29774925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346845572 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348304894 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.297541729 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.531936703 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298591422 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.307719944 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.295368329 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.373754085 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.29876448 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.299602146 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.304497921 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.294079583 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346524262 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.309555574 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.412659551 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.297925114 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.299018421 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450762638 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29633662 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.305527415 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.371777212 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.308208055 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.300430235 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.305827405 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.265066395 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300238852 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297007046 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.297957788 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296830949 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.398498822 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298807846 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.297487572 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297343047 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47553124 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.299416833 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297746508 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.299702485 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.299567369 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.299212928 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.299531946 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.299402945 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.298879493 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.299775139 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.322911312 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.300608277 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.300258431 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.300407686 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.30095695 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.374704262 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.300653097 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.297375699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.29864298 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.377374349 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306772071 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.301028485 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.297270532 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.301547279 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298441767 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450779357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34780122 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.299891761 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349101592 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.301733988 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.301526647 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.299564595 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.300786859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39425065 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.3005689 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34849885 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.300295029 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.522771386 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.325157622 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303933605 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.302739445 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.303335359 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301320446 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.297308883 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.307456629 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.298308499 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.302972302 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.3070271 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.299710245 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.299964894 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.484322865 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473217308 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.300653052 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.315910922 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.309197313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.300944443 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.378201219 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.302015371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.29958524 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353890096 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.416555578 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.378654974 seconds)
  done (took 134.893488094 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.308132476 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.310730182 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.306419379 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.3251339 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.304590303 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.303589095 seconds)
  done (took 9.074805383 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.306061253 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.30555539 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.302561096 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.303749773 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.30454435 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.305046816 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.304311465 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.305436628 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.307852162 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.30433697 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.305367445 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.305691119 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.305144947 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.304781144 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.305124075 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.304762216 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.304834829 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.30226971 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.305575402 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304001519 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.303902315 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.304474815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.305104694 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.307940185 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.308599008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.306495008 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31402654 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.305292268 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.305262128 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.313058233 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.308358351 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.306966234 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.307809746 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.310390751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.309204207 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.307544499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.310413211 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.306853447 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.303349332 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.307453334 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.307720122 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.306869916 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.305931122 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.307923782 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.308073155 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.311107083 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.311953862 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314755803 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.307112004 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.308428766 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.307888432 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.306504399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.307642631 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.308912454 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.309088188 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327275473 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.312723171 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.307617022 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.307902669 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.308474542 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.307497257 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.306893763 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30795406 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.311156052 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.306303845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.309000106 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.308544363 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.312139078 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307053018 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.308736661 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.309773311 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.307546208 seconds)
  done (took 96.365503702 seconds)
done (took 354.094537073 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.723612842 seconds)
  done (took 3.945981597 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.322582646 seconds)
  done (took 3.547856508 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.657385381 seconds)
  done (took 21.883509411 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.360607899 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.333351724 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.333550361 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.305754427 seconds)
  done (took 10.555995401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.527838221 seconds)
  done (took 3.750926115 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.309853226 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.303888223 seconds)
  done (took 5.838595623 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.55326081 seconds)
  done (took 3.775695014 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.60015837 seconds)
  done (took 3.823372491 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.335191257 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.317393502 seconds)
  done (took 5.884671465 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.306750828 seconds)
  done (took 3.530777691 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.590881314 seconds)
  done (took 16.81615032 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.300173583 seconds)
  done (took 3.526731248 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.337029494 seconds)
  done (took 3.560590483 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.757061154 seconds)
  done (took 5.981416183 seconds)
done (took 97.644257345 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.302624909 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.312959303 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.313043409 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.311497836 seconds)
  done (took 10.46380217 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.344576399 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.344297139 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.345481926 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.354579556 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.358183993 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.365732204 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.337133464 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.336753391 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.356415636 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.346772825 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.36444704 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.347356305 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.345245681 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.337278094 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.346255501 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.347454117 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.356050337 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.348416314 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.337196517 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.348382201 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.313876864 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.356249972 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.348557362 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.313330268 seconds)
  done (took 33.525650194 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.808560568 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.382490229 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.467002806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.363205164 seconds)
  done (took 7.246296727 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.36446263 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.367836994 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.379610084 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.41675709 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.443367833 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.375325818 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.33907114 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.333801219 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.320781814 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.366412651 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441212653 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.381037552 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.450972234 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.313130296 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.499366646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.312894298 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.313436038 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.365630619 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.416823151 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.433287438 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.314250318 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.364943059 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.368764019 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.38304789 seconds)
  done (took 34.294361183 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.316118451 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.333050961 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.312217857 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.312689307 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.322095663 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.31351951 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.313501309 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.315130524 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.313722384 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.318758387 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.31264068 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.32552548 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.313827942 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.314385248 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.320259536 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.313957629 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.321524833 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.313446306 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.314288872 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.320924975 seconds)
  done (took 27.570177952 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.30654658 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.307709207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.660383947 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.564020122 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.308807531 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.315464295 seconds)
  done (took 13.691167611 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.383385271 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.515439093 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.313868728 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.661801627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748844779 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.323767744 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.315702145 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.554218771 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857631589 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851910218 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.379305883 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.384202842 seconds)
  done (took 19.520484861 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.321372559 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.315573088 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.325435718 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.334188185 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.369865203 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.329745756 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.323944918 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.309943438 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.376846881 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377237673 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.327507434 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.370982908 seconds)
  done (took 21.313848912 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397537315 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310848908 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313353152 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321158382 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310295874 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520331073 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391075292 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040502673 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.339254845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583673936 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30938353 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422190218 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564397211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313131591 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31794207 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.29449495 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535420875 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789586952 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311516669 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314272227 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342651694 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310057017 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337975519 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.530059487 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531674609 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309826827 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.571488542 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310224229 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589456146 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332104563 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322402629 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312336721 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585911845 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960164015 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433915423 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519328286 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323414251 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319275267 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.306327517 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.312676468 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321561816 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312504185 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322259206 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311922399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311181529 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317708484 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027574179 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.335782999 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.309077959 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310947972 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567992422 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415268688 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.315587978 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312125359 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369376566 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313307992 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.31691072 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406633839 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88519372 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313067443 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332000403 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.320029654 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320828074 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313290952 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930876506 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.319206426 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.31803648 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31634327 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312805349 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3137797 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333615276 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31399238 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.338389268 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313834895 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010872615 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337249734 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316600988 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855218617 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32667119 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.321790969 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542458633 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314339719 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31385813 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.313507841 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314238671 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011831078 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325070562 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.300482552 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355656678 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.043286446 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549354438 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341060223 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337700062 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538960777 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.302097994 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314360706 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.316279054 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315779546 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336259402 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019966689 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33310612 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.319944759 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570371996 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.526595293 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318016168 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308698893 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795505002 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35453413 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.337231559 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327322533 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530757112 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.887414557 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332102517 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31793103 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340039813 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315683095 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05290686 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328314879 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.326756492 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329520941 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57744548 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.112911206 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318560092 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38527137 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323232575 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315845969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318753231 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320678234 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316565296 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.518915524 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342366887 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.334828755 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.318018324 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316917163 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.325774992 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323443852 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.320144622 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541180807 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32901725 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599869407 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316498915 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316845636 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317208976 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.540677605 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.31557313 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.33066982 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578477425 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321626328 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329640285 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340001148 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341402369 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423178487 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34611958 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.335259094 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584528557 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.322810366 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.323135042 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324312328 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327235815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327043845 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.32449497 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329160655 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897440044 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321536351 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326598684 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208972079 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.333639242 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386762801 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326659937 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530877849 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.328408921 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337682454 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.326302013 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.323330509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550176944 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330381809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.322728753 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401183944 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.791117655 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911283953 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333930199 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.320835181 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.317665513 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.317917661 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320607734 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32033107 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321118684 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529075196 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343112448 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32489738 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894857741 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323837938 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324991938 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.328211645 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333400964 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.327518506 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322667442 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.325338375 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335663777 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340404559 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.340623535 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465305795 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.336625784 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322269117 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.838313848 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326718537 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322571535 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321350206 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355632558 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325523914 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132179588 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582436248 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324186159 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572178103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331208453 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.337520816 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.321093993 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32796409 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335766812 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.342281393 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354869416 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.335435464 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328028281 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332318508 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891660575 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041665582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84767246 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331339417 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.331392582 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330127884 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034104339 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341534318 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325272904 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553224592 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032986496 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342588557 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797761505 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.340583503 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068644199 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584106816 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561185864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330560818 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.332461236 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585107397 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54504315 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35934062 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324606319 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347367462 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.31150665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876817256 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347184239 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405618635 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036130597 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350186004 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327142899 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.35593079 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.341487648 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724173612 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353004815 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32565651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32647403 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3492942 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132131866 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334910903 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326546962 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938875211 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330756373 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.81430052 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353420152 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.537200565 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.345233774 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.332076117 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.323958477 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.333865859 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.590189376 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579244805 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335327175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331812389 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860642779 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.183098283 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.332932299 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328880212 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06459526 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332882469 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613399155 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.339506477 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.343272852 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33624277 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327444766 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328726317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.325063531 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335831524 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3024527 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812201834 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.343381719 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340364557 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333889757 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178561687 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583562987 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.343416364 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902605642 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554721913 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349403155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353144265 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.333353034 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328474979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.317307605 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329196917 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564269212 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354975348 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55333369 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338492507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.318285888 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407209791 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541672248 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328428106 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329910322 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569807933 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.337944712 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.34219601 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041616544 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349615993 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324330344 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327681887 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335436817 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345754553 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393627326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535231193 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.343561122 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.334294095 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718166244 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348678646 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325041395 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.338214984 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41918274 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328749218 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.343136428 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.105321982 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899826278 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056110901 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909542685 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59196473 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334084577 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327219134 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323452956 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472699955 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323122059 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59743309 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322746884 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.326994514 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354764077 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322622821 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325826754 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543295929 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599319288 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324330716 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3285801 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331664585 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.324477715 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334496183 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.53572569 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814579944 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881707127 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327177779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326788603 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043669646 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617326311 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324584661 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325687865 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324849358 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.342670005 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366350176 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.331580796 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326960657 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473186603 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577143409 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989001536 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.35596464 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.351723002 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.101191201 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333415553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58943674 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324211357 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547220537 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913959327 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017124442 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597222628 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396737794 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538410407 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.332958888 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474362763 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.324217951 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335475252 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327318308 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172383819 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.323590575 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.337122458 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909876346 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591279711 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.330450469 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.324648339 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358652485 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.33741329 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.551384914 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037151243 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552244059 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337833281 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334825003 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326967347 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908464035 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593089123 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331768186 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.332386024 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564942717 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571571227 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354066663 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.779975677 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.324636659 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877443307 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.301952726 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351385154 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339698926 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030807426 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910944361 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.327322856 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824292026 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331429074 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32910626 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612149247 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.335235554 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330363912 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614859194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.334957996 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33744987 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551159496 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.915407707 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076594679 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.356591447 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357845685 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.33297043 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329956058 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344169213 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331579739 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341379371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.749982936 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360505888 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331569888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342630409 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.328105091 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337790622 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.336717936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328981216 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.33654136 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.3394714 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.319386243 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350397145 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437147308 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889830899 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353019194 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.007562246 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.663025281 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58699068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338399826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.326402629 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.336062469 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332824242 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33319458 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332310209 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346031663 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887845549 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.34246353 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.350828024 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337902198 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.54789532 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544434605 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332713795 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548622975 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348057714 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356702681 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.320546007 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335701352 seconds)
  done (took 947.211385922 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.347538715 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.336530473 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.363869721 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.371806621 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.350727233 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382472472 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.344576438 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356305271 seconds)
  done (took 20.106467704 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.341875653 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.350227033 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.341000923 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.352294622 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.339419181 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.792271525 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.363051444 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.344019408 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.34576579 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.342126788 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.348634172 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.964032565 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.343445022 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.336917312 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.33055813 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.351652788 seconds)
  done (took 31.839339884 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.254563019 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.461118061 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.157952919 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.35570853 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.368866257 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.335560218 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.539337888 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.359145857 seconds)
  done (took 26.087377739 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.34681741 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.346613371 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.344844117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.34731675 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.346594296 seconds)
  done (took 7.985976508 seconds)
done (took 1202.081384855 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.339673708 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.34137627 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.339771424 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.3425349 seconds)
  done (took 6.61731218 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.322417026 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.322897965 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.324243878 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.346339783 seconds)
  done (took 9.569602466 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025965426 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.945474561 seconds)
  done (took 5.22488329 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.339719878 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.098384556 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.074969739 seconds)
  done (took 7.768134725 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.632065723 seconds)
  done (took 2.886966142 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.74712406 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.705834165 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.536939133 seconds)
  done (took 6.246373382 seconds)
done (took 39.568106887 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336728084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.589176501 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.49518999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344893151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.498833314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.494889936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.140955655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.338147148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336479781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.348968316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.344721517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.500554547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.050719684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.590057151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.050493769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.590913094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.501300684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.340078993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356683213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.354038202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.140204334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.344432147 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.347605527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342178262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.507943974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.483335804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.337496388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.589703849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.349833182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.337907043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.492068512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.338074276 seconds)
  done (took 81.471373322 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.33821068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.33910296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340826845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.339517706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.339204178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.348692046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.339879839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339212382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339178989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.347007729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.338746142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.339859664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.34101123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.345773215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.342056499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.346127859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.353570378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.34011248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.350851031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.339284989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.339488571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.347077068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.339982251 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.355061879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.364803413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.342874464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357466737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.341840711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.340517177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.340250987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.348459904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.360030436 seconds)
  done (took 76.284930549 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.33967869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.34110288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340920607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.355199772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.340316824 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.346927096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.341983977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.348218317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.341586312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.340929652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.347487499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.340035256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.356624687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.340340871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.361582654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.342440673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.347814883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341060922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.341432982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352885274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.341904079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.341856303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.341874964 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342235115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.347345005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.343414246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.342794025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.342673377 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.348037434 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.342874983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.342111448 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.341834787 seconds)
  done (took 76.287766311 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.537280369 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.349984005 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.35105052 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.281987482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.350333412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.3500743 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.343830133 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.539623018 seconds)
  done (took 14.364397732 seconds)
done (took 249.66445246 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.343375938 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.344615346 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.54777582 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.372077426 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.343358024 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.390319722 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.369828723 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.541720001 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.289530368 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.545307951 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.345970733 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.369822207 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.343856341 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.368989852 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.627235414 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.481806995 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.245390554 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.348334415 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.690491861 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.362251768 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.623381852 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.346376688 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.552585856 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.281498654 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.363741528 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.346170333 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.351887383 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.240654791 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.387030801 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.696992302 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.355705024 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.333290813 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.436542994 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.412541529 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475882746 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.466538478 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.360622356 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.418193242 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.553261576 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.358322707 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.353225467 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.112249881 seconds)
  done (took 81.360684983 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.351536702 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.465069308 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.353640778 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.352621825 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.352839504 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.456107691 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.439849826 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.352538489 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.353798477 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.351788192 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.351255794 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.352664049 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.353475961 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.353008433 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.353212312 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.354185482 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.353926777 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.356350841 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.35574865 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.390922915 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.461700818 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.357376171 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.348436786 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.352818818 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.441492026 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.458731799 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.353441687 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.347986679 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.389150032 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.355111921 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.357254689 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.393904131 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.355470725 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.356418103 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.46410087 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.441090455 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.357225277 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.352955163 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.459963192 seconds)
  done (took 55.075066414 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.356693431 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60677735 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.771785111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.372845895 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.356890294 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.36153482 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.433656698 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.361379346 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.361192026 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.362488644 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.525566084 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.361295887 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391387414 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.797444201 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.36126926 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.357352763 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.357653682 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.358963803 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.615291117 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367753948 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.452842923 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.358892469 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.435709034 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.368168941 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378870143 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.359732383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.364425891 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.945140641 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.361396759 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.527224524 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.117446268 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.439371008 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.885941205 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.78440965 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.204476553 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.359268395 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.358716425 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.531138989 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.361250331 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.35961198 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.433763589 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.359240643 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.784451283 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.049166752 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376036393 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.35892334 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.967460963 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.531919646 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.594805002 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.372961142 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811956868 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.364142764 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.361056927 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.361495115 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.594276377 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.37576581 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.360048471 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.975205876 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.384171693 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.43611873 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.369611224 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.36060391 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.620556476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.369878628 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.610463932 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.371907034 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.369295233 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.379945777 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.785703303 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.372089459 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.080635542 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.387137323 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.360422613 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.529432513 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.617314773 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008253699 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.374372895 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.625502919 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908050952 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.44364365 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.373744598 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.937038751 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.449093306 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.375242208 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.364088847 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.362164973 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.362005299 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.406406156 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.434386889 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.02045994 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.066224807 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.005240681 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.463242102 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.383331565 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.362901262 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.972660636 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387136015 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.362354724 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778430365 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070091953 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.388433819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.370269491 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.054832817 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.38399085 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.440655293 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.371524607 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.790458378 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.371734198 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.409318452 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.363808631 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.371287604 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386839675 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.440068409 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.369145864 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.36544428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.040769581 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.56646962 seconds)
  done (took 180.283387893 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.364059411 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.35695581 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.361565741 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.358328865 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.357311767 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.367982144 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.356968293 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.358612818 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.364443595 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.357099065 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.358597033 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.359426601 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.360474556 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.359308994 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.370509126 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.365777846 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.359146611 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.358488419 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.359528738 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.359124632 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.358485813 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.382901036 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.359315561 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.360762723 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.360927534 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.360775503 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.361835293 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.361401645 seconds)
  done (took 63.396088389 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.366837648 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.910446407 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.374317 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.492918702 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.386602147 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.364499131 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.490698043 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.429003962 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369320765 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.365156082 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.364324667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.661710094 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.377428332 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.862367641 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.555974329 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.501734173 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.872295258 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391329209 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.364032624 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.364681774 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.494121899 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.38157574 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.66012487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.922942488 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.376182765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.914937579 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.369265397 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.369279913 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.366337081 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.917870251 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.3747731 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.66320336 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.450197904 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.424860005 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.913821983 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.867712611 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.879408279 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.511387181 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.376567733 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.365284494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.365758353 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.357683938 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919804969 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.378106865 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.370128354 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914910273 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393965285 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.369985052 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.374147939 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.368409931 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.425306118 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.427485408 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.667857207 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.931805105 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.452597648 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.390833555 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.496777822 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.739110147 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.375350337 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.869848331 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.36737895 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.922769292 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396193813 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358750601 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.369430072 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.373958758 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.513999818 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.504978397 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.872581484 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.395484005 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.864989621 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.530906742 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.377229192 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.368760546 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.372487565 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.918582376 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.868659472 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.532032382 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.509579212 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.561534047 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.398689994 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.371390705 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.360631314 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.445831027 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.376086257 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920547861 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.884741518 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.388855196 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.372876812 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.372752851 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.373469416 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.542637392 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.930936031 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.447443185 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.865171733 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.684999266 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.666885213 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.373969806 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.428022156 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.387356784 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.670157417 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.374629539 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.426735946 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.792762192 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.670430947 seconds)
  done (took 162.843202221 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.611020469 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.40218951 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.460231854 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.532965311 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.981524379 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.960470478 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.380307456 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.489970953 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.483540718 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.627984217 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.381285162 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.464462826 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.591067179 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.448933579 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.093225773 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.438206834 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.460177522 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.526635397 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.515370652 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.376322771 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.020603667 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.663140622 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.565415119 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.391168665 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.4762154 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.108981485 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.944395734 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.946837886 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.555820371 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.389195238 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.899281655 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.376679147 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.297721508 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.023477006 seconds)
  done (took 64.169108547 seconds)
done (took 608.389771848 seconds)
SAVING RESULT...
DONE!
