cset: moving following pidspec: 30918
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369407748 seconds)
loading group "string"... done (took 0.506536503 seconds)
loading group "linalg"... done (took 8.429778386 seconds)
loading group "parallel"... done (took 0.17449568 seconds)
loading group "find"... done (took 1.358619063 seconds)
loading group "tuple"... done (took 1.957398357 seconds)
loading group "dates"... done (took 1.344988994 seconds)
loading group "micro"... done (took 0.212546018 seconds)
loading group "io"... done (took 0.56540458 seconds)
loading group "scalar"... done (took 41.1670041 seconds)
loading group "sparse"... done (took 12.704479918 seconds)
loading group "broadcast"... done (took 1.131095699 seconds)
loading group "union"... done (took 14.044937572 seconds)
loading group "simd"... done (took 4.863517544 seconds)
loading group "random"... done (took 9.732725181 seconds)
loading group "problem"... done (took 2.071827236 seconds)
loading group "array"... done (took 23.365665692 seconds)
loading group "misc"... done (took 1.073449044 seconds)
loading group "sort"... done (took 3.53315034 seconds)
loading group "collection"... done (took 20.793691051 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576283458 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132711342 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144272297 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173502211 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201007077 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136229912 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152852017 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.458942641 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.989213662 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202223087 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137988 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.498749946 seconds)
done (took 5.556210539 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222476279 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081976282 seconds)
    (2/2) benchmarking "String"...
    done (took 0.124641109 seconds)
  done (took 0.907357552 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072246887 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170446021 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091164219 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107226222 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106714775 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09059364 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.105999465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106088466 seconds)
  done (took 1.481306084 seconds)
done (took 3.39710817 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.732132033 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.826211669 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508199693 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12161891 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152765986 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126834927 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.300933119 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.141038552 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122429437 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111262825 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174385583 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.353368282 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.476432865 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.931062439 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091734566 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124147149 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078197595 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692786971 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081605813 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114621684 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506151434 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.106145455 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.111997538 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125736735 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204572109 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112161687 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179952823 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106454927 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671121723 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098916239 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180772932 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094257781 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157727 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.211683172 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.092866965 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089353024 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679111619 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185886537 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107955842 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.090931128 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676654895 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075572483 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195159946 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104874007 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10784935 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186269697 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100258103 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092254387 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080806271 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101168459 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.151310382 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465374492 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103137865 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.139542902 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091595398 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699795819 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091294296 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152013171 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121125639 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106145131 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080107349 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.103753148 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153609964 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096181755 seconds)
  done (took 19.392825423 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114080352 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13702075 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090503474 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136973698 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135565281 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076058952 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097179988 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074854389 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122002793 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178306491 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135276454 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141069489 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07254927 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091914706 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098246457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245564108 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116259954 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100541222 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093424431 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086364998 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137125762 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.091371289 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106615464 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106838393 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164817139 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202480745 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105581879 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120098794 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090323052 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096787675 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139827865 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156177763 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073275484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089417333 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174879324 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103019677 seconds)
  done (took 5.020322557 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191116568 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098787805 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.199258806 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.108280919 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.188269135 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126337043 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179604273 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097853939 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257314541 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.162747103 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160350141 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125684702 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113076818 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075603096 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092902947 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075079836 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.698588956 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164200153 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142742821 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119462939 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099338477 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07847048 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36967142 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081493858 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093637517 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080157239 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08587137 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165028163 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079545382 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.209344919 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095549053 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105547273 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12862764 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191881216 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123343297 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.114654451 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098606659 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077327602 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191082189 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104547265 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073282518 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119547348 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12874176 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114003076 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09621189 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077267615 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242090868 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103428028 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078803526 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113095455 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.008758502 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194800144 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124843911 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090251878 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093270875 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333572326 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094472592 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099008739 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076726943 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281191161 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113071326 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093981114 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073838847 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099352617 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075801976 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384085717 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09935297 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.851082094 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078933508 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.149800797 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094470167 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079242886 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098948005 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081156471 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099576397 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096171366 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094303307 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076658867 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093928401 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074136151 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098624486 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111930208 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081489827 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074847718 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160416371 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114468907 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096081253 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122333275 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080362488 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091885991 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124245205 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078074889 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078712345 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137305123 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100744761 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111035335 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079843957 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140182964 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092340005 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.161406883 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092839453 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103222765 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097782365 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124764855 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114862584 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075326385 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09818812 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073505852 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094495411 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144180319 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090875003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07709961 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095861576 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089001476 seconds)
  done (took 22.75424921 seconds)
done (took 47.867234232 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.377644226 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106330958 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108121005 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105823494 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10512268 seconds)
  done (took 1.583181295 seconds)
done (took 2.339712686 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312815723 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192570046 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083256714 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16837271 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099822406 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174613073 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158647226 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114540262 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18416027 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096355359 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163182729 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095898206 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083183206 seconds)
  done (took 2.708804681 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088472173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113181451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076552774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085749574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088040175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087263183 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108097762 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102477867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08173338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088015 seconds)
  done (took 1.775743587 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087321129 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093987468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093103067 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085430784 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087800889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087097199 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102269344 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095885841 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102637678 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082411477 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087122167 seconds)
  done (took 1.755910256 seconds)
done (took 6.987290781 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.069832588 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.582708592 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098737857 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169201321 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326977092 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198967879 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.628796718 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131904647 seconds)
  done (took 16.153763471 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104960873 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111575332 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075155926 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093780138 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076978781 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09509917 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077610008 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093135129 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075928133 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078433801 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092577872 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077384465 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091776547 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075322967 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092332466 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077368729 seconds)
  done (took 2.205676077 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112408696 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11039431 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099196233 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08434067 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097295146 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080071009 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100416786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08246914 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094205727 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080036437 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099935696 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082481208 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098867452 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07853329 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099101223 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.100969136 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078324916 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09829263 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082901647 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098921717 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084108472 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096345509 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082682043 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100815688 seconds)
  done (took 3.082137487 seconds)
done (took 22.194601787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160040291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079426401 seconds)
  done (took 0.99617082 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095720962 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113953314 seconds)
  done (took 0.973333089 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101908178 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092416308 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130066221 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093607884 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093541084 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078008927 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126191373 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094495951 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077395024 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077399151 seconds)
  done (took 1.729472657 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081012241 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0804068 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102690845 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114019467 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086986904 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094882952 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082020081 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096943036 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082577467 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09196077 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084446178 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113366868 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100313111 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097575816 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097059383 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082841441 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101967162 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097142161 seconds)
  done (took 2.454836417 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.074993604 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079052629 seconds)
  done (took 0.917615245 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079050294 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075277573 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095189675 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094740423 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074212762 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074507496 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091873428 seconds)
  done (took 1.350947412 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.462519445 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177609927 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318887424 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109503871 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.130090558 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337397396 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.128471598 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108324921 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108504241 seconds)
  done (took 2.686994407 seconds)
done (took 11.870729674 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087413974 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.12832924 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.473555521 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110868848 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073242571 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.141044695 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.248824424 seconds)
done (took 2.031583363 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330823195 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117100386 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0842235 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07428933 seconds)
  done (took 1.371723152 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074400453 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081044346 seconds)
  done (took 0.927022023 seconds)
done (took 3.072579774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074087851 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07351653 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088563276 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.104642874 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092309975 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071170152 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091255633 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07357915 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07351145 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091560656 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074391383 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090060764 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073856968 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070859708 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087885716 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073897743 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088210546 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07341493 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.190982691 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087871715 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071360364 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090627128 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071063521 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071798679 seconds)
  done (took 2.854187539 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10084832 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092026298 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080935518 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096916684 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078312918 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097357711 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080689754 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091143976 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079851923 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093707861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079347742 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095231374 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076817006 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094771316 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077273709 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095538373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080170293 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091808924 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076809234 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095754414 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079248161 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092318855 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078544397 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096505397 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078995912 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095337436 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077228177 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09172626 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079995995 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095759293 seconds)
  done (took 3.395178336 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080292568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071457529 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088793851 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082791894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088721908 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07606717 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088411006 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071630916 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077812078 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08857212 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076616167 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089286458 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071567953 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076178315 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093119247 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078975152 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106184885 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072517628 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088645401 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076128616 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.093687397 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.071085783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074895501 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088799442 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.072807439 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088841683 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072873754 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072457943 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089452594 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071808365 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093952784 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078527029 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071549568 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102021567 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078524166 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088819904 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080081894 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089488523 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077361783 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071094232 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089515937 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07203846 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08937318 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081802076 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092151013 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073662542 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071617479 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093015153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07613936 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095621804 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071554876 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07131398 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094893617 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07757549 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094659459 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071385104 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089855379 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070680786 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077020394 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089183331 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072067901 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088431158 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.077840182 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090321994 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094628749 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100105943 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071500924 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077485214 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092595906 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079925393 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094350027 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090540349 seconds)
  done (took 6.722911888 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076642105 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100316199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073915558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07395937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087802853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07245224 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096287767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072075228 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091519652 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090405236 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090262189 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074265655 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091462786 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07577665 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073732068 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091525417 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083603799 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087550664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072772817 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09290836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072920743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096087351 seconds)
  done (took 2.620262411 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214356475 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100428197 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134936466 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090962654 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111593205 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107723597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079992617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09889411 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079642937 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10021529 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082313598 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096417417 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110135905 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08342786 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099730023 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082794471 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097012967 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083733062 seconds)
  done (took 2.635538101 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088040563 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092283798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098764926 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09210801 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077050265 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09560197 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082388769 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108215024 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076974943 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092793288 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085670707 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094240368 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077350722 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092083047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077738675 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092538953 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077805702 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075551766 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103030708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098501794 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081974123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103604664 seconds)
  done (took 2.750334387 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093630651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094930112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096925907 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097636197 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075426453 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094804564 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083845342 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094174615 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08564426 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095283273 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075594968 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094328723 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084304179 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093583515 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081505758 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09416543 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077172224 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09298401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078238929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074575602 seconds)
  done (took 2.544274563 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116235955 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106642122 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090676342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119023734 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092637047 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108463774 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1192782 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090357056 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107899826 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103586499 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106311645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08961887 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1192673 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11431512 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090448572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11968317 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119552838 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101301005 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107362309 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090136897 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120845726 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108524872 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101304108 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107455711 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089681484 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108090257 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089410949 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114484155 seconds)
  done (took 3.742133017 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075399977 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074679836 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089638289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072069864 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071829353 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090711939 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072747972 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090227532 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074761262 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071967282 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091973758 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074436945 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09152218 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074544611 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074416686 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092119949 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074705634 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090020965 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07245726 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073483824 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091648739 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074275564 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092019366 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071502819 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07209648 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092030096 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073294948 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091193189 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073966374 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072922343 seconds)
  done (took 3.187528363 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08242838 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099327988 seconds)
  done (took 0.974076311 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072841593 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109678568 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072661068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079269576 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098017691 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076232673 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103292376 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097465365 seconds)
  done (took 1.499365288 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099313235 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113883039 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081439885 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104571532 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09436003 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.110428237 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155450184 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081534814 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.100531619 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076617021 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112970003 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075631917 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083620128 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098555573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085278989 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107920506 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077127725 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103640199 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084066583 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095913678 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082029857 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110313887 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086637868 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100900714 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079048015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105771215 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090031685 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104573411 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081501504 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105710805 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.082725788 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.0875791 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080872612 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099488002 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07758925 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111670136 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093901605 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099881888 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085496817 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099197668 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085401897 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092616931 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086865923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100273934 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088323253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099451105 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082614774 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092507255 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076415971 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.097402435 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.073787843 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081350324 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088279263 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086101615 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103729344 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111545344 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078712017 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080750636 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.097732309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079714442 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101133681 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080708234 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103441968 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079445235 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103141371 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085324572 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101857984 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074007318 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087981169 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.076272558 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10381855 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099180891 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105815473 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082236538 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100144898 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.076878352 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099571428 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083127044 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102053605 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087398588 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098381919 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083730896 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104154866 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079756773 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098098741 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082956867 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078511493 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097969817 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076887124 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113778724 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078537645 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095271076 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.076672328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104959128 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080777597 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097479818 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077144216 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103100302 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07044935 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099994394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082497891 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100789834 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089349812 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099590273 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081943254 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.102440863 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.086857149 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099519419 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079775768 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072542284 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100708797 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07829156 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.103144819 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069883201 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098789249 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080719238 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099550916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08728569 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096168621 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081377348 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104360052 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087877082 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096261032 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072982087 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080914501 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098868722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086042649 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105369153 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078547279 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092310504 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075315732 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102945571 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08047907 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101105868 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081526407 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099850234 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071306584 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095256415 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082297384 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.104449892 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079068487 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100709253 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086724745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101355238 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.078992258 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104424682 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0791311 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076573988 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103380718 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080198752 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093412991 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086630052 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099490623 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079075861 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099239248 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086755429 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099511786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082299145 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097186219 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081795939 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100350995 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078246868 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099448452 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079199063 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.105898177 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080160163 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074659345 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09108066 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082864736 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095336401 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080354374 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093803323 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082110427 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100115276 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077821142 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079994231 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098703262 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094286585 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107870077 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08285374 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102974694 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088115652 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100078105 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083664299 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099007118 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082734714 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100747199 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086419439 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101818452 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083773187 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.098796569 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073006342 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101613913 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088001151 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095867856 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077087874 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077401317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099100629 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088500867 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098983765 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08251574 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096837441 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083540833 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104657195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080885746 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098694892 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077633737 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098673921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08532232 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082312356 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10174598 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105947809 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082827606 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075042677 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103826278 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078527794 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.102298198 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075541172 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095386448 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078413256 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101279672 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.07922063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097572258 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07037415 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086430789 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105189861 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082160339 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094690534 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081435582 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108089761 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079554764 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103117173 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081659791 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.101736936 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095529866 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095448856 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080434839 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106828442 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081038042 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089054173 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084256953 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096949693 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.075511682 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097462885 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078863359 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081216163 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110609159 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083031497 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088941237 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080650959 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096593637 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077999898 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094059587 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086870579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099784009 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081071778 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108737537 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08350749 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100879791 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083423301 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099493897 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083480404 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100816865 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083002787 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082705179 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.097365455 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077508711 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100339895 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077910775 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096305142 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081494255 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099603549 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082942983 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101269923 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080733548 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103725573 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08145534 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100363797 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098974958 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096786017 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.077749293 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100321847 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083765339 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099655944 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081680968 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09361498 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087651395 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100001752 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088131532 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098833587 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.074212837 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082011661 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099693214 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.082888686 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101452616 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082919739 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09844832 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081475309 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098592077 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090948442 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096187934 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089434346 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102031825 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083740366 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099665692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081999752 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098404762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077627504 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08045265 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102273258 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082211257 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098824532 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.083144373 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100233864 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080967853 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097725493 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083594612 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.099627884 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084040913 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089069993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077297297 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.077635093 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100666918 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084860977 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101219172 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080325902 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097914901 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083819827 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097873215 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074154931 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103492509 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084083183 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101336304 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090538748 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095799251 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081487412 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109912864 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071580008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078376592 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097193489 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078394281 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106117162 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08310344 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10570296 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082257543 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.096716038 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074166665 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10144192 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08038677 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.070646508 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097939108 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084315999 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098699629 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080074704 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101209113 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08475494 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101833141 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085988221 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100115781 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081521211 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101480131 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074834113 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077021813 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095530307 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081807328 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101899208 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078570385 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093125672 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081237576 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099325927 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082747755 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080014196 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099319372 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086122032 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100292961 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0822627 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106282673 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072404972 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099435712 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080590961 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10032885 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077525717 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101382932 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083862978 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10216234 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087050686 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100376628 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085005668 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080423696 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097652813 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082430422 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.1002737 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082463755 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09641143 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08408316 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10724437 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078369465 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100626938 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082288633 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098244376 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083669051 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102516539 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082847306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084317901 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101680921 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081776327 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.104135906 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081920498 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101561597 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083561077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099291228 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085806306 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096198071 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089334329 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100948972 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083394305 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.100469356 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078275654 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09993231 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081528597 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079695529 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106617195 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083156015 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096696155 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078164557 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097131245 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082365889 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10662174 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088101835 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.100421487 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082965755 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094324981 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074162122 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102365831 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079431176 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080472898 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103094622 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085556525 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101684368 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079180695 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098285397 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.087483349 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104730618 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0839229 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09767976 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084523541 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102112278 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082250657 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098712872 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082309164 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102731004 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084714089 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099378738 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078359102 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109622223 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086649131 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10286899 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080706451 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102314954 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082299347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075644433 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102623499 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084242231 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104020687 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08266813 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100544623 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092071186 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097051116 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.080995511 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106024848 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080948185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106446602 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076494028 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101612929 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084006665 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103213571 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076517562 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095724092 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079249544 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.080946171 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096730318 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076197804 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111605691 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087187329 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101408687 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080904123 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098361146 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076245372 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094668519 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078528266 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103034217 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081160007 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108334205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078685951 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078407898 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095989828 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082524308 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101155239 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083973175 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094007277 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076602054 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078872034 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101667349 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108102602 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081163708 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081924972 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10187733 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082323518 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09816269 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088645005 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09273493 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083766748 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111999687 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084048716 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103018039 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085765562 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10733263 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083626079 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094801279 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083578113 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10208659 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083825029 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102802273 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084739758 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115508806 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083510242 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097476555 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080653939 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101341018 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078793493 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108718835 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085268579 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102148602 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.083855763 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081147048 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103830759 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088859825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104402365 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082334615 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102102085 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080491625 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101520158 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079591024 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099345562 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084223034 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103340975 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081920586 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104144472 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078071248 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110095278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089192584 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102662256 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074448195 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07804564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097244006 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077602665 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102614868 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076207197 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098730282 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.079322373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081118518 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103530392 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084347469 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102111897 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083597513 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100779367 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072511867 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105290791 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.082851775 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10351666 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075137691 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101806918 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084541827 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.104939516 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088875809 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09879781 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083122807 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080930586 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10463121 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07625781 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104301626 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080911612 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09946101 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078620204 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100659023 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084740373 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102849331 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083712243 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103593991 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.081885615 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086219311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10561163 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.074567843 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094634882 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.084811913 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098745187 seconds)
  done (took 54.948614205 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123313683 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102705951 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072342626 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092730237 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11880215 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078072056 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07274442 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096662325 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077920217 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106695033 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072829788 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091905535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114155313 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102608267 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118026525 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107329464 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073559802 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096688539 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073398603 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096769216 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094033612 seconds)
  done (took 2.823003195 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.097991898 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110843681 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089840311 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115804604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103184115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092647676 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10933496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111588487 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096499302 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106366266 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114076095 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092245362 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.106051726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10485883 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086628985 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108556804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094884183 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105729029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111702203 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090051171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108909677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10912381 seconds)
  done (took 3.10912178 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086608789 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.080561734 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105378923 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073553028 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10084276 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073085832 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106497173 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075504755 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104661266 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082607046 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079392931 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10214196 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08581971 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091809013 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080080281 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094043534 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086747118 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080603873 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102392845 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075225628 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120615776 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095305028 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.077259367 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.077993448 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.110208737 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082066019 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100823865 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08083955 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.097847229 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081421061 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09438196 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08411434 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10377518 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.078933939 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079126476 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101503753 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08194056 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094827428 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078561114 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103714322 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.076817982 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081930695 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108850648 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078490747 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094851003 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08410117 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101176303 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073592651 seconds)
  done (took 5.133616036 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113775106 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130776437 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101812042 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140756279 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117293391 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091769403 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102218701 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139099239 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.075982094 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100737627 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.099830994 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116247038 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102511739 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089075776 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103857874 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082080747 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103085859 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077637588 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107118303 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077727144 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107287014 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084343101 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115463388 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112705651 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085875017 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100092152 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077911009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106497483 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11296389 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089201273 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106647428 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088673373 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117047116 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102852826 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078275971 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103352016 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098354037 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102115624 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10289213 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.075766905 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083481793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106654326 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104599943 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.098874185 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1019481 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083314757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101732604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075601667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112542326 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103798102 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092599621 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115814705 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10605549 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0819762 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107811745 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096264556 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101130494 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080549504 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105087606 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114600004 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076992143 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105289545 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.095664578 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102698571 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09199689 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115210149 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101730819 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087219176 seconds)
  done (took 7.78016314 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110613184 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107581059 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098429754 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119435798 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106386953 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.086112079 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106863467 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08728777 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1069056 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115272783 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087048893 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153721362 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.103943915 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094490879 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106308233 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087880898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107022685 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086927822 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106614053 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087303966 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107125297 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1193126 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087344881 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11803225 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119678325 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085358859 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105905756 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087520784 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119599495 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105777889 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099504705 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10642484 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106878554 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099762416 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120672727 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106893947 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081957046 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106903019 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088036545 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106925927 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08410106 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119048885 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088076504 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104502109 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106479588 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087810597 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11901124 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119671208 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095632474 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114756399 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.086820206 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119156701 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107776358 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087782579 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120540843 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128656606 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118916111 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099512182 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106924622 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119058428 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099958793 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127256193 seconds)
  done (took 7.361448645 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110735365 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11574711 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118660678 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.073824602 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096931277 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087156834 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096738869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07678929 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112876944 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093214135 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116116454 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105729578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091456235 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117016213 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105903658 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089983449 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106435274 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086813908 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114075181 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105967463 seconds)
  done (took 2.878221554 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088697487 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119973487 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079696342 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107726287 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082966205 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106572638 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08120868 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101858069 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080848925 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101734008 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091338364 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111264043 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079959137 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107315278 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111633142 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087124843 seconds)
  done (took 2.395201589 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099843371 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119639977 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124387949 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08375216 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076482817 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103817988 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082042086 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095590426 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075546072 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10775523 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085210608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10482531 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082632302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09729591 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080079591 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084708936 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096457371 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083121821 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102067215 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103598295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105333329 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081316163 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103922782 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080329721 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103269353 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083925432 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107712351 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077016597 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0991362 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083407934 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103365449 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086784154 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09729823 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083819345 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09738008 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077958006 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102534145 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082706099 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106023775 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082086968 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.097191128 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082199919 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08195462 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101286913 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075818584 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103363805 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075305341 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106116243 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082107914 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101587617 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082532204 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107147904 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086504222 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110948225 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089615879 seconds)
  done (took 5.979068442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095853073 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104577475 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084208599 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097199732 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083445707 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086600745 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105789212 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082755392 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102526745 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077837728 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102061049 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084373165 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101883171 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083975085 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101801098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084239375 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095370264 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081171503 seconds)
  done (took 2.519756775 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084875387 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079316479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107328007 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079022697 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100946309 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081612376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09525277 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078541204 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09709529 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080339106 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078424478 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102325858 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078089571 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101330275 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08003284 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099004033 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082781004 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078086546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100182516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074944947 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101803743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078315702 seconds)
  done (took 2.805259078 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096313059 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131428651 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093842549 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142774517 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082437802 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.105945112 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.093085726 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105880719 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121453355 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.082757786 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082169605 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104222939 seconds)
  done (took 2.107820069 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104083987 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137837343 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080181433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103379525 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094301685 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105414085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084829971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106809764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119366106 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098374636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105318635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117964394 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098758587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116848079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113476314 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093906319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105796907 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104134906 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081493059 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127896395 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084614729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12074004 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104843265 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084860719 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104637335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097037345 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118494516 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118218257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10451819 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098229037 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114311297 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084699714 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120216758 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116751778 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082872497 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118853754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105382592 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127766721 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09454146 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117151237 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082962345 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113651498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119975504 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093593419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118989658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104674868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092572118 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104789878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085014113 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133934302 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114225837 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117747954 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093338799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119361501 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118667671 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134899302 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120112632 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094896012 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112691277 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118744548 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09614031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114591637 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117755668 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119469026 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093711045 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116864885 seconds)
  done (took 7.940122574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119249937 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102546826 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086089587 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121985788 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116879552 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085300381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106500059 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084237278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106693786 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081292426 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151375805 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106971709 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117626359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096457954 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106079942 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105306899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085459881 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117483421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082310473 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133381907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106153816 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117471301 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097076862 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117468132 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118618578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093613312 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105898952 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105626251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085720698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106111234 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093667454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105967059 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117821872 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081350865 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117104754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085494299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106573412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093566921 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106269049 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113439935 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097108316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128611162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106082665 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084731022 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120297468 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105280703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085989477 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102335536 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085402358 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102338411 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09935132 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11873628 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119047832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11874785 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086174503 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105927954 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085332567 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10662125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085812667 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115723956 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11744229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086077784 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136513405 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106735735 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085733188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117753309 seconds)
  done (took 7.768713467 seconds)
done (took 149.248190236 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098612906 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135929686 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094918183 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163518803 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08083321 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135553018 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114289616 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116469349 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080210196 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079333606 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101891228 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084079753 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166829 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080707782 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100400497 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083899792 seconds)
  done (took 2.584625512 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175433774 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281940225 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100596361 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106447446 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087826263 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103568198 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085363265 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107640908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082866584 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112948719 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.082666317 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10269975 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093156682 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103442011 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082570946 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103592677 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.093060942 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102846345 seconds)
  done (took 2.886730214 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110847282 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145617098 seconds)
  done (took 1.133188074 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116636779 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18097962 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290938749 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.134167553 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.368326624 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122918887 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155215256 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100434432 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198128184 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12613627 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125072271 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086455461 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135189149 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11246012 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090978168 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107636326 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112708833 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110381552 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088060738 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109276439 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132649566 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088390708 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112189217 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089508313 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180509465 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12386485 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108646265 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087475282 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108686212 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088292204 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112424633 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101435383 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123624871 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162602331 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.11236758 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159105951 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114557911 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085518057 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108770349 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085891513 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112342912 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.110917284 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100637401 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106821044 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086987631 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114449078 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088416831 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108162571 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094356567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116189795 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114636377 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093301677 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178799464 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095236994 seconds)
  done (took 7.556109644 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784194703 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14861338 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085763029 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.892028049 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111933016 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122318093 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.788478096 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106966962 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229219239 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.804161603 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099858493 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1225784 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228812496 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248172977 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137878765 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310667641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686559947 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099077533 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135215989 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144737492 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092745047 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134353145 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125193025 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445739374 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087917165 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106068224 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091568369 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11793148 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15746803 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085980213 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110919725 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174872527 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260733254 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19912546 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086568917 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104955603 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085671191 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16515907 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267910282 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214799505 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.148423822 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103628223 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084376525 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117912213 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126792631 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082322928 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16026844 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1688346 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190393862 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090184154 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117968103 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094854267 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117015968 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159421843 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082597913 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333921032 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336656915 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083919315 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116168273 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12303074 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240033983 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107576265 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200043688 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133604565 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212427457 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084394507 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81612572 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165071005 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083642465 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115580561 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091361721 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112891247 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116983358 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141480017 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386905774 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121591188 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087655806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106774481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203555955 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107511936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084709144 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158974767 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109245544 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09355326 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122404715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118785764 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167111367 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.2474117 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120427812 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094260222 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112854203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097035872 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109534885 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20806689 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216218276 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15665885 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210334526 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11905054 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161575401 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164277675 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117665012 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168818254 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092989682 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123410831 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1188163 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190765394 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137850105 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108318417 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091377439 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114271319 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139807403 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088317661 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114044781 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165449436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479467407 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162946275 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.1049373 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089810645 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116189195 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160001152 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092932283 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261438933 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115480003 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164867401 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091696739 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104355436 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096835407 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159298089 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121147639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116117926 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097453316 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115372747 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.247632532 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217714822 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098116646 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23718445 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174701183 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094324515 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169090108 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117346232 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166215211 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117108918 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09656858 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109814826 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779809311 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121011939 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114213925 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091275989 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189881684 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084132975 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109390671 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0844316 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104112546 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77851263 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110303318 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083688145 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08616746 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117075977 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113999874 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091452592 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117307479 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159626174 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230057638 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096741072 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115223384 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085185829 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157056508 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109420197 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085066465 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107657869 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086084422 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117140847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089519545 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109585993 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170318125 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15580993 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218534227 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.553474788 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107426103 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085978433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228470983 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085733663 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30539283 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116041543 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20218202 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162664142 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105645057 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33668212 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166063659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190058046 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08903034 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170097558 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105446877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092691164 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.15822789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107426313 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092922368 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178978293 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100498493 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120753499 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.151898875 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08597892 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225239301 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104964794 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16706824 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087092907 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118633714 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305593292 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085217449 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125902421 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15870735 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089686284 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107976617 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717532741 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107899502 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096406678 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116583156 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198117624 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185937943 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093879564 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116099932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096214187 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180212765 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211764909 seconds)
  done (took 42.976171517 seconds)
done (took 58.01100131 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302078336 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254838 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.25252702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211241779 seconds)
  done (took 1.996453069 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174085446 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122559726 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142725059 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104775379 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125969878 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104563105 seconds)
  done (took 1.675084962 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.424975545 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.352587017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.325937624 seconds)
  done (took 2.009981268 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.245270607 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.263823195 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.316765948 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.396035627 seconds)
  done (took 2.231465202 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19877025 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097237836 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118248416 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110622335 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165600582 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.193929989 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.114135629 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146481543 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.125733986 seconds)
  done (took 2.224411931 seconds)
done (took 11.043603341 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.215281357 seconds)
    (2/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.229345022 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.25442436 seconds)
    (4/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.161338821 seconds)
    (5/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.203461566 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.279414442 seconds)
    (7/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.255136013 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19540748 seconds)
    (9/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.136645559 seconds)
    (10/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.251722108 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088996732 seconds)
    (12/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.138318443 seconds)
    (13/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.223789626 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103811176 seconds)
    (15/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.206671752 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122246549 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090486681 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.126045212 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131055535 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.192068492 seconds)
    (21/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087282428 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114956608 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.112920775 seconds)
    (24/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152175213 seconds)
    (25/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095654387 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.140360006 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184964207 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.088876597 seconds)
    (29/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118310793 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10389703 seconds)
    (31/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120544956 seconds)
    (32/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120050335 seconds)
    (33/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093942879 seconds)
    (34/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.222694307 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120508472 seconds)
    (36/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.179047837 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199843009 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.227166165 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094544857 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20176601 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099673473 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118892428 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116382949 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.194183654 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117228296 seconds)
    (46/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086500172 seconds)
    (47/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.213051713 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.232161389 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.097692614 seconds)
    (50/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203456714 seconds)
    (51/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111760333 seconds)
    (52/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.110387688 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111868921 seconds)
    (54/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.131730303 seconds)
    (55/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190382904 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091502074 seconds)
    (57/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113945589 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136515933 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107538892 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.195538571 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181940821 seconds)
    (62/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.130518404 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115872862 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085584558 seconds)
    (65/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11417707 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188962538 seconds)
    (67/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.109210629 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.186905134 seconds)
    (69/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093725368 seconds)
    (70/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106051851 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090016457 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.216231804 seconds)
    (73/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12127783 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09331899 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122269763 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087022167 seconds)
    (77/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.154330237 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.179430905 seconds)
    (79/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094936423 seconds)
    (80/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.238974639 seconds)
    (81/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133204886 seconds)
    (82/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110782325 seconds)
    (83/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11247495 seconds)
    (84/286) benchmarking ("sort", Float64, true)...
    done (took 0.236545628 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.084212183 seconds)
    (86/286) benchmarking ("sort", Int8, true)...
    done (took 0.227044319 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111729283 seconds)
    (88/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.166106834 seconds)
    (89/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.110196216 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138450445 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11986269 seconds)
    (92/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.095847783 seconds)
    (93/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127630647 seconds)
    (94/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.189113109 seconds)
    (95/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.081008779 seconds)
    (96/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.120888513 seconds)
    (97/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.084551434 seconds)
    (98/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199699657 seconds)
    (99/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.102000867 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097159974 seconds)
    (101/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071924505 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112008239 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075500791 seconds)
    (104/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134150901 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09288615 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115948154 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0855728 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114437849 seconds)
    (109/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090172265 seconds)
    (110/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.111714816 seconds)
    (111/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087830894 seconds)
    (112/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108730168 seconds)
    (113/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07282247 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147416839 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112642837 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108020893 seconds)
    (117/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.123593852 seconds)
    (118/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.097979974 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083900195 seconds)
    (120/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.179985788 seconds)
    (121/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22542021 seconds)
    (122/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.098223064 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090034974 seconds)
    (124/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.180758953 seconds)
    (125/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.156926488 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096833198 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122722473 seconds)
    (128/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079678985 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 0.179510763 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119200359 seconds)
    (131/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.17232299 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.105718694 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097297678 seconds)
    (134/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.156083792 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194972007 seconds)
    (136/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089145279 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113605159 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089657925 seconds)
    (139/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.070750494 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118934822 seconds)
    (141/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.181699175 seconds)
    (142/286) benchmarking ("sort", Int8, false)...
    done (took 0.188177374 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094537763 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.183791237 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118609429 seconds)
    (146/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.154727073 seconds)
    (147/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.179164361 seconds)
    (148/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.071162977 seconds)
    (149/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115691997 seconds)
    (150/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072843318 seconds)
    (151/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.09556672 seconds)
    (152/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.166310327 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116537494 seconds)
    (154/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072263594 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096255455 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084189769 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115104084 seconds)
    (158/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072615735 seconds)
    (159/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111159967 seconds)
    (160/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090922747 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087598298 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.095568085 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07552035 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119676372 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075226441 seconds)
    (166/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172344666 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073085084 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.095108127 seconds)
    (169/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107516331 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112788391 seconds)
    (171/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243775905 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.11209976 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173246806 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.101244721 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077282144 seconds)
    (176/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070655106 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.100162962 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084449241 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.100821758 seconds)
    (180/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.1518602 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124786003 seconds)
    (182/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073617143 seconds)
    (183/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.125875042 seconds)
    (184/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097333789 seconds)
    (185/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112579367 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16712945 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091192737 seconds)
    (188/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.159975308 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08415558 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.100185075 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097370309 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.112004326 seconds)
    (193/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091406101 seconds)
    (194/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112160755 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089728989 seconds)
    (196/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.094752902 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072969846 seconds)
    (198/286) benchmarking ("sort", Float32, true)...
    done (took 0.235212611 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088653984 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130875306 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.227423816 seconds)
    (202/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084481763 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111045716 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086705921 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.115061636 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.145371875 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089513055 seconds)
    (208/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124104963 seconds)
    (209/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090535593 seconds)
    (210/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072878319 seconds)
    (211/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110573644 seconds)
    (212/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072320755 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121052768 seconds)
    (214/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07585123 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123076889 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087509571 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113025812 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100297899 seconds)
    (219/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122275149 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108617975 seconds)
    (221/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123665042 seconds)
    (222/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073459362 seconds)
    (223/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11009541 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.075140134 seconds)
    (225/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.193532298 seconds)
    (226/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071988979 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124728445 seconds)
    (228/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.08574019 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137632854 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115502733 seconds)
    (231/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07457708 seconds)
    (232/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072958123 seconds)
    (233/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110762373 seconds)
    (234/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088834067 seconds)
    (235/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096782078 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07495106 seconds)
    (237/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111872622 seconds)
    (238/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.08349416 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074628998 seconds)
    (240/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.096733648 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161785837 seconds)
    (242/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107789341 seconds)
    (243/286) benchmarking ("sort", Float32, false)...
    done (took 0.171262871 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089797375 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108082764 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072946172 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090237653 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115056034 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089974084 seconds)
    (250/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094836272 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097907951 seconds)
    (252/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187039665 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113990474 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089654676 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117192903 seconds)
    (256/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080418714 seconds)
    (257/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071765659 seconds)
    (258/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.104323364 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074978116 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185577729 seconds)
    (261/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072322645 seconds)
    (262/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096610091 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093873636 seconds)
    (264/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.09527325 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083762573 seconds)
    (266/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.076905612 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109480494 seconds)
    (268/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088142524 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122043662 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072782086 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111689634 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101684974 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116857567 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.085880373 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122135496 seconds)
    (276/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073142237 seconds)
    (277/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163904244 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092132463 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166831399 seconds)
    (280/286) benchmarking ("sort", Float64, false)...
    done (took 0.171365261 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089890904 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.111364252 seconds)
    (283/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071885417 seconds)
    (284/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071317176 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.100497904 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112042095 seconds)
  done (took 36.438474244 seconds)
done (took 37.353846712 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097895252 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148881378 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093841327 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137786184 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098278284 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123865748 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.093346841 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.121158673 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096727336 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123828561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095448265 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.103024692 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093921168 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11921334 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095268867 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138527494 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097073382 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114919804 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.085841472 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110277271 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086396131 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112091444 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088427397 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102747825 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095382441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117051043 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089861723 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119423178 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087294787 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108746529 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085232366 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114992678 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085107623 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096342903 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112731375 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086712797 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119181288 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093270163 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112492465 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088052089 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11621486 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087316165 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114940026 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092457758 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.111527551 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085558595 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11147202 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09864413 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140963273 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087035453 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116517611 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.093615742 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118222842 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.091089172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084855553 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.111613923 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086866619 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139162698 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.086781907 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112822237 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091836252 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115671018 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.08523342 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11095541 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087438155 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118417438 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095057762 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111279983 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09331462 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113551319 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082236788 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111734084 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085362607 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084350473 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117377739 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094874846 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106159177 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086993697 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115781499 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.08844477 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110280357 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085649501 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08824803 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111130283 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084614715 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103524511 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084709186 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113702239 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087285879 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112057443 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089766461 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114336666 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088558599 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118777108 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086572771 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.11123601 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087339536 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087581449 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113079693 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.084878903 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107266053 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086556123 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115416803 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084253396 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11248422 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096502295 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109069569 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090014009 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085887755 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110121826 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124346515 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093183488 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087525577 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112618446 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083436668 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.114543785 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084263593 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108819316 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085334891 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111347563 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.08818854 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111333541 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085467193 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114058411 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.099036812 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08338607 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.110248036 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085623013 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112270571 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.108189178 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111869699 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084965495 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11067928 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082655408 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084924563 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108831464 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08997666 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109671497 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087106801 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111296671 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087070329 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113981067 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.08833951 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112606125 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085003835 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104931254 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091351592 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085678672 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112596315 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086658437 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111311487 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083688428 seconds)
done (took 16.352020936 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094277385 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184852455 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145720591 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14778359 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.120268696 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.130031521 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123757931 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117844728 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119898711 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140616743 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144221637 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108568654 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148629896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.095107942 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1305888 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119581296 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09329221 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129252012 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152174853 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112957295 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14512505 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121056692 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.115241686 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13914236 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117848569 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123342416 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.123171035 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094282826 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122486891 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127076622 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109685585 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.123160109 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095698467 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131328764 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102505207 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119074056 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129435088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090116629 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118886091 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.093837778 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134615466 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106210045 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115449543 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126307695 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094139612 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122998051 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094447875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117696906 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094238146 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113725448 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099471 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141412951 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118798493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09670747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.122445581 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094194692 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121357434 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121790281 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096783886 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122187438 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094439873 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122074724 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.099823556 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135886564 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118528089 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096564214 seconds)
  done (took 8.785033825 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107838838 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145794193 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10111658 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125608751 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122557783 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082936539 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082994473 seconds)
  done (took 1.744444711 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08509035 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138290163 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116801276 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141500687 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108862822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144002003 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12598652 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084498192 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133587701 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093717875 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13841102 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164387022 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085412351 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121569615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11852923 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110647403 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119272629 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110155118 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092181436 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142819019 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114919681 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107311208 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123751991 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085425293 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133625115 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.087330192 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17677148 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122223273 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084309917 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089606935 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114661173 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180173132 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106031254 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12049249 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082200981 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137138583 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130740113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089814895 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133764897 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089460317 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.132035918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091796794 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116783748 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090529961 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11787474 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099312545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120998782 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093279971 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115908471 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112953223 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121811895 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131901159 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086473461 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089625169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120502299 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091067281 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124137473 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089813292 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138025268 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116564253 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111017459 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136803686 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106274393 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136447904 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127857515 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107324116 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132190797 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090047031 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117703778 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091550832 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136577513 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089078028 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12039133 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100037907 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118918192 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112533574 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136973723 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089198669 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123684461 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089180226 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113108051 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086165367 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138459819 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088584681 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112918869 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1018244 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12354291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090862447 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116411113 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132013443 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090033825 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122863055 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095414975 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11521277 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099704048 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139750632 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121566039 seconds)
  done (took 12.028618724 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087470601 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086594606 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116927485 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087958782 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113534008 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088003778 seconds)
  done (took 1.562830291 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115748135 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115229767 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101497992 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118950274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128035016 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136255685 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135384602 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096661559 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132127363 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.100279699 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138931078 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110852859 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141661483 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119585984 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109109003 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119764046 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110341887 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116388137 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099821958 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116391558 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103252449 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119014867 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090785111 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135150905 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094112841 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11954742 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093841963 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126464405 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100150651 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122062764 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11933437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094680361 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119772088 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095672082 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13663795 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094076632 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11501901 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09533327 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121462276 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093565831 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.138563327 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090245139 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125598935 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095409589 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122832602 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09282719 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122142574 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093206457 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135855315 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12178871 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096040987 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093427726 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119417472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095819279 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11958133 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122785544 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096276226 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136969806 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092538034 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11991287 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09064869 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121082071 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095016908 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120199992 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095430575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121993409 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093726552 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116466612 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08943348 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119615423 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095744095 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116170723 seconds)
  done (took 9.051646505 seconds)
done (took 34.143576038 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.670215677 seconds)
  done (took 1.652604501 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817604375 seconds)
  done (took 1.800717855 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.305183862 seconds)
  done (took 18.317536461 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.464750767 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.554252229 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.961208044 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159552347 seconds)
  done (took 3.125586231 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.959243979 seconds)
  done (took 1.965472102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290058156 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232573891 seconds)
  done (took 1.51137104 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80718429 seconds)
  done (took 1.808320986 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.495361485 seconds)
  done (took 2.492283751 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.338890962 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168693498 seconds)
  done (took 1.513963072 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.558941465 seconds)
  done (took 1.564297474 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.062489003 seconds)
  done (took 16.067592135 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237875058 seconds)
  done (took 1.253875847 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290660659 seconds)
  done (took 1.294988335 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.57158958 seconds)
  done (took 4.573466025 seconds)
done (took 59.93282 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095651593 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098791817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125604982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.09609552 seconds)
  done (took 1.413616835 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101337701 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119708495 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096812417 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118976157 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100866228 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11988404 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092507903 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.16271352 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092659914 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120858072 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093368746 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118990548 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.095001311 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119498629 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091466588 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121285031 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095930196 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120280056 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094730835 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120367835 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091585934 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120647718 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095557525 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117793079 seconds)
  done (took 3.635413253 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096520681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090662854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118134267 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089436302 seconds)
  done (took 1.407280816 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100008897 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13182861 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104926647 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125386184 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106945009 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131770054 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088818607 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114352636 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091308132 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125465511 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090290306 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.137779795 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105768655 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111635772 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101735459 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112952729 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086573558 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132716155 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100038839 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127572052 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088462256 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124507475 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097162821 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129884365 seconds)
  done (took 3.683409799 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169442266 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127650018 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138623145 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096354775 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164716848 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115135467 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114038036 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141982519 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087928656 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126418886 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093033827 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165693901 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097537357 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118388087 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089072778 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121476769 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098183701 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124346592 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090974856 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127570433 seconds)
  done (took 3.421139555 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097543303 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.090035021 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112127799 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088368612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12252568 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092515104 seconds)
  done (took 1.620897198 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086115805 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084756327 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111826068 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084400691 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115177369 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08570916 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083439291 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110766617 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084013223 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110960573 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084514839 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082824484 seconds)
  done (took 2.142793931 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.376623054 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113891913 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090178365 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113123998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093078667 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114282059 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101391076 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.114893271 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116959815 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.113704494 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087585531 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117998339 seconds)
  done (took 2.572719207 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204450653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094170948 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259744269 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345582462 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153235267 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161561172 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276066992 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159936291 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180800676 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1349827 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191993198 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127630637 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150614259 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175910163 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137314811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173370599 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171597961 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196454773 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118024616 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226280953 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160844573 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162702342 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148085058 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146961086 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135411984 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155067789 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.090045777 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126309829 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16879565 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167114147 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171259393 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146715912 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109346493 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224242978 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209932434 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176714911 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300666735 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128985901 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.189351376 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180606331 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221662117 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138152988 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191677323 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151681913 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126835683 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177828099 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12685506 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177014723 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129025295 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137721226 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180477339 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173224071 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.178113751 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133463639 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299021962 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142632202 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115613365 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18009347 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182124538 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184505668 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163737913 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118146968 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182519651 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175044435 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175088084 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14291166 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164237872 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094356706 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170337427 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190902107 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173811214 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16056025 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210595287 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103948601 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161862111 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165543815 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150122127 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174971134 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156594445 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091183541 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147114746 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133183151 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098024512 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.183785804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092793698 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198922297 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130864378 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.185822772 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1983505 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154981406 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157423515 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162118849 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163320942 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11626354 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118168431 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143919273 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.130262904 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152667951 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12995971 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153921714 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112325458 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126650569 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149609336 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093943224 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158037006 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131516143 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164520444 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132940063 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125413165 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160554822 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145688653 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127369495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165684122 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181158756 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130927434 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101590512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215849242 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126386654 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132081607 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170324623 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181564146 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.162126837 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10643014 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193195925 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189949666 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111038943 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183214763 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137107159 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130410227 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11982708 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156241523 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153803992 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154092898 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099407664 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148528669 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187525647 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125477831 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106561316 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169697476 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124851908 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098152515 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138759057 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132607194 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111842491 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143998124 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13426748 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153377103 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12931893 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148868667 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155243207 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1405676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187405292 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12998935 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129412112 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144290436 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11625357 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174445164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181776946 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098497842 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193049382 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165095552 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220363865 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162477116 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100956839 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174937815 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126684659 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089456314 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164585583 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15709753 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159734872 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178614606 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191054617 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162362223 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150492025 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146920633 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164381813 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17064585 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152467198 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114146426 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160205547 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163951143 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120306652 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094486314 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124618742 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111296352 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128244855 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101972691 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205379653 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133038131 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210428767 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15624324 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1107627 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177402403 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123335255 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161624726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169954237 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108150552 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179586217 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177574774 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164566914 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140142688 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171669494 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089528841 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121714988 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130871644 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134450316 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129225062 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131275812 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112605646 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177799422 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169467127 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147669676 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199253247 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162625099 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186754925 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120423231 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160843148 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166368562 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126315612 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179549128 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129638583 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128437268 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172815905 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138991712 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184224479 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159053575 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164446811 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193830314 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154989857 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127156767 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11778759 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162698344 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137815165 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163723712 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114370228 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133233147 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152099307 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10346305 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123889848 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176119887 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141165495 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176313585 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154259275 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170053132 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094993769 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14058173 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158293968 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143012046 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.086435127 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165966805 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183201251 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142857203 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156762159 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171416399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098384975 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305460221 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181012953 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208829765 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105503238 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140427399 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158841694 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156281558 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132261089 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174589933 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141495358 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17551426 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155287277 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141040942 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104104108 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14449388 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148082416 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119148736 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129769984 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151318759 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111207516 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208296647 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110296507 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155616084 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16152782 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14468976 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118069946 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141395465 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196663332 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155734039 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17516924 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151679951 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133959637 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223761284 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093633459 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127300597 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095624101 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175546326 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129709854 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129469201 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.207761202 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195865216 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154912877 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162753777 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106610004 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119414337 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156872945 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117175511 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221239736 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111565816 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13233881 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18748185 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149292864 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099440369 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160952114 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284914641 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139799396 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170665046 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.085817942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275122748 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120157083 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100127634 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157804769 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166666987 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136868347 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154760973 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157504414 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14160109 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157680204 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106163617 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213005274 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200762839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167882872 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172062319 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139658709 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126333017 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158562607 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172616607 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141218706 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142760978 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130181343 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178171721 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184982864 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130715042 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161911787 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16023483 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156183602 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169585079 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102696242 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222031869 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100023478 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16514071 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137954469 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093184766 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154772272 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182819881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129680471 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172507907 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156785633 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102232438 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124846766 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147561859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126782455 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139113396 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125160732 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177125654 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094330971 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160273877 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17642632 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099711362 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152891667 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143698001 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136650041 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110507181 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143409871 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133799667 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139106869 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177503493 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128831378 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173729122 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17461157 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160652523 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156001639 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112843972 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663556008 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096961185 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178472844 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144602992 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181668403 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145966415 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166075589 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158097425 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117802578 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166063304 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147182541 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219164235 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164443388 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155089897 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09910877 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142474507 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140749946 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100570201 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14832504 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158203128 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109152074 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135827739 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154446232 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140810934 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112064858 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136216344 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181119429 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116022059 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206771711 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146832233 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135448294 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164104444 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172017279 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128250439 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155918662 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138271339 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13919107 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148821915 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129529304 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103204241 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177887254 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092396228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156823892 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158014204 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158447497 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161359024 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102925898 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1571264 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140524509 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158137538 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099347663 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152110023 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154808486 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102860901 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126736697 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153029492 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156331046 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126743573 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123239666 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142974112 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173048908 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122974082 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101617989 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311437753 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127585334 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187494163 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149561899 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133820439 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112487298 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153098697 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151010185 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157693541 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097962735 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130175082 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128571713 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.150913006 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.148767086 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154811105 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182266342 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158956533 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196640629 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104459256 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.26477989 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137725096 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150839111 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099024793 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128600014 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110983747 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131868174 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142618526 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187313568 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176286384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150265793 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.113384582 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124710063 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095607808 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131859657 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157575322 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123065841 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155952601 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142417136 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086111121 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1419397 seconds)
  done (took 74.189067508 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143031205 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.12914751 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.1461417 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193588817 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162410616 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240236244 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203923684 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221683255 seconds)
  done (took 2.542237548 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098271003 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155038336 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136928839 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121033888 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089383071 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328690905 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13505496 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120827777 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116568524 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.134015219 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114287146 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.533146035 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.12120025 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.119569967 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.084847346 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.112011839 seconds)
  done (took 3.614920568 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.215759782 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532229514 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.09265943 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.225713783 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.219352275 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.171315049 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.726344703 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179823974 seconds)
  done (took 12.465607216 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118824804 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.109705148 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159461592 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161823312 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117271013 seconds)
  done (took 1.773790119 seconds)
done (took 115.479658588 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092386474 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095633423 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120758214 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096372105 seconds)
  done (took 1.498608937 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107346535 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077898059 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108917836 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076068069 seconds)
  done (took 1.478952538 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.415171511 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076559913 seconds)
  done (took 1.631617188 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112818355 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132005634 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104379215 seconds)
  done (took 1.463793367 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100160918 seconds)
  done (took 1.209148047 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094175048 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096965982 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138202681 seconds)
  done (took 1.439532014 seconds)
done (took 9.83051451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109320408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.43358186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382072793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135232785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.689223317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406817848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002590417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154901674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164697958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08752877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13372315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666630553 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.054335963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.338523034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.040149246 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337080274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699244112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089882213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1225567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090452276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010328177 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086945809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117376928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089803548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696118469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396183782 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116860304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.355380168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116726537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093954829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375003605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116507859 seconds)
  done (took 16.8061246 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093813186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176907507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096359704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118589641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092610329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118208928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097820187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130462577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180587243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088268223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13387954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087568427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093882765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117714221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108462972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117492739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089784776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119340319 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095437036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119495208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107669479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116780796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09081713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118423451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088978026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101250866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117494019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100849586 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116364811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093685641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120002116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088283409 seconds)
  done (took 4.64980357 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138643196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185621585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124646154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122679124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167858171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08964593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20232945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156256707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181775764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087551737 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135916635 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08763265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153234564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088983655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138662139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088302379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119980083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090903974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12347105 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089695786 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137169833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088660469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118971285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091622671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116597674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103130997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088753586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130541703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116595298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094992285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092367698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118048882 seconds)
  done (took 4.989766085 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09676458 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.097087446 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13330687 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134262437 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090946471 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095032805 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.12542562 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090378178 seconds)
  done (took 1.978785795 seconds)
done (took 29.534190781 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106212801 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093347178 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131383339 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099306142 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126919784 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101316812 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116381444 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099279762 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.129217761 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096898849 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104033486 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116455836 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089750813 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115641072 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100872761 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120987475 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103464618 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097473049 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137273648 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13206134 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.089214134 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099602996 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127013904 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107899291 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138094378 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137805221 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10444919 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094889084 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117668487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088603246 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132200976 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110352975 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119981906 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105597328 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12181577 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091993399 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089402018 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11970666 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103325273 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128043684 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094032026 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128901932 seconds)
  done (took 5.776797429 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.116007299 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161439 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089446079 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118465296 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089240891 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.157206388 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.123484035 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117519199 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.088926198 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143395192 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.113534128 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.118974377 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.08862731 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.11878777 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088120226 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089428414 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141776963 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.141684319 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.118329281 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.149630956 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163371486 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.11963306 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.153500111 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.112297848 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160163961 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.152974329 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.108539953 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.153834489 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.145353125 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.088223763 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.147940428 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.120520954 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.117300027 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.087781673 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.157934662 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124503832 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.144857584 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.159393667 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.1193647 seconds)
  done (took 6.035599397 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097806927 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.10265537 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13828678 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183239901 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125607571 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127829044 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.0993049 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136352662 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1050008 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118761352 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089677185 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148924698 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108281765 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126325871 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089316078 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131980683 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108921468 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089987597 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122361162 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107489319 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135705193 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101678877 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13144726 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099502139 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118615644 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096431503 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121294826 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104073716 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123780177 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096359145 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122329631 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09254275 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121785456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100264738 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092351324 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1261916 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13990204 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096752457 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097524674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.11838469 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099908018 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122085717 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.10994228 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157414206 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.087989212 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124615985 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095690869 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127539401 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087546523 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136274463 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098983983 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118327109 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.103677824 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117627466 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088292184 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133643299 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090509417 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091602406 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126058696 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095889179 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138659498 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092946943 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133132365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089611139 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123655364 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088805787 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087813975 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123896795 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139518963 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092601026 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158799918 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089757828 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123917728 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096350842 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094614429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126773074 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088728072 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132379518 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098418046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12228273 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.09914621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121134233 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093308395 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105308273 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13320081 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124876795 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094810054 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124268871 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093143685 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089642723 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132776576 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091378634 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123083474 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103876131 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119496521 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091915844 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124509321 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093833767 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117214362 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101267726 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12374341 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089339819 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097935168 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119972226 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092669135 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12688859 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092263352 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117530461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092939139 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124526254 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088731326 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092350377 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122660487 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092126489 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131333396 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096271308 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122175637 seconds)
  done (took 14.191508119 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232706078 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214533321 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190433721 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297640963 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110398732 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147042444 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212924744 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.164408149 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089005324 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158868515 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17742854 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18749046 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.17500376 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18482935 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171474423 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088876055 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137496523 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139767567 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215924855 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.296963533 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139730032 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103215615 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.1605291 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160616091 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107857897 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136715096 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.144157765 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110884722 seconds)
  done (took 5.79900882 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105889304 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155344172 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097245864 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145938119 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147146601 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090006768 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094387312 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120635635 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102375975 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134379339 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090904846 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12700226 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095175074 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130983996 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.088797159 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129100014 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099437634 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12940246 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.091863754 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123295187 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102710253 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136616842 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093982845 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123007945 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.106240832 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121876242 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091451832 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14067247 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129054528 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113160039 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.116312521 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098335339 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133049035 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089521633 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.090948049 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123156732 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09193286 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.122479916 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091230594 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086342311 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118359356 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080623221 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121811283 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105646036 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126083802 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087347669 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124500278 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093170108 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127354488 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08644407 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091509652 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122357814 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094661561 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131639795 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092385887 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126927412 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094309813 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121672656 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097805078 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123058474 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086961502 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090630883 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126018388 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094248787 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12883625 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095456442 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121104316 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091742006 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.12522283 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.095557478 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092175764 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128424088 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.085851029 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12168482 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099394153 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128377867 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093622711 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120903217 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093101656 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088100085 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107863081 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088210788 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106679481 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093282495 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088173424 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120980757 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091925753 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125609732 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135606494 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098566565 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096491113 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119579937 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091985332 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124178891 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086769976 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124019388 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.106647328 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140675148 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088715257 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118272414 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104953745 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.121793599 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.087758118 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08155181 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129767032 seconds)
  done (took 12.612005653 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131515129 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170040274 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121288793 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108796205 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154525135 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130756044 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128544495 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097720771 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121030578 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108536374 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124297935 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098205043 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123659467 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104497872 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160595757 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.100166859 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122018739 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104088759 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125233342 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143609613 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140122136 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159779337 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.129467414 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123547494 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095275277 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156107716 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165551418 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103557606 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132695272 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131250959 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134323052 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165578752 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.13175255 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126591126 seconds)
  done (took 5.532591233 seconds)
done (took 51.068493629 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.231519061 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.453317317 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.212587104 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.229839209 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.260063886 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.236382083 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.23293168 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.406817161 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.94227713 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.214014807 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.21136026 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.214619764 seconds)
done (took 27.992596619 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.295079442 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.379467591 seconds)
    (2/2) benchmarking "String"...
    done (took 1.545129302 seconds)
  done (took 4.067401494 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.217719553 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.21602488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461743069 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.216295736 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.233068696 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.233043594 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.216211324 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215543831 seconds)
  done (took 15.934554986 seconds)
done (took 25.656425589 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.290626464 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.427583645 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.479862032 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.248690374 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.217275613 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.226541153 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.220147288 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.271503926 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.223055325 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.219958465 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.218345717 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.489182087 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.252905265 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.610117814 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.221177085 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.23262225 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.233267138 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.455682169 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.22893074 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.205065246 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.219976178 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.225765385 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.239308849 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.241236529 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.227532828 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.220775157 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.248693845 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.218766702 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.418807384 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.230756231 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.264408416 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.221024834 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.251885105 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.224666206 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330755694 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.245197209 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.402203 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.223380785 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.207170164 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.234185013 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.401438158 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.625718288 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.218471071 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.220280551 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.221765174 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.294543374 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.213745169 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.934724486 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.227219021 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.218563439 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.288046406 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.613452011 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.224665757 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.234808929 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.231191456 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.457765346 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.219309102 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.273303574 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.253366116 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.231771728 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.220416827 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.217997118 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.244191981 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.224591039 seconds)
  done (took 144.728336532 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.218482406 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.225443309 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.222397671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.23817196 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.225552351 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.223345032 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.223131369 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.219680212 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.224853997 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.228745027 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.225936854 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.220581206 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.223703731 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.193421517 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222552624 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.246915209 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.224452617 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.244268325 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241009735 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.222385501 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.23293785 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.222475643 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.23799608 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.222531372 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.223389329 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.304725774 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.250282443 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.224237626 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.223734923 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.223506628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.268705459 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.227593527 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.856172636 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.079174762 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.232335461 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.253215946 seconds)
  done (took 80.948859707 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.221174618 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.222059857 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222201038 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.225701133 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.256335859 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.222730919 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.79672122 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800082142 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.933544125 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.342185529 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.640407288 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534782031 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.225689223 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317914754 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236761364 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.224341943 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237618724 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251595111 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223923432 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225172171 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817439202 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.240289005 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.36079236 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403994373 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.240350201 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257315792 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.616633451 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226053574 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256003126 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.558757102 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.27173093 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222981193 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.597441374 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.563222993 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338195782 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227360511 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256255182 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.223857053 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.509134045 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228804256 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.22466549 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226791464 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932524029 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.22584778 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.798751492 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.223908527 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.183175387 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225448215 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.223225312 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225586314 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.386841128 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.934382329 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.225229723 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22503037 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.223742893 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.226400106 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.224881689 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224945813 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.259125983 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.450220857 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.32514893 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227469782 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.230337614 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259418686 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.228992841 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.287411256 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22650805 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.48785304 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.289560252 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.329299414 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.226684207 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801862768 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.223880654 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325283567 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347472806 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223968508 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.227199632 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226469734 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.22744245 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.33806378 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.226997062 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.648381696 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.403172605 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.243409112 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.653012746 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32822452 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.227753974 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.647562684 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.232045108 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.226391159 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.98256179 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325592156 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.227806191 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.228270045 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227642223 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.652554464 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805121353 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.47759664 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228392333 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.645277833 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.229419003 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.667817606 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.796922675 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907307522 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.230059482 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342157943 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.405793426 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.243590761 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.226657365 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.65554621 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.231097699 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.287917857 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228104955 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627127974 seconds)
  done (took 368.581889958 seconds)
done (took 595.404902323 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.864537908 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.860914456 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.969037484 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.854061656 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812747292 seconds)
  done (took 10.518393862 seconds)
done (took 11.675331936 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.419741414 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.418965591 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29160587 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424748518 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.756964312 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.439227097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409266959 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.252784283 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337062635 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.313800217 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335997655 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283609306 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264285728 seconds)
  done (took 19.103798721 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570054993 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.232663883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294473963 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559616509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273199893 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560372839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.439372749 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.25076989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455188139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246802073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242019528 seconds)
  done (took 18.285098144 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.592594826 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.232021392 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2973376 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568564765 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272052628 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574621274 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445403489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.257214119 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.448411716 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245687028 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243930289 seconds)
  done (took 18.338289643 seconds)
done (took 56.88257619 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.274052453 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.400891606 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.256119141 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.244010816 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240360174 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242212778 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.245804296 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240095352 seconds)
  done (took 11.302403671 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237231981 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.239224357 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237440773 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238228569 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.238242581 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.237826353 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23911693 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.239554864 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.23559237 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.239296082 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.236955487 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238372439 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.237776757 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.236003214 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.2368998 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.238618824 seconds)
  done (took 20.96662172 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23878033 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.237056237 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.238012459 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.238315849 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.238193945 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237694184 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.239203571 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237787054 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.238327383 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.239133829 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240525836 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.240181048 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.239559734 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238630696 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.239236302 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.239288889 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.239173966 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.239258727 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.245114227 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.238011681 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.239151008 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.239283721 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.238976334 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.239700734 seconds)
  done (took 30.901636206 seconds)
done (took 64.329276007 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.233597782 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.236568704 seconds)
  done (took 5.632248017 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.302179224 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300965368 seconds)
  done (took 3.767359824 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242941688 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.241652386 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.242725645 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.242049972 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.242646908 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.242312845 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.243294692 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.242641712 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.242436876 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.24167016 seconds)
  done (took 13.587836719 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.243374281 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.243341484 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.241028908 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.242370798 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243808566 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242701416 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.244879031 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.243513408 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.242939681 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.240981214 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.24342773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.241699446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.242882485 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.241952241 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.243486586 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.240020252 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.241044369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241786053 seconds)
  done (took 23.529420264 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.256122013 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.264001967 seconds)
  done (took 3.684722157 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.372370712 seconds)
    (2/7) benchmarking "second"...
    done (took 1.28367349 seconds)
    (3/7) benchmarking "month"...
    done (took 1.351079899 seconds)
    (4/7) benchmarking "year"...
    done (took 1.33969837 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.283315227 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.261804256 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.283459702 seconds)
  done (took 10.339135831 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.244521709 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.453923253 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.568125138 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.818419888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.245121951 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.248820407 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.137680867 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.249412782 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.252557067 seconds)
  done (took 14.383710189 seconds)
done (took 76.086421742 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.237409679 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.253695781 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.257514412 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.25520452 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.583613225 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.265410701 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.241032121 seconds)
done (took 16.260555756 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.239384912 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234755954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.244687452 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.23768407 seconds)
  done (took 10.122497994 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.244857826 seconds)
    (2/2) benchmarking "read"...
    done (took 1.56014332 seconds)
  done (took 4.972454479 seconds)
done (took 16.260324305 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245451102 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.244956563 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.243952682 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242562547 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.244700515 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.242875936 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.244722907 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.24582962 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.246910254 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.24448229 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.247596422 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.24613868 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246021429 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243911605 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242534802 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24640578 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.242493214 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.245819113 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244248224 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242394221 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.243659315 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245812793 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24387583 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.242982292 seconds)
  done (took 31.036997213 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.246146841 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.24422199 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.245846039 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.245482047 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.244709789 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.246525355 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246061132 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.242666852 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246476352 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.24629581 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243120571 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.243407192 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245847871 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.242462951 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245541376 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.244326087 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.246647126 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243793434 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245838297 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.241886814 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2457811 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241637329 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.242657857 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244031788 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.240750707 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243559623 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244433876 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.240430688 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245498744 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.243837107 seconds)
  done (took 38.496882532 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249523224 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.252396053 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.245675559 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.245322606 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.245834835 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.245630547 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.246847837 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.244889282 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.245182863 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.24498302 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.247251087 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.243885726 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245595013 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.245314962 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.24591863 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.244959909 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.245585257 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.244525531 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243998185 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.244914535 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.241836202 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.245484831 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244763769 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244719877 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243801925 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.245099281 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.245761151 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.245480342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.245102029 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244977154 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.245735596 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.245259812 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244788466 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.245893854 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.245840862 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.245053133 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.250576579 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.25132971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245285497 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244808591 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.244919243 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.244772764 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.24449842 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.245602158 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244014993 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.245652252 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.246072869 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.246099626 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245650675 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245847248 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.245558864 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245210005 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244220145 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24570548 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.246647764 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245244007 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.247203411 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245708051 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.246216644 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.246441949 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245777536 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.247341013 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.246874128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.246941695 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.24640093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24596263 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246426068 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.247101192 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246693362 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2469472 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.244943643 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.248233125 seconds)
  done (took 90.868470608 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.247609724 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245948447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244369533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244381967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244322839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246966688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245765678 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2473516 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245986369 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247376074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245931431 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245164633 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245791904 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245022522 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24559322 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244945147 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247795982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244577297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.249179272 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247975647 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246113856 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244910439 seconds)
  done (took 28.582584879 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249261016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250722773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.246371606 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249203212 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249251853 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250374121 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248686109 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249313451 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247607387 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246064496 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24468117 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248428378 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247598973 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246247911 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247112055 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249407677 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249193394 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247997703 seconds)
  done (took 23.636475235 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246699692 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.247653987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.24854888 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245670631 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.248950466 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250479182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248629659 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249747219 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.250536482 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.248428775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249399051 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248888668 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24919763 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246532229 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250963662 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247906693 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249480736 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248745345 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25116137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249458193 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249067748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250212902 seconds)
  done (took 28.648106485 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251574314 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251210674 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.244883426 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.246893845 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242197682 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251221725 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25032513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248327766 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.251128709 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.24813115 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248930273 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249985987 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250931323 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247170051 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248465795 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249027938 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251786847 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247687889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252475284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250281589 seconds)
  done (took 26.153135379 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251396061 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25218574 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254035427 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251469142 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254329465 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251125642 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25387573 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253503594 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253823558 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253796374 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254282865 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252895342 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254222024 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253049239 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251258975 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254582643 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25334102 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25467736 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253804836 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252126243 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255337761 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255264426 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254720968 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252915071 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253222525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254124211 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252148235 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254402129 seconds)
  done (took 36.269251228 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253799183 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253269082 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.252030815 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251940564 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251786951 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.252943203 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.253371414 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.253675522 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254768086 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2517245 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254162329 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.25422795 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253916521 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255162698 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255128118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.256682673 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254246238 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252464263 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252534843 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251749169 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.256023868 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254989298 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.255661394 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253104441 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251642351 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255330944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25406485 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253016222 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255317719 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252841229 seconds)
  done (took 38.787800929 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.296009509 seconds)
    (2/2) benchmarking "in"...
    done (took 1.299676011 seconds)
  done (took 3.771369145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253169918 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256245899 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.256113717 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254028189 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253931422 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257833616 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255258842 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252871974 seconds)
  done (took 11.215785923 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.256653249 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25644702 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256688537 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.256344672 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.257892415 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.256653168 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263566075 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273827588 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255258891 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257374628 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263788542 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.265378322 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.260942989 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256696495 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256272761 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258303846 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256290934 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.25690135 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256580238 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254968335 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25853419 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257654064 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258019522 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254058912 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.257988872 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.266229404 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260179755 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.256854345 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255616806 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259986661 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25576173 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251344448 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254820114 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257168522 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254152353 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256903656 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266580585 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277240747 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.262485576 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255383634 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257752114 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.255253711 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.257712807 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258792787 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26162907 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258485443 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256622102 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253535314 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255091634 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260036733 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264337352 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256387794 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.254519233 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261011536 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258169413 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26444329 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276684516 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.261290507 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267067996 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268603455 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272455508 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.266329099 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259295521 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.258009696 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26944551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282440767 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264489463 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273776767 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.254892912 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.258888066 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.264711483 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272170522 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282865989 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259584239 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258316915 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258616016 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256430211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257634006 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264139154 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.276397092 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259138747 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259228726 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269753266 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282508005 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258995942 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.258482412 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.25897485 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259369679 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259070658 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269193641 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278679884 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259077169 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.256212389 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259221139 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.257689571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258281001 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258034036 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259018175 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256169725 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259303021 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258573731 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261854929 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.26750117 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258688333 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258636322 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.264946305 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.258893184 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260541191 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264779363 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257801498 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258924613 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.260894043 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265964728 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256410812 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262436697 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268025633 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259053716 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260342826 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259392571 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25839686 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269851797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286191463 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.258898727 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259691074 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265634521 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270533151 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260843308 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262347615 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260324831 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258218301 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258375483 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261958787 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.259865132 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259282292 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257932845 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257524291 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.255963053 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25962324 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255802288 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261908254 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259196251 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258430261 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.258928023 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.25851948 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.257464353 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261327758 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262859607 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259241079 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.26182571 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259337122 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257796395 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258491631 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257169641 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.260052245 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.258920598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258539512 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258886616 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.258507551 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259156416 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.258384369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256952323 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.26148349 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263509594 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.259199668 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.261688069 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257659091 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.256359004 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259797555 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.259867094 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260163806 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257230215 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.257987145 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.263984066 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.268944359 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258376941 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258581721 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.259927176 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258529034 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261290169 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264129559 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.263079773 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.267404707 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.260107569 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.267944175 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.259179875 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261515092 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.259886393 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258342011 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.260471447 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25969857 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.263198349 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267186302 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272426232 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284842927 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.262917865 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264067008 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264131227 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266123112 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263293491 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259240948 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260855204 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262543249 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261303554 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262997406 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.262180888 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.263121149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263261063 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.262620378 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.263821666 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.263466365 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263763757 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.262597093 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262479747 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261122839 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261517182 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263816886 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263215006 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.260874614 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.261190869 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.263110813 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261238263 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26330121 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.264480362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260660326 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266384783 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263243978 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.2638982 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.260096492 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261780085 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265197153 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.262363454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269027077 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280348077 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.263234841 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269395476 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.281745904 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258565534 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.266581682 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263825385 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26005754 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.266165303 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.272075875 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263478457 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26205437 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264073654 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263144545 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265067259 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.2706527 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.261328383 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.262966944 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262252543 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.264585819 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.262745023 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.265680887 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.265021843 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.264188094 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264807984 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26551094 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266485657 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266676082 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263190603 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.264787824 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.262105015 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268386425 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.274059892 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267400616 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267777357 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.266678504 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.267074057 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26581543 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.262264397 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266166625 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.264626407 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27807414 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28529364 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27106579 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264746734 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.265490117 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267924946 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264480403 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.270664979 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267149836 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264976064 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.262338159 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262692615 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260175381 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264299024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262957646 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268023856 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267928891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.269098678 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.263980109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265183108 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.264984077 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.266207351 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.265827042 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263153427 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266162456 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266839713 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26774606 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265057759 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264560162 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272791311 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283530345 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.267011588 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266939711 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263344966 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26379656 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266489289 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263239433 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269104651 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272007689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.268626626 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.276422157 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264785537 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274195278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.265451771 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269315144 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.274536119 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258132701 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265050727 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.266361747 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264250598 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271554498 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281894182 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267688899 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269215559 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267265086 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266624924 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266745931 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.264633718 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265451068 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260829284 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273459498 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282845605 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268828741 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266200098 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262954847 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265491255 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263399573 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263566758 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266503622 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264638837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263910773 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264372012 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265440711 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262855898 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.26570061 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262990916 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.26076623 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264782659 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271562517 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283317379 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270422185 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261874331 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268476518 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26246062 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268867056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282336791 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264877617 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.265334821 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260825756 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26534026 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.261496614 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263961462 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267232551 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263641961 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268000643 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268363204 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267813221 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264179638 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26553077 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.26690529 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274815568 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286516268 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268002515 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26996662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.263620381 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264379446 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266631376 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263605613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264178936 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265557303 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274071063 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276987336 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267027071 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265196766 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266504574 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266734632 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263309387 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266390222 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26578896 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267613768 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265841639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265710059 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267581316 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263654372 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267285996 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264369288 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265837142 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.276502832 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263666234 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265846192 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266714221 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266417266 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266488913 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267164971 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268554128 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267356958 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265711124 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266153897 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271724866 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273672667 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266583042 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266523949 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.268187019 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.266311949 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265474506 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264617971 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268528608 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268669944 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263187741 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267344875 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268004673 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264965445 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26677318 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.262915247 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266313844 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270179587 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.270694373 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267833249 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265173763 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267308464 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265971375 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265378204 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267876643 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274015098 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270654715 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276968091 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274701456 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271035108 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27025209 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268954964 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275762828 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266707619 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27020462 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268509419 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270811333 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264088971 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270162964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267166039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274110136 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268917845 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.27116983 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277004872 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290173192 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268832324 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269308403 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273099006 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270434028 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264774928 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269545236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268587305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275185818 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286327238 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269888428 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270194289 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267964278 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271402151 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272735052 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270640902 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27289322 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266484745 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269361311 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269416697 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268906772 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267037936 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269241404 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269890002 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272838684 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275317308 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267013244 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271613603 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270185058 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270254441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270804978 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270152259 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268428609 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267150605 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269902353 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271050429 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.270204433 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272456097 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269563104 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271168488 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271114407 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271539178 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273557712 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279447232 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.2763123 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268973507 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270803957 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.271788769 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274051513 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272370575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272190924 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271723538 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.272534559 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272212593 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272814911 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271133714 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273667101 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286120342 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29099888 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273104939 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272728675 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272282235 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271416336 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269199353 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271749171 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274141052 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.274311518 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279183578 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273041663 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279406878 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292404864 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274357726 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27710307 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275997761 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.281259781 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277119644 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272992151 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275114761 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277895252 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.286596617 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274685336 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283737867 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300448415 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290640578 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273935108 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274602634 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273644621 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272898251 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275881583 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275108776 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274250877 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274418988 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273426392 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275083363 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279716057 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274870149 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275770184 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272544137 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273156455 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274692656 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271527995 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27381699 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274630249 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275478671 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274673588 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274687619 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276202594 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285532179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29729917 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274009968 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27623511 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.273150923 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278042503 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.277371308 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285111043 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281852744 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274861753 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27531767 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277453144 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276351116 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272212451 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27663845 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.276485575 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276778461 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273766875 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287871456 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281088801 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278093509 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277312659 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27792977 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276051757 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275862464 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278712691 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278107156 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277285508 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279668187 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279655789 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276584032 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277424954 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281026999 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.283663649 seconds)
  done (took 756.277850542 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275581935 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275422208 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273604403 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275457215 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274827616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275139218 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276845221 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276824842 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276195269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274696443 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274434891 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274637964 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275314453 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276382692 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275647452 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275602156 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276359097 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274948112 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275801103 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275764423 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275739736 seconds)
  done (took 27.979491364 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278672641 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27608861 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276092637 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278338182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275936409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278652923 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276791584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278700373 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280066128 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27732962 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279511365 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280095391 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27669705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276808591 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277250957 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279392167 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278174883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278283756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280126711 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273766312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279277467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278206842 seconds)
  done (took 29.309083311 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280366828 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280164886 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281063549 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.276327175 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277322406 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.278328182 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.280438005 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.281582432 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280257393 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.279525539 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280939282 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.28145716 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.284541061 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.28602889 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.281968409 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.280136754 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280769309 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283037422 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281974886 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.27766413 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.286013761 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.28031818 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.278220094 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.281122116 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281731467 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279968108 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.277717508 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282687363 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.281409686 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287009526 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.280893438 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282019815 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284585388 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.280304832 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.282205896 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282387504 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28220117 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.279532845 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.280860294 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293390489 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.299697709 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28399988 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28287227 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.282693121 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.282074916 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286367048 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291730932 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.280138789 seconds)
  done (took 62.746635363 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282732096 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282992143 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280785032 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285061991 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283687637 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284377636 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.28312629 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284283379 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281758835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28204312 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284219903 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281739164 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281159046 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283815223 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284836397 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28156084 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281695644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280726134 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281425115 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282171294 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282267782 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283924036 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283651396 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282060209 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28538863 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28297521 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282980606 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285939856 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.284342677 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282352706 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285655049 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287053915 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285346343 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283619553 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282844153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286385544 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286244757 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284055396 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286437512 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28346021 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.28570974 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286440455 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285935524 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285561876 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282991919 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283428779 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283448976 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282973544 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284092537 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285826479 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286819641 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284900952 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28781349 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284121703 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286325567 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.287794091 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284286911 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282988641 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287991575 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.284905293 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283331054 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286795147 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.285719891 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286747371 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.28705022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284634013 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285498475 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287483598 seconds)
  done (took 88.534115622 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287936995 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289734458 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28787235 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288034823 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288395554 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.289412748 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290333524 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288990539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289269577 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289267062 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289975396 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289975167 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291001021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28702984 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289446375 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289451926 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288026123 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289408747 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289094883 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290076283 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.290017219 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289747314 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290892604 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289820232 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290203151 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290620194 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291092323 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289332329 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290536539 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29165004 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29081325 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290330592 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291106154 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290786138 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291632877 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290532517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289428785 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29076087 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290012806 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290778113 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290708978 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291225363 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290908167 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291478077 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291914417 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290880695 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291654654 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.29077347 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291054192 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29054557 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291475924 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291166866 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289684902 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291588725 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291927772 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292373987 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291435157 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291875633 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291948825 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292130261 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292046602 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.293016 seconds)
  done (took 81.210267279 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291689503 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291816889 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289497589 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.288716237 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291167499 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288714157 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291678194 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292419729 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291097861 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292405211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29271253 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289943339 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290256705 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292203025 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290566545 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291811336 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290220728 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290024197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291936287 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290921877 seconds)
  done (took 27.028733201 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.291060791 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292796746 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290246512 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288684759 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291006318 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288678232 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290723409 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290471955 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288779875 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291633082 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282866799 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283396623 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280738697 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281135449 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283581064 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281564892 seconds)
  done (took 21.805136433 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.281198924 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.271804181 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2730998 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27243404 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.268777042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.270590182 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273574596 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.270046523 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27041148 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.267782468 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265462523 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.2655629 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.266009248 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.266743615 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.263466685 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266382652 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.264076112 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.258372144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.260329479 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.261192316 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.260210998 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.258521375 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.260967644 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.261838514 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258438761 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.256056852 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.254579127 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.25548701 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.255460676 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.256711011 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.255054761 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.256363846 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.254331775 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.252927738 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.255035362 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.252226402 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.256007799 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.255629891 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.255532183 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.255259171 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.255309634 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.252074969 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254214214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.254357484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.25176769 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.255252001 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.253037895 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.253011421 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.253877516 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.251131605 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.254926614 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.254588787 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.25523501 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.255636943 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.256095437 seconds)
  done (took 70.495464207 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255319006 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.254095679 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250511824 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.253186471 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.254237624 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.250359841 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254181909 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252919425 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252180987 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.252170789 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249367937 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252958139 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248341122 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253108529 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250599585 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252956271 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249854681 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.248954073 seconds)
  done (took 23.709757622 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248759191 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249956728 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.2516545 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.248118849 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.248310405 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251269599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248309448 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.250733087 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252151801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249268744 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2484818 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.250978514 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25165446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.25090643 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248887092 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248163068 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.252526219 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252502733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.249335614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249685772 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253425369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252262943 seconds)
  done (took 28.676331909 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.250928519 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.250674528 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.251392646 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.265994528 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.267406209 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.250108487 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.250351916 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.247256645 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.269903085 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.29556672 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.289226803 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.26389051 seconds)
  done (took 16.324111231 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247582284 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248267837 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.244519053 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246196495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246983009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245965605 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244431873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245496349 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247800033 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245012947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241171138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244156501 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243860842 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242879747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244119882 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245471821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243503482 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242669605 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242043127 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243654013 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239942477 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243486142 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240132847 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242188115 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242325699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241318653 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244473113 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241956353 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241246726 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2439526 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243056733 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240892596 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244212827 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242076089 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244636982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245413552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241984931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243833093 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2441699 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24200013 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245442784 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243930913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244795938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242484772 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24473579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242528449 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243643616 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242756415 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242748652 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246538356 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245663834 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242136797 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245767089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244482711 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244625623 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245597621 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242951514 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243946442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245560894 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243463634 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243430888 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245364621 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242715626 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243513257 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245799246 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244335726 seconds)
  done (took 83.268242689 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242815881 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243964915 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24338374 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244717798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244226326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243432212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243324533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243633928 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243432829 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244410479 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246062546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243946839 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24444864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244187166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24470972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243585308 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244361683 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245476247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245408307 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247778421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245051771 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244646853 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243516928 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24560262 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245223301 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246535532 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24491231 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244748669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245281679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244812142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244992845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244630233 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246084545 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.244478732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246305908 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245283418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245308226 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245483467 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246878023 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247911759 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246349551 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247657382 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246108762 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247259716 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246359269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246662407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247010043 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246545569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246291568 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247059866 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247055019 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246763833 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247227473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247519297 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247885053 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247551323 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247014787 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245717365 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246946063 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24864864 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24748154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248094785 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249080943 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246166725 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247038002 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246954979 seconds)
  done (took 83.385520723 seconds)
done (took 1759.384346684 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.41048066 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.364594227 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.247532831 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.25236807 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.249303217 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.269361466 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.260933453 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.248034669 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.249434067 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.249554783 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.248732907 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.434528186 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.243881904 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.248616996 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.248847478 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.344507644 seconds)
  done (took 25.740153888 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.272043806 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.258199279 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.36091871 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.279021905 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.279579147 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.430139866 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.312681368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.258724914 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.416024657 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.303291181 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.252307545 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.285992927 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.258246867 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.253243621 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.279046674 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.42928604 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.492468407 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.259337754 seconds)
  done (took 27.849644605 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.669548553 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.285068046 seconds)
  done (took 5.126191655 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.274315527 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.258260119 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.259221628 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.256181738 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.248547946 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.24946358 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.257557316 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.254420735 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.254886501 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.378991786 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.264757126 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.268716443 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.27793615 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.258801918 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.256007541 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.29584352 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.437185091 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.256584713 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.255196398 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.26474825 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.258984107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.356303534 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.298135362 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.255728008 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.375233501 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.259505406 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.265351205 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.265987059 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.391951909 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.258548233 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.257881482 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.258196842 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.26059448 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.125102522 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.762433745 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.250472284 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.284085496 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.267280461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.257011649 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.398503819 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.261119902 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.265551325 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.251165446 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.746477503 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.393332712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.371534945 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.271717416 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.265229551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.261309754 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.319981077 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.260552191 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.261159102 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.301455831 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.011828691 seconds)
  done (took 81.058248093 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.260521318 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.253099172 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427679535 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.273103921 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.253394392 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.253805837 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.253842634 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.523081798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.259926131 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263500469 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.572544423 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781816113 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27676089 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.31508444 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.143229882 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.311249734 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248618465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.248378822 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.265608984 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.253488518 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791500699 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.251192883 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.245390488 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.503838753 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.282145581 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.724446614 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.242602816 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.248302388 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.244393819 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.241866006 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.728279293 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.270419134 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.301561545 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.242258432 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.495910644 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.592543401 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.563738576 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.249661416 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.274963856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.247812351 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.260226176 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.716405308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579062827 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.240619266 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.258865811 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726963837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.247590677 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.248989461 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.248524926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490816336 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.247145755 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.244589247 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.243492494 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.258145293 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.242862654 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.309105511 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.310841814 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725737161 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250119322 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.244803087 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279013899 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.243809922 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.247373392 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248043244 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.246646767 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.587769204 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.453386852 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.251163907 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.587173041 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.729809295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264290775 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.791632582 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.26479927 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.264539977 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.265208823 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.243324474 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.244254696 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729399198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.281734367 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244462669 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.570720262 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.252659926 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.558064103 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.259456715 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.26109735 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808322419 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.25294068 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.250862022 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.243315373 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.24512808 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.244712318 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248728383 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.505856052 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.312621901 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.247055718 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.245566289 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.276350184 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.251818842 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.246923691 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.250284478 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793743964 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.277786825 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.246036053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.248375261 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245131037 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.250284508 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.245368028 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.247098818 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506887386 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.244600885 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.2460443 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.245822655 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.246336139 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.249428094 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.493697774 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.252195268 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.542263713 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.256009101 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247022781 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.259117815 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246732878 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300262694 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247861765 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.253540203 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.148607945 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.539083713 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.264278774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.248233199 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.249287728 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247228655 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246541846 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247725249 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.267141981 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.253060263 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973625982 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.287823811 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.272259733 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.246925911 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.248645801 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247498524 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.256222991 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.248813673 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.533559591 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.509612862 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.430309783 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251316648 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.247958683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952189824 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318187046 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426783709 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.26741824 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.248981092 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489139422 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.456531258 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.249966246 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.24830969 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.251390697 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504863743 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.247936138 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.545703222 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.759953323 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.270637576 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.248467374 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978071865 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.976928604 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.250877862 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.252835018 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.564348013 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.26365176 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.250387109 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.250195664 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.249491098 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.249612293 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.253513347 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250719697 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.251137277 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.249871926 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383255753 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437249724 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.26681302 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.256464364 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.726994464 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33553994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250384935 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.260486002 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.253998206 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.250540667 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.33146532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.253317065 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.265572109 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.25382604 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.260665361 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797655419 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.2621199 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.252131129 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440260202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902727209 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.272804159 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.252259126 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.250965379 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.12084439 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755078735 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.276622942 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.544277095 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.258243862 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.288687306 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258679192 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344825202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754747161 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.255779461 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.25242141 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.869546894 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.266353758 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.784276737 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.252130029 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.255166406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806999628 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.268317299 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.255981746 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.251420572 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25812142 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544728733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.254130444 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.306086598 seconds)
  done (took 478.798698315 seconds)
done (took 619.740788077 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.252633894 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.252649852 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.246595054 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255792765 seconds)
  done (took 10.184669855 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.260088881 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.256669325 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.257729336 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.256354276 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.258062003 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.257308665 seconds)
  done (took 8.720941695 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.250588568 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.250416921 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.257879258 seconds)
  done (took 7.93454116 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.451051402 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.26846972 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.565381677 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.2663207 seconds)
  done (took 8.727030106 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.257125567 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.257450981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.256299389 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.258986262 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.261197572 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.261937294 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.259194874 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.259807323 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.262221225 seconds)
  done (took 12.507118431 seconds)
done (took 49.251045585 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.246722994 seconds)
    (2/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.243236946 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.258533127 seconds)
    (4/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.350545985 seconds)
    (5/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.24367473 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.259319961 seconds)
    (7/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.241336395 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.244923653 seconds)
    (9/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.253947796 seconds)
    (10/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.259519066 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.252316529 seconds)
    (12/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.261989517 seconds)
    (13/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.239444638 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.491458209 seconds)
    (15/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.389061653 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.29247866 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.278604732 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.252793297 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.28664206 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.240125727 seconds)
    (21/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.256455551 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.280204509 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.967628293 seconds)
    (24/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.271185248 seconds)
    (25/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.338070687 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.131979252 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.363011334 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.34648911 seconds)
    (29/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.068828296 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.680658489 seconds)
    (31/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.26213178 seconds)
    (32/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.36361203 seconds)
    (33/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.35466381 seconds)
    (34/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.244304452 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.277632435 seconds)
    (36/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.438795248 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.240773958 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 2.253355797 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.241004032 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.242303116 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.354687885 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.383653147 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.076366555 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.462564704 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.263663674 seconds)
    (46/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.242691014 seconds)
    (47/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.241852567 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.243585088 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.444352398 seconds)
    (50/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.240246246 seconds)
    (51/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.373122905 seconds)
    (52/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.256938152 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.976153826 seconds)
    (54/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.25318954 seconds)
    (55/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.242354861 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.364823303 seconds)
    (57/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.075804257 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.510284561 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.271232525 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.773658005 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.248238261 seconds)
    (62/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.618942729 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.286718221 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.311764276 seconds)
    (65/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.281482024 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.183512295 seconds)
    (67/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.281970143 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.243452275 seconds)
    (69/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.353075659 seconds)
    (70/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.70119897 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.258623405 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.2453282 seconds)
    (73/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.411915669 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.305429592 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.267165659 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.274634927 seconds)
    (77/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.624037563 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.499249638 seconds)
    (79/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.315529531 seconds)
    (80/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.257381926 seconds)
    (81/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.106081527 seconds)
    (82/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.277529854 seconds)
    (83/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.368265126 seconds)
    (84/286) benchmarking ("sort", Float64, true)...
    done (took 2.255439594 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 2.255817022 seconds)
    (86/286) benchmarking ("sort", Int8, true)...
    done (took 2.257437957 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.321229009 seconds)
    (88/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.974808262 seconds)
    (89/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.733697561 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.663410084 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.272921068 seconds)
    (92/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.253983007 seconds)
    (93/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.270709878 seconds)
    (94/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.250134238 seconds)
    (95/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.85481302 seconds)
    (96/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.972596591 seconds)
    (97/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.356687274 seconds)
    (98/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.24305166 seconds)
    (99/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.621501634 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.274969807 seconds)
    (101/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.766203939 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.608585507 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.259801257 seconds)
    (104/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.110493784 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.357114979 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.283809806 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.256835677 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.303144994 seconds)
    (109/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.507555994 seconds)
    (110/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.261026164 seconds)
    (111/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.26845411 seconds)
    (112/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.389508557 seconds)
    (113/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.245614557 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.147608978 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.481530157 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.459578825 seconds)
    (117/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.63287095 seconds)
    (118/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.257460023 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.025936781 seconds)
    (120/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.067033389 seconds)
    (121/286) benchmarking ("sort", BigInt, false)...
    done (took 2.258815829 seconds)
    (122/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.247079549 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.118484521 seconds)
    (124/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.246448066 seconds)
    (125/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.248622312 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.27847734 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.667399443 seconds)
    (128/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.03646473 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 1.773095824 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.281594685 seconds)
    (131/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.277826477 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.256052028 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.539733004 seconds)
    (134/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.260730063 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.246158422 seconds)
    (136/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.294247631 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.977945975 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.65803321 seconds)
    (139/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.459196329 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.52184624 seconds)
    (141/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.247616378 seconds)
    (142/286) benchmarking ("sort", Int8, false)...
    done (took 2.259233787 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.345531759 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.24699287 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.368335992 seconds)
    (146/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.247906502 seconds)
    (147/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.260066378 seconds)
    (148/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.853467174 seconds)
    (149/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.350362773 seconds)
    (150/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.256311058 seconds)
    (151/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.498460265 seconds)
    (152/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.248409088 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.260799561 seconds)
    (154/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.085454804 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.810186719 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.002283079 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.286833915 seconds)
    (158/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.249380396 seconds)
    (159/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.395368322 seconds)
    (160/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.286736907 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.248917015 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.255196615 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.250483137 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.286261616 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.250837251 seconds)
    (166/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.271487865 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.254947647 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.249580809 seconds)
    (169/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.308215038 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.307444643 seconds)
    (171/286) benchmarking ("sort", BigInt, true)...
    done (took 2.263935598 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.273905116 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.255670814 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.252982576 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.278709478 seconds)
    (176/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.868407624 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.256647178 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.997877575 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.248827797 seconds)
    (180/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.288653449 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.364039623 seconds)
    (182/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.248893194 seconds)
    (183/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.282970757 seconds)
    (184/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.389647592 seconds)
    (185/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.27110833 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.251244394 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.290657152 seconds)
    (188/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.253286761 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.033020684 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.251200987 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.305735276 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.279377985 seconds)
    (193/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.289523461 seconds)
    (194/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.348419075 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.14436853 seconds)
    (196/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.849380469 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.257131514 seconds)
    (198/286) benchmarking ("sort", Float32, true)...
    done (took 2.263947166 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.274610183 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.263398985 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 2.264393665 seconds)
    (202/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.362158915 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.321490489 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.363331544 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.608642672 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.288221086 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.266364058 seconds)
    (208/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.305044215 seconds)
    (209/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.376621326 seconds)
    (210/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.252181318 seconds)
    (211/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.404294908 seconds)
    (212/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.252755485 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.27125514 seconds)
    (214/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.253802502 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.266642858 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.399991683 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.314688482 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.192682336 seconds)
    (219/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.484449414 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.266796006 seconds)
    (221/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360145652 seconds)
    (222/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.253659907 seconds)
    (223/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.291086541 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.256203332 seconds)
    (225/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.373537188 seconds)
    (226/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.256958065 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.843519787 seconds)
    (228/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.288625026 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.265124317 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.295102045 seconds)
    (231/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.255752516 seconds)
    (232/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.15902149 seconds)
    (233/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.307732441 seconds)
    (234/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.266771059 seconds)
    (235/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.254640964 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.252889505 seconds)
    (237/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.344833021 seconds)
    (238/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.252663763 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.254078501 seconds)
    (240/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.499452117 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.291995677 seconds)
    (242/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.265727836 seconds)
    (243/286) benchmarking ("sort", Float32, false)...
    done (took 2.281860677 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.889860275 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.469370338 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.168667422 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.665471271 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.308673459 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.14598493 seconds)
    (250/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.253929795 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.652257424 seconds)
    (252/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.262448682 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160751563 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.26562833 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.341943764 seconds)
    (256/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.265209131 seconds)
    (257/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.197069049 seconds)
    (258/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.666601361 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.262286972 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.376703058 seconds)
    (261/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.266667043 seconds)
    (262/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.76411749 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.360953652 seconds)
    (264/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.630249711 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.35097444 seconds)
    (266/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.256493769 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.385954693 seconds)
    (268/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.293286672 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.265464277 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.256577279 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.333035644 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.269513937 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.268897031 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.320670512 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.272649298 seconds)
    (276/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.257689632 seconds)
    (277/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.374791535 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.273524977 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.302940408 seconds)
    (280/286) benchmarking ("sort", Float64, false)...
    done (took 2.267304474 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.88927713 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.291828213 seconds)
    (283/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.260011062 seconds)
    (284/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.086402257 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.255443534 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.310598717 seconds)
  done (took 545.400016015 seconds)
done (took 546.574921928 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.303837671 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297999469 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.281191637 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.301720406 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.392595538 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.45702868 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.290068755 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.283788076 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.329478376 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.33097397 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.27840397 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.456723682 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.281992935 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.280476092 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.280222438 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295711727 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.270608585 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.281177334 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.297782427 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.291047058 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.297980213 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.280562842 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.331707473 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.456655399 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.285701127 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.285249535 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.283794321 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.302169252 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.392645349 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.284996548 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.284611433 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.292585411 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.270711388 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.281282701 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.277785886 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.302382005 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.292443429 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.292229439 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.286561925 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.314955839 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.283199738 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.281854395 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.284210257 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.283130279 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.283894496 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.287252647 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.284633727 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.289334762 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297407024 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29912439 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274498507 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.297311756 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.286603973 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.284596334 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.295585669 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.283627851 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.286779512 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301834654 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.306077448 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302724575 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.277347634 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.289100891 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.28679213 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.300332048 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.292749911 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.282307065 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.279883347 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.287902007 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.284260196 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.288882516 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.282369909 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.291276294 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.286453123 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.298531598 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.315802118 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.273908275 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.281147128 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.285786392 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.29152022 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.283269903 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.294988467 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298869752 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.289745611 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.286385232 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.300355217 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.461808593 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.296936857 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.287010317 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.295339711 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.30480299 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.294858581 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.296624978 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.289961008 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.282089644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.296926548 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.29067304 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.289435408 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.288852805 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.290775571 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.299271497 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.288561293 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304774771 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.283934454 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.283650521 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.287294131 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.300254238 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.289039189 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.286356241 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.309062486 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.334624181 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.28906857 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.281033425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.291867104 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305891389 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.297930824 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.291460448 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.283483615 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.280968341 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.282269626 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.301691137 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.290406063 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.285981881 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306020442 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.291312275 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.284601417 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278728034 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.29118489 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303581787 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.410482799 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.298650354 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.320156172 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.28649823 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.292817713 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.3235062 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306148063 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.321891523 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.290425874 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305971165 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.305404022 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.286706578 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.299218921 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.300370325 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.289477095 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.295418669 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.283403878 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.323979149 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303624475 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303161714 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.310997512 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.410311329 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.287695722 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.284092193 seconds)
done (took 214.811569073 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.347815759 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.285429081 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.370151974 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.28603302 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.383937689 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.383839629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.285101653 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.28406127 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.284239335 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.661722373 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.284077249 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.285371403 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.27855445 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.283446685 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.368203279 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.287172617 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.284448524 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.628072054 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.28784542 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.360381058 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.285000118 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.286354661 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.287350486 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.667204723 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.287834767 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.281895747 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.360994222 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.287976701 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.632481934 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.284026602 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.287408836 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.632551739 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.377390732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.304979547 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.298218136 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.295385337 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.387997538 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.305757307 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.367400635 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.369425836 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.373425176 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.326785082 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.284510838 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.287902234 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.290947054 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.289477662 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.286814415 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.316394109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.28799364 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.287114283 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.62843023 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.299118953 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.28773795 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.28788598 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.288676225 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.318627472 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.287518427 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.289232305 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.3787595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.292121128 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.351359549 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.669762525 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.666899776 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.290737121 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.289658285 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.287615253 seconds)
  done (took 101.356043647 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.356329812 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.364135111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.400531807 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.292428545 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.341731403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.405766875 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.29178013 seconds)
  done (took 10.657201455 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.296899073 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.290901717 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.340305439 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341232219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.290796483 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501954849 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.29117218 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.30238686 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.28922053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.366981348 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.292544966 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.292954486 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.297823211 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.288087985 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339214061 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.304192474 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.407321121 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.292827139 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.293819083 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.444356736 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288989531 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.298681336 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.365541174 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.303039805 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.292970466 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.298905944 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.215691811 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291969528 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290103893 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.293288026 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291088884 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.392456668 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.293255261 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.291693875 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290874424 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451562835 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.29270857 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290542012 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.295625743 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.294878613 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.293980147 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.293310199 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.293876815 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.292009241 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.293663327 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.318917064 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.293728474 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.292292749 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.293319787 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.294893567 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.367359225 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.295207765 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.291244494 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.292486069 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.370713446 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301904261 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.294732625 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.292218747 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.295290468 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292629506 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445943172 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342637642 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.294361135 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342771549 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294882423 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.294642046 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.295130502 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.295195588 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386872806 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.294933035 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343247353 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.292498291 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.513850201 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.318745035 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297292256 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.297783856 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.298224245 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295200021 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.291427233 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.302157899 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.29275041 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.296880621 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.301989607 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293373832 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292377874 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478856993 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451652185 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.293575692 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.308011116 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.302327596 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.29404768 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.370457431 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.296431064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.293189841 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347920714 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.411556006 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.372212763 seconds)
  done (took 134.185584173 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.299680387 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.304209337 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.300611877 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.32085305 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.297168904 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.298413942 seconds)
  done (took 9.031499038 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.300038617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.297472826 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.296229618 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.297344522 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.297138205 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.298660449 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.298274865 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.299449742 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.301325264 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.29827309 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.299411203 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.29965523 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.299797548 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.29896272 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.298185961 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.298823696 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.299363478 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.295972521 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.297309571 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29759166 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.295631796 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.298176452 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297998539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.300740169 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.302451881 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.300169747 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.306448826 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.2990216 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.29943282 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.304296407 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.30131206 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.300420539 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.300543405 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.305372934 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.302468251 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.301395765 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302251458 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.301205359 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.297867182 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.301813415 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.302439186 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300244398 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.300668851 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.301955254 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.302948114 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.306487678 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.307045226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.30875781 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.301998054 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.301421965 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.303039422 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.301839484 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.30409959 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.301091704 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.304376018 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321858166 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.307041526 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.301881106 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.302690381 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.303446506 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.301982208 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.303639112 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304650185 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.307051738 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.300497071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.303892099 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.304420651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304358993 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302055459 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.303653987 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.304732682 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.300569272 seconds)
  done (took 95.929005873 seconds)
done (took 352.359331018 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.713507192 seconds)
  done (took 3.929846461 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.34888487 seconds)
  done (took 3.567425795 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.870532303 seconds)
  done (took 22.089908471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.344314949 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.310288333 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.31396309 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.30975625 seconds)
  done (took 10.495151022 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.516799741 seconds)
  done (took 3.733859348 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.302457334 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.297661276 seconds)
  done (took 5.819067547 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.550920084 seconds)
  done (took 3.768743032 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.5882912 seconds)
  done (took 3.805520518 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.321538748 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.312898183 seconds)
  done (took 5.860844096 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.284497582 seconds)
  done (took 3.501464902 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.206805475 seconds)
  done (took 16.42590133 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.299667918 seconds)
  done (took 3.521764198 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.326900542 seconds)
  done (took 3.546881827 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.775857895 seconds)
  done (took 5.994265659 seconds)
done (took 97.27824308 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.296689579 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.299835097 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.29907847 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.29851836 seconds)
  done (took 10.412478606 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.33767612 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.337664932 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.339423653 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.347147799 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.341181475 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.337682815 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.330285838 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.33020521 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.3487859 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.341541639 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.339958011 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.340020789 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.339801224 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.331688237 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.340679633 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.341360774 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.349767559 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.338994022 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.330489231 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.342969919 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.305949595 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.350183764 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.342371668 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.306644492 seconds)
  done (took 33.311258348 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.822778418 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.376594743 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.46000906 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.35753341 seconds)
  done (took 7.235724019 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.35816909 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.359002422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.369059474 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.410461315 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.436005109 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.368656857 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.333456634 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.327055806 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.31388062 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.36051445 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.434586095 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.375420058 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.456108453 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.307274182 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.509306833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.306924907 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.306210281 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.358723409 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.410005026 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.433100273 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.307924972 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.35873536 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.362415019 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.374512435 seconds)
  done (took 34.157797934 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.307651761 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.325467945 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.307773227 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.305980085 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.31501519 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.307873846 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.309216319 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.307442607 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.305616598 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.313940835 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.304932862 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.3196857 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.306359795 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.307145923 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.314068547 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.308557043 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.313035883 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.306942492 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.307712368 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.312743318 seconds)
  done (took 27.427693396 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.301647806 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.301651307 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.654070467 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.55813607 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.303528378 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.30143331 seconds)
  done (took 13.641933383 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.376917564 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.511599315 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.309588482 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.654053947 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.733865223 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.309767568 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.309624137 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.546740678 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85621924 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836855934 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.372239067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.376873607 seconds)
  done (took 19.416468282 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.311549979 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.310208337 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.316940032 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.326781394 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.361922848 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.313603413 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.31698079 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.302710139 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.369492309 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.366832644 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.31325385 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.365357465 seconds)
  done (took 21.199223931 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391638553 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304312476 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304386668 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305861183 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311948077 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516261302 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313779853 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015878436 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327720124 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57873943 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304813882 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400207091 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561188843 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310974085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310091053 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.290411555 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537700082 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784767179 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307982378 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311716677 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331076549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30515589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312090824 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.519631658 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518914155 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306590702 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.567562111 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306849394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587112774 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321385663 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31805813 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307169006 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580879488 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958835729 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420683063 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516024174 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319232232 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308427721 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.310821587 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.319633376 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317265453 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308655879 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317262614 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306716434 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306015555 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308514686 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022704964 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.331105798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.305475496 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307448646 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567649224 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404520889 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.313138613 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308845155 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355938689 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315455199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.313105339 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402848658 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880818291 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321661794 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314589446 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.315525096 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315293123 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315746139 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924241875 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.315703752 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.313348875 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316066693 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310353357 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3163365 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327055707 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310089348 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.335664575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309560156 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999388589 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312862352 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319363912 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849441015 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321292569 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.313073099 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536954008 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310711455 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310350675 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.308614743 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309731062 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004662611 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319040426 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.309426745 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333809724 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016799925 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.542153194 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328292477 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335046762 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534737623 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.297974333 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310090829 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.311043422 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332918332 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333410639 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017617009 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32766871 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.315659998 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567909496 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.52386105 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311157721 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.304775925 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794494706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330321675 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.344455164 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324428257 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523724441 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.889056212 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329495163 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325244779 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330494494 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312430005 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046328566 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314839715 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.324539667 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313199982 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574761064 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.092957647 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314406324 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381760434 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320452705 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315142192 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321807115 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315673084 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312896604 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.517503447 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335759211 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.324218675 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.31590588 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313536939 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.314830245 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328397142 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.315766583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537429699 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323081439 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588446206 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314987684 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313664154 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31452615 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.537763375 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.311174884 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.320470169 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57335806 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31849969 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317942131 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325466961 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334369547 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413958538 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335734485 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.324789491 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.569849329 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.318201876 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.320828869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326140613 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31785412 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321269877 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.321952485 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323736911 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895219098 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293327067 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322797193 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204555527 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.330238376 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383380784 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323384418 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529252444 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.314528099 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326503046 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.321825046 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.327264028 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540053525 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325792842 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.324311512 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403604013 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.78821654 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912257175 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331112061 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.317546816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.314268837 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.314906247 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317471487 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318022581 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319377222 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529262817 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332202376 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318647617 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907512225 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320814254 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327870596 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.331375098 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330106622 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.324255642 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318622133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.316287294 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317846116 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350831472 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.329777073 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463597583 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.333605365 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318773977 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835190272 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325556331 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319172815 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319539623 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353466411 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330415138 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130656292 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578740322 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332612496 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581967712 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328118132 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.339810914 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.318687525 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319734871 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340208535 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.339614552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35074381 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.331083538 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332318442 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326271114 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888815886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04268453 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850686244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339205669 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.322760949 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326669228 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.031320941 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338898266 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32075409 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553217736 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036229549 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339796458 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796627801 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.337116417 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075243024 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58182136 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550875194 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334288073 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.321975786 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592459368 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540850619 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355706873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331680998 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329129032 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.309344744 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875561793 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339869993 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409989044 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034189793 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340120538 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330459968 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.379924754 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34361209 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724424038 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347017731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323344833 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334635707 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337394585 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136939642 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329153813 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322308349 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941380035 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325874143 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.804919857 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341253099 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535962774 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.334934111 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.328868127 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.328903231 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.330076251 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.577862477 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580199239 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324064846 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325655193 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862946145 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.179141031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.329447807 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32295469 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055654613 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332065543 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612629639 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.325640082 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.330921301 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325752953 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325186575 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324562677 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.322220916 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332403702 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299234556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807799608 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.343504559 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341206875 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334754736 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176340356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580385577 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.339508913 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.904472364 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551574286 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338820735 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355932204 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.328758427 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333072344 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.322044968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326026219 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.560598464 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369773008 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.556171785 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336831575 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.313425926 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39658787 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545215909 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325210768 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336680375 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573896335 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.32453492 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.3273337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05109664 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351063378 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337336445 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334387693 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32749509 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351511862 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397232721 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541436252 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.33856019 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.338864861 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731653381 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356864883 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337264936 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.341434972 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42288467 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328248982 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.349956064 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.100779052 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914843802 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059348919 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915647137 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593663915 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331314076 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330963278 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327659269 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4774566 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329311851 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601509855 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32864598 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.332473123 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359348384 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339193292 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342166571 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54851888 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604181172 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328648232 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336214023 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336781512 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.329388595 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340585204 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.541659899 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815749169 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874830106 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331127834 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33421752 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050484717 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622678654 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328978941 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330667002 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330583278 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.33351451 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.356895227 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.337089539 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330700627 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501315871 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588445092 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99126449 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361243571 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.362925842 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.103889915 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329861117 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604942821 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328638076 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552718208 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916491822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026973974 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601872444 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402230104 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545480653 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.331450004 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478717831 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.329770039 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332160533 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332561944 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176351822 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.329271802 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341467858 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921558697 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594277679 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.336049008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.330604106 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355064899 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.343678175 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555676185 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040313238 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55939776 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344779347 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340826374 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333568501 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919570372 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600988913 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335948604 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336810964 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571871983 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568918616 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359290103 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.786400982 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.331166829 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882513205 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306110275 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354864403 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332503695 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.058088692 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929199947 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.339211247 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830023315 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336777445 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334279675 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633386726 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.340847659 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348201475 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618525822 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.339337379 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336644238 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559745541 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.920175135 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095921011 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.336734775 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35964778 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.338527707 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336175386 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364279615 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344275996 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347388709 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.757881343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355799426 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336748712 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34689255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.346670308 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343891676 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.341828922 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336490524 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.342902245 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.325593892 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.33774234 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344185707 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456951727 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897675685 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359052215 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.032756359 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.665052993 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590852869 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341188047 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.330659487 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.342253136 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336495683 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337633992 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338675043 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357184405 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888280518 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.342127265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.355951437 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342428802 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.553746926 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549583977 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337519126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578520671 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344591274 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361681867 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.325858637 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338083771 seconds)
  done (took 946.757333073 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.359484714 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.348809524 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.348266514 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.381406114 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.359020326 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391078597 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.352325515 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.363433571 seconds)
  done (took 20.160026015 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.342779659 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.352704871 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.345708902 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.348087777 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.345134026 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.806923812 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.367596453 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.353971537 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.349568368 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.352163929 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.345294841 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.984533109 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.357289233 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.343417471 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.3386442 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.349025724 seconds)
  done (took 31.94047857 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.267136294 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.474353325 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.195136382 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.369546108 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.383950193 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.349340867 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.563966621 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.365267465 seconds)
  done (took 26.226280331 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351883372 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.351602412 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.35163471 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.353301221 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.351755964 seconds)
  done (took 8.017436333 seconds)
done (took 1201.121631589 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.345441626 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.347911593 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.343758651 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.348555059 seconds)
  done (took 6.64320825 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.327318991 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.329891719 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.330105871 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.352345309 seconds)
  done (took 9.597505742 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.036807346 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.976219837 seconds)
  done (took 5.270843072 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.343224283 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.103243186 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.078442005 seconds)
  done (took 7.782841355 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.636407966 seconds)
  done (took 2.894717863 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.747910284 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.708088354 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.537802587 seconds)
  done (took 6.252525545 seconds)
done (took 39.700023332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.34396279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.590735905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.49731319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.339935144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.502583385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.497231542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.076738562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349072736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.354502838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.352431848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341645415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.504835327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.130256374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.592528019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.131289538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.594225608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.503408295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.355194627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.342589808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.341501942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.077834995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.341591794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.352308226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34285606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503720008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.487416515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.348200477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.593350367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.3504664 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.352773866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.487646765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.348062384 seconds)
  done (took 81.58814117 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.352318766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.343264704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.35279989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.343526351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.343327546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.351643914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.345636686 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.342417224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.350037322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.344143149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.343905375 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.343472184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.344644194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.35214121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.345445862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.354428753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.344241094 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.344398093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.360289464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360246876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.345636603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.34360878 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.344081488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343028705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.359916781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.36891992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.354509246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.351080556 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344426024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.345049385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.381310406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.352817165 seconds)
  done (took 76.458546797 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.345275716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.35020749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.345427607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344192618 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361671878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.354462436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.345287576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.358999839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358086666 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.35689907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.356288375 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.345592825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.347356208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.344047753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.361466056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.346879359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.345547503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.370011112 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.348468246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.345806712 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.364276788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.34877958 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.345121714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.35526135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367342256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.345149207 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.34686966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.345434348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.351912709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.346387098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.352704637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.355193487 seconds)
  done (took 76.519489197 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.540450669 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.353047114 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.354988147 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.286521522 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.353936099 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.353818069 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.34717525 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.543509956 seconds)
  done (took 14.397824235 seconds)
done (took 250.22208614 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.346043612 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.354917707 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.56197547 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.382413887 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.347359524 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.38375538 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.376048382 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.548170049 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.311623146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.559156431 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.355258131 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.38054626 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.347366919 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.374340474 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.632155438 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.47963995 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.241858218 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.342335063 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.699276797 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.368768341 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.623993714 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.355710666 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.551847622 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.303402796 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.375086946 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.350696761 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.365176948 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.227414773 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.390958365 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.704486954 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.364079054 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.350932988 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.422730235 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.418003436 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.481830419 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.476311979 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.367120341 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.422191774 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.558635513 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.359341947 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.349593633 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.110594878 seconds)
  done (took 81.589081564 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.355730188 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.463071522 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.35742835 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.356848061 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.356204476 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.46045927 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.440648612 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.357279141 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.357233546 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.35551837 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.357313287 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.357680008 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.358339369 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.357991919 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.357047347 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.358841462 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.357116202 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.360162181 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.359371165 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.404409057 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.467250036 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.360650614 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.353445698 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.357886842 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.443366122 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.459828687 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.358551214 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.353816702 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.393065764 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.36202124 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.365127115 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.401394738 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.363415681 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.362634928 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.470281332 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.446404931 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.365433506 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.360006083 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.464848464 seconds)
  done (took 55.266677193 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.36072213 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.606398629 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.788844885 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.374823536 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.360765863 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.364276116 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.43752795 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.360572883 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.362891125 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.363634277 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.53193946 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.362496042 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.394311368 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.810959309 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.371580663 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.360548407 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.361106458 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.361654667 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.618797049 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.370311083 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.457778006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.362681781 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.437649906 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.369384427 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385138249 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.362270793 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.366360176 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.954105201 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.364666625 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.530432735 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.134323069 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.44241983 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.89261552 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.794074813 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.133273591 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.373274565 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.361830845 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.540722765 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.367625016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.361936503 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.437843303 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.372092546 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.802493186 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059069555 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.38964261 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.362505902 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.972467325 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.544006084 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602790736 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380539881 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.81524954 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.373304338 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.361641602 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.363988364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.598786672 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.377169276 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.363843699 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.978097392 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.392372294 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.438675205 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.372512061 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.363601554 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.621533973 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.365720984 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.609920868 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.36563472 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.371657963 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.38241289 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.789378558 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.367416999 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.06414798 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.381133738 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.363020743 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.536124222 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.611505612 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.003349795 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.367746301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.625375321 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90320672 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.440533542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.368399337 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.940127349 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.44329195 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.368244458 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.366808495 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.366365126 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.364659447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.409703377 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.43750924 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.007185272 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.044728734 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.999950976 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.458547982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.378587597 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.366918223 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.974907763 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.382452839 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.366161886 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.786217879 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.074159082 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.383311856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.372517719 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.059384849 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.384888489 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.444001594 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.372406159 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.796335987 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.369089268 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.415509672 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.367209266 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.374060818 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.389708254 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.443634491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.373489356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.368445382 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.048369105 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.568163267 seconds)
  done (took 180.521909667 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.370665334 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.361226612 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.367153547 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.360650803 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.359404565 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.369020944 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.360811098 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.360013143 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.368585486 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.360746593 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.36116744 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.362112416 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.361245539 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.366416069 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.374215808 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.367959488 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.36179514 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.360841335 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.362213228 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.362397886 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.361081373 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.38550556 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.360890797 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.361052828 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.364440581 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.362521324 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.364283318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.365077179 seconds)
  done (took 63.480394334 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.369475768 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.917939123 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.37831966 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.496439728 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.394094758 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.365375625 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.494760743 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.426091673 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369860778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.366913577 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.366410667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.661997329 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.369883122 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.864824045 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.556536998 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.504124229 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.873866984 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.387053802 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.366736124 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.367057266 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.497888266 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.385498007 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.660605684 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.916006722 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.372347126 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.920994974 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.37105673 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.372098155 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.368619307 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.92252661 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.377794909 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.66381489 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.443916838 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435707121 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.923277993 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.879661894 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.892771334 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.514372862 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.379001393 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.369377724 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.371034021 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.359988025 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.927409667 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386444677 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.376647979 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921058301 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397216374 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.371704587 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.377025401 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.36993995 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.427671025 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.428826828 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.667504536 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.928528025 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.453441707 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.386356967 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.498570935 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.746607838 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.382976439 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.870101781 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.362201583 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.926997579 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398675589 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.361913894 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.371984339 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.375453921 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.518578559 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.506760877 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.879304183 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.388607783 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.868770183 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.533791923 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.378734717 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.37114245 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.373061924 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.925927246 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.879615623 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.535446071 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.510244763 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.569463081 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.374727251 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.373801463 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.3648157 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.449207879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.381040705 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.955848091 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.896234833 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.391792892 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.373580011 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.373798069 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.374293093 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.544815204 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.937484075 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.457448643 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.871547932 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.688497144 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.675565042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.384119226 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.431179902 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.399481552 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.672402007 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.376237329 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.428722387 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81207085 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.681732128 seconds)
  done (took 163.202683753 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.611508831 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.392399293 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.469227533 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.535468144 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.971042372 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.959659085 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.373890805 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.493442806 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.482822509 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.635428887 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.392137923 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.473810921 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.587458815 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.456443924 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.084775861 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.448302006 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.463987882 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.539606109 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.521422895 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.377283032 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.00875064 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.669879671 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.582576572 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.406012048 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.483966693 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.110107358 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.939928361 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.921979992 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.54471833 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.371838019 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.902165 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.370682696 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.307920726 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.03112161 seconds)
  done (took 64.206507046 seconds)
done (took 609.53106528 seconds)
SAVING RESULT...
DONE!
