cset: moving following pidspec: 7280
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.109698028 seconds)
loading group "string"... done (took 0.493962675 seconds)
loading group "linalg"... done (took 8.444207745 seconds)
loading group "parallel"... done (took 0.168889074 seconds)
loading group "find"... done (took 2.429729367 seconds)
loading group "tuple"... done (took 1.963977821 seconds)
loading group "dates"... done (took 1.27404672 seconds)
loading group "micro"... done (took 0.609697714 seconds)
loading group "io"... done (took 0.648346204 seconds)
loading group "scalar"... done (took 42.380194857 seconds)
loading group "sparse"... done (took 12.128881962 seconds)
loading group "broadcast"... done (took 1.215518398 seconds)
loading group "union"... done (took 2.356486464 seconds)
loading group "simd"... done (took 2.790883743 seconds)
loading group "random"... done (took 10.621112713 seconds)
loading group "problem"... done (took 2.088109807 seconds)
loading group "array"... done (took 21.66370989 seconds)
loading group "misc"... done (took 1.599210696 seconds)
loading group "sort"... done (took 3.449984526 seconds)
loading group "collection"... done (took 16.59021444 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.891394989 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.174918961 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.239343844 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.625587304 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.300696827 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.202781164 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.198380395 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.204743495 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.526611869 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.218305694 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.190600634 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403931883 seconds)
done (took 6.895980348 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.287341707 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.090972951 seconds)
    (2/2) benchmarking "String"...
    done (took 0.235836554 seconds)
  done (took 0.881472008 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.102818312 seconds)
    (2/2) benchmarking "String"...
    done (took 0.148422156 seconds)
  done (took 0.807414686 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.132022934 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.205591158 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.145187527 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.147345134 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.135060471 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.145469476 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.133330293 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.146093159 seconds)
  done (took 1.613636832 seconds)
done (took 4.279483167 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.516309092 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.927630113 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.541549173 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.212397401 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.343525738 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.357171327 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.314120462 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.267715608 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135798554 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110094447 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.237982847 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.461337018 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.440748157 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956022131 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095799892 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152232348 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.198604865 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.822425953 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.12499746 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.151565992 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530060422 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.24962483 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.158441307 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149606385 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.229241722 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.166795093 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167552382 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.142218644 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.725115463 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.173802967 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233024674 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.12552525 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16669955 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.202110828 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.337783178 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.151757916 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.734044811 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.241615781 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124235421 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.140681996 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.733380201 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.163140927 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.247425808 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.145246264 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109607932 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177663793 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.137479284 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.120578462 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.150647998 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.140789272 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198335696 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.472775414 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.146993273 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.236470783 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.150458379 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.743593582 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.143508333 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.316709827 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.180716416 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147412461 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120280729 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.145645477 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.197408204 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.138109113 seconds)
  done (took 22.5608642 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.24684382 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.246023953 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.123407942 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201094077 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.184274551 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.124029459 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.143733711 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.121869478 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.169650344 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.223628577 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182195236 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.252869795 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.134561874 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.133397131 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.225273829 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293073023 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.170188471 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.151961433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.148169121 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.138971932 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.181879484 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.138587596 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.15156229 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.151613973 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.198261106 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.258524146 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.152004945 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.165654795 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.149550093 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.140622281 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.183915706 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.204161158 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.120049484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.144864441 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217179852 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163961003 seconds)
  done (took 6.920763946 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.269570872 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.145760016 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.29738677 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.22748214 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.169516389 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.231404008 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.2165737 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.323734045 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.312697725 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.220083224 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171713945 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.1393467 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135619271 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.12400739 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.159039987 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.121250544 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.867994177 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.214278646 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.19925816 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.225351702 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154133498 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.124065427 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.409932925 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.130086235 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.141553685 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138088929 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.107516256 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.261603728 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136377398 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.510978526 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.141169069 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139736973 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171577964 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.246578144 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.164164172 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.175888219 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152997389 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.12855706 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.248535934 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.155817929 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.121191389 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136366363 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171850206 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.160328629 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.147916296 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1615336 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174734091 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.128692063 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16600002 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.141473717 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.236798269 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.219276487 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.127790203 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.316596684 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.16853896 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.141302117 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.142454917 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.134251499 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.867965403 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.23893653 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.174938029 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.126087263 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.12317118 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.153499128 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.139116084 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.503299128 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162887892 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.20489086 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.127243415 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.198954979 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15264916 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.157354856 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129261409 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143858937 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149925489 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.143320111 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123380215 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.142580003 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.125464698 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.147028823 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.142337793 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.142090486 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128447619 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.139452161 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190682558 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.152376221 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.148000314 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168331672 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.146737724 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.128597219 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169575055 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138817652 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.132093893 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.244353978 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155068392 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.158117314 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154070221 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.17173385 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143399102 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.344258513 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.125255802 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.179577096 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.140203792 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156097783 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.152722004 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126688387 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144295864 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.137385138 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12532732 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199775544 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.129395993 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.138083132 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.132921581 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.150980303 seconds)
  done (took 32.06040901 seconds)
done (took 62.096712231 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.478253903 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106390275 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.124991592 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107380415 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.125514635 seconds)
  done (took 1.580275048 seconds)
done (took 2.201007963 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.222642 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.322962158 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.239263876 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.147092308 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20908888 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21106413 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194886724 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209369431 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213244854 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.226274096 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.123324132 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.232631817 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.22337233 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.21017519 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.123115027 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.250393713 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.204550174 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.192247072 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.240159171 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146816016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.158511079 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.146418479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.161848585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.130047264 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.146288854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160641308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.165338553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.146021502 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.154392329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.12977167 seconds)
  done (took 2.281102995 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.186437745 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143457209 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.15659617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.136822287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144680829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.143433463 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143099202 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157305898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.165510223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.144213031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.155528507 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.130605994 seconds)
  done (took 2.25176337 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.125859511 seconds)
done (took 9.489239938 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.203322085 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.750693926 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.200227138 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.30656587 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.37037119 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.314911414 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.645702782 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.249061001 seconds)
  done (took 15.783179062 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.157095746 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.241978886 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.15205935 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.141154263 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.153531046 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.135368332 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1532477 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.141327888 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.156447618 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.13634108 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.153951491 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.138962085 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.155588919 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.135763214 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.156205548 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.142002905 seconds)
  done (took 3.145688498 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.175933616 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.172176643 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141593005 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159429701 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.141113685 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.159651657 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.14762401 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.157456546 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139579691 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.154648297 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.150045617 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.157007186 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.156208063 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.13792536 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.158110469 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.162539035 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.154624272 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.143035508 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.176291343 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.143900981 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.158322507 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.144026695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.161202343 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.148491509 seconds)
  done (took 4.405558277 seconds)
done (took 23.967858622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197498508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.143783718 seconds)
  done (took 0.986573432 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.210097457 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.224937543 seconds)
  done (took 1.087648157 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.157053002 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.150021941 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166863049 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.162289283 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.138428008 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151072772 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.177186289 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.137037957 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.152434468 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.137464687 seconds)
  done (took 2.18682257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139977367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.154524469 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.152813148 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.221514622 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.161654915 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.138051145 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.157601606 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.139626555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.157272793 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.137367538 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.156594424 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153768577 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.155617694 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.156127116 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.15529817 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.142873475 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.16174501 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.154311243 seconds)
  done (took 3.453580376 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136380751 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.137403087 seconds)
  done (took 0.930386259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139062376 seconds)
    (2/7) benchmarking "second"...
    done (took 0.151192969 seconds)
    (3/7) benchmarking "month"...
    done (took 0.137818154 seconds)
    (4/7) benchmarking "year"...
    done (took 0.154890227 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.135881805 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.150222524 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.135475468 seconds)
  done (took 1.66367015 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.573067986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265618344 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.391757988 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10364635 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153494379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.363514033 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.153154392 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105383722 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106964999 seconds)
  done (took 2.904938819 seconds)
done (took 13.866034571 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.13685176 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.332256008 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.640235815 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.17125844 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.136270751 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.20944961 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.383601854 seconds)
done (took 2.678747486 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347195827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.205679227 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.116702061 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.140762383 seconds)
  done (took 1.471961902 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.128391676 seconds)
    (2/2) benchmarking "read"...
    done (took 0.159319562 seconds)
  done (took 0.960233211 seconds)
done (took 3.102116407 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.156545675 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.152473998 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.140861698 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155080685 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140680599 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.15691793 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.140048884 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.152185344 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.140589945 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.152546703 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140652243 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155872545 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.138516147 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.15546991 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136854763 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155474938 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.140232847 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153312164 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.138138446 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.154962582 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.141090917 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152447249 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139787679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.154411046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139911158 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154684056 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137470275 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.152588818 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139656446 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.15440937 seconds)
  done (took 5.089784602 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.142774231 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.138239577 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.15307191 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.142920479 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.149114283 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136854204 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.14898389 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13631049 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.152833891 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.137756764 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.157438526 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.140967297 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.156775942 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.143840009 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.160240768 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.144096746 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.16511597 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.14303439 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.157380977 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142742803 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.161002388 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.257407035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.154112195 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.13596289 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.153751605 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.13376282 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.137977183 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.151466328 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136960363 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.151043649 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139085983 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.154291199 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.136979081 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.161408025 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.140077939 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.151841725 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.145333774 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.154962932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.143326256 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.155133415 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.138477037 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.157951021 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.141133381 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.16475028 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.139608815 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.155474729 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137712763 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.15333144 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.138674059 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.154681402 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.133308502 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.151720341 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.139458935 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.154750894 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.139635843 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.132885055 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.153663395 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.13414576 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.153095795 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.138754236 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.152060678 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.141629951 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.163162578 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.143220587 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.1746998 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.142467768 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.152226201 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.138179303 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.153291421 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.14331606 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.154807186 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.149796772 seconds)
  done (took 11.407771198 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.138864586 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136931729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.152534621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.140256104 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155916614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136819773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.152621084 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14087818 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157939637 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.14163051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159371663 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142047603 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158868597 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143150675 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159891143 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.143368301 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.158379708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.139066009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.156552938 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.137567843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137319278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.152744145 seconds)
  done (took 3.92980078 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.277128188 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144879457 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202246529 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.166400699 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.155678805 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.166579633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142209355 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159651727 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147549838 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.169391164 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151410176 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160496387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.17333999 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14897474 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16488654 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.149594861 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159039917 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149342665 seconds)
  done (took 3.676991117 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138314725 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.137801811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153417135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136923069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.154048709 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138214503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154633141 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.139608116 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153405053 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137852585 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.154192024 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139538624 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.159086921 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143275343 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160000654 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.142282129 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.142796301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159902527 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.143127768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159406235 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.141091266 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156355707 seconds)
  done (took 3.93835522 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153301268 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.155725739 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157648539 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161915073 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139022986 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.156282653 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.145223216 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.157268253 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145775801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.156703307 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140165171 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.155461808 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155314234 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15736652 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.146150149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.157966666 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141554034 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156167136 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.141135196 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.15628817 seconds)
  done (took 3.730300829 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.248126385 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155018456 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172215825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163134571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172607355 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156925752 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180139039 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156235231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.176397711 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191291714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161740331 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.177145361 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164453664 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.176763819 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156509218 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179839141 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.179359191 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.164063949 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.172950485 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.157421695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182360899 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172950974 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168370852 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.173620333 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.155880088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.17127625 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156304164 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.177210523 seconds)
  done (took 5.516619467 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.153519732 seconds)
    (2/2) benchmarking "in"...
    done (took 0.169926636 seconds)
  done (took 1.024375446 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142892682 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.14343947 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.157363446 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.14387891 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.159640971 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.141251552 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1580532 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143864733 seconds)
  done (took 1.888736829 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.24717389 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.253405758 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.144229514 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.168983361 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.25463245 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.234031087 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176654238 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.162297734 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.141842618 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.150597992 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.246541407 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.132709194 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157464437 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137128681 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.157742616 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.163529175 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.143752079 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.169508148 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.146850308 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.159202927 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.144972975 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162213784 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.142558561 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.168396065 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.135426509 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.159047949 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.142811038 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.167816452 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137242383 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.1590916 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.138956637 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.157391314 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.145664962 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.16150692 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.14408166 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.25837727 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1650895 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136585665 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.158355333 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.14494001 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.183448538 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.141743164 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.158875092 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.142308181 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1611596 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.144093603 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.162193181 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.141019818 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.150160925 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.136973284 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.157118793 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136396395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.157893123 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.141242123 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.157067111 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165097461 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.144283013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.157100075 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.143547444 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.160656254 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.145361013 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.159270813 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144703457 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.161013632 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142078612 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159683993 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.139869812 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.158155656 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.142857412 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.159899174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.140575698 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.17233658 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.141581412 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.164072889 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146297305 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.15990972 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13944378 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165094248 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140312186 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.159682736 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.1454458 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.18044655 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.142992625 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156963396 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.146172639 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.165223105 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.143792028 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.161231606 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.13355148 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167298858 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.144514886 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.160665682 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133942242 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.157437619 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.137782116 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.162016203 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.134151976 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.158624571 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.140968974 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.163851074 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147781153 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.156834539 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.143481514 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.163886972 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.147000816 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.157640646 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.209950022 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138671615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.156355009 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.143458955 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.164989696 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136528605 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.15815824 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.140609292 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.155770576 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.138106529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.167784745 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.142722549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.161006368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.14628201 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.160925631 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.143256346 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.161752971 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141139387 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.157437478 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.146265597 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167023544 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.143117292 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.162760712 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.142511418 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.160123853 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.141495158 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.163617245 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.139491551 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.163350452 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138909075 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.15972946 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.143025939 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.164063181 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.143153959 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.15454598 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.140518218 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.160474737 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.140874199 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.162228172 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.143078111 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.15648617 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.135028972 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.160592978 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.138198021 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.161335949 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150363464 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.156116431 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.14489105 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.155808779 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.15097716 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.156096945 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.147803921 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.16262501 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.148351616 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.163771943 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.135226693 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159155784 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.145987279 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.161932812 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.138375837 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.16014739 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.141981952 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.166687537 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135160973 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.163567378 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.136379563 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.157447396 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.148171217 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.161705061 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.145784949 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.156336221 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.174229698 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170729811 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147900931 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.159965803 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.143152212 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.164334654 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.14162604 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.164326832 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.14790554 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.16487767 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.139961094 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.159954628 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148289737 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.157152805 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144652194 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.159173872 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14351846 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.153513725 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.143869413 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.153008215 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.147677998 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.161297955 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.14792775 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.166493867 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143792657 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15970746 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151247585 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.15631045 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.146294511 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.152512271 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147446403 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.173405082 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.151265534 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166517823 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.143918371 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.157597765 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.143602479 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.169454998 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144209539 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.15985706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.144075165 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.153347363 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.137892465 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.16658515 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.145336219 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.156604272 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.151985318 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160892946 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144020479 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.157607822 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.135420223 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.165767588 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147270403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.156210576 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144023483 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.156912272 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.142174295 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171021957 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.142357907 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.161042127 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.14915521 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.16588562 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.144911165 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.160347346 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.146159229 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.167496649 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.145677603 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.163571568 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141917209 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.168082268 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.14156919 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.160070216 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.140284529 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.163231092 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.139374498 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.163254978 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.14310493 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.157746457 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.140730396 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.164880534 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.150003573 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.166594718 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14251973 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.166816395 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.149115819 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.167242566 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.142199367 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.16934451 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.140431615 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.154213326 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.142124288 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.154420266 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.146681083 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.158644266 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.149243978 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.162755823 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142850079 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.166885538 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147203566 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.159369778 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.150440849 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172405024 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.157116418 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.138123011 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159511625 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144838739 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.157595878 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.141038046 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.163991454 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145547 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.165805232 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146687438 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.158652717 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.14480347 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.170240574 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.14258538 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.168757983 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.150669439 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.16977585 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.139830282 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.165931785 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.141406669 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166095353 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.138520478 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.161485969 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143319203 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162373232 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.142834575 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.160891759 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.139860872 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.155625377 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.143363482 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.167697791 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.142791831 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.166833296 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.14373441 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.160874997 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.140687443 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.158717809 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.150678937 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.161207371 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.151586805 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.163670394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.140154834 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.156967936 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.150914652 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16422249 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.15497271 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.161233562 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.149114423 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1710075 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.151648753 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.16697682 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.159398971 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.181091674 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.15861193 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173000072 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.139579203 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.164123175 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149750887 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.163561581 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.149628594 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.166573417 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.140522897 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165400432 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.151757986 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.166010077 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.144067272 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.157152456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.147292194 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.169627366 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.149137331 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.168767132 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.147691756 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.166240344 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.141606485 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.167701563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.151944183 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.163664248 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152520931 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163334807 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.150332525 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.163011302 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.154675605 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.165520699 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.141060746 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.157945644 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.146630518 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.175349742 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.141154962 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.174657336 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.160567415 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.171922351 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.153394507 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.172073767 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.142699431 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165915023 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154138246 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.165373543 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.159665835 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.167138852 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.144473819 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.169247639 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.150476817 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.157968552 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.146029882 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165139645 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154113872 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.164099219 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.150880918 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163890814 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151975541 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.166918083 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.151102106 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.169292408 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.153264253 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.140364218 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.173298364 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167433512 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.149178886 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.161768127 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.144765266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.159354552 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.145156029 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.171775056 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.145091356 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173098898 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.152281934 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.163605162 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.144648352 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.17003084 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145345299 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.171657374 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.144204162 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.166489328 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.141191069 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.166761709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.145370023 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.172846421 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.144333717 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.159302799 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1513469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.170572948 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151013826 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.168967715 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.154134754 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.160206965 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.141235558 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.168329506 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.145371279 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.17527159 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149948397 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.163799041 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145347953 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.168859112 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.148879617 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172477869 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.142700619 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.161785867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.148847629 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.166772325 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.145103857 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.160410552 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.151192481 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.167523189 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.149395255 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.16500548 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.141789888 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.165381366 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.154125885 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.163288153 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.143265914 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.163119067 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153424818 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.16409475 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.143686847 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.160212971 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.153052284 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.167308287 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153565059 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.162584851 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.147247565 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.164363848 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.150289992 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.173243469 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.146085407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.166483531 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.147630505 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.171593609 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152420151 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.158958063 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.145130466 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.177569857 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152674373 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.167545398 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.150967801 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.164834509 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153942411 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173281323 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.150848512 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.160422216 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.142587895 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.166490794 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.142490116 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169912808 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154326818 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.165971804 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.145854301 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171653602 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151861909 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.170803284 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.150141789 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.161602114 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154707663 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.165026223 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.151510049 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.160972146 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.142542847 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.170561424 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153270398 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165687201 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.148440245 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.168512142 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.150772036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.161814013 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.146507806 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.170063875 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.154483402 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.172849075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.147533076 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.166656179 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.151715383 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176547381 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.149220791 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.166837766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156859193 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.173069425 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148526918 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.166923182 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151397535 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.174686739 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.151736963 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.175195533 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.14612808 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.168911982 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.155415714 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.174627793 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.158026451 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1672147 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.144503431 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.173451107 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.147232899 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.162943416 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.152192329 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175797844 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.155928278 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.167454256 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.147200283 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176470975 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153830596 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168886631 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.147560943 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.165736718 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.153621561 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.16466654 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.152053484 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.165866204 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.156807301 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.175527349 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.154610792 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.176251114 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.143810397 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173698275 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.169285214 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.157977561 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.1685171 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.145820638 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.144251793 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.171616376 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.155700666 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.174445507 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.152796176 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.173158961 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.153218367 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.169255392 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149786646 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.166182794 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.156418704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.174430072 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.151440487 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.170719475 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.14989916 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168977563 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.15227495 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.175436276 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.158888362 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.169695322 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.16099708 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.176689229 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.147507445 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.165931576 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149500366 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.172004764 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.152208671 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173386853 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.147910778 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.163202527 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.156387834 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.175124434 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150313458 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177008543 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.157451517 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.168612503 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.153050747 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.180624994 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.154382691 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.170909792 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.152420011 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.171877583 seconds)
  done (took 94.112489657 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.197394865 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178124258 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.153214525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170341843 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170661437 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173179984 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152852888 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.172114275 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.153398906 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180766004 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152862944 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17109599 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168575487 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193211161 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189905714 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.162465422 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17066884 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154025522 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.170164935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.153950094 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186010735 seconds)
  done (took 4.371503038 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.151846684 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151110208 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170685183 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151753237 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.169999342 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.153675897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.170979355 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153118843 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.172453564 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152905268 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.170636015 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153827941 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.171123716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.153672824 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.170735958 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153539636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.152711319 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171523557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.153001999 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.171696834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153456106 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.171303697 seconds)
  done (took 4.343314467 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.174872656 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155565523 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.171600522 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.152560462 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.176863064 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.154599339 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.175945 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153096423 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.181023788 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.149126575 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.162800032 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.148518257 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170477405 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.153809433 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.165611703 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.153632037 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.182893998 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157079542 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.175981667 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.153734284 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.163927061 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.153527624 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.173736478 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.145448314 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.178392937 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.159498216 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.176972994 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.158007174 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.16295487 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.157800304 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.172915564 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.147340524 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.145195977 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.165333315 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.144669863 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.175465679 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156207155 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.172941684 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.153954075 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.16535322 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.155344265 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.176982562 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146677311 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.173287259 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.15490259 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.166427099 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.157746666 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.175438371 seconds)
  done (took 8.608323098 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.184761065 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.208573102 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.15814071 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.202138485 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.188457345 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.164818375 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.179197858 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179247514 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.178838105 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158755803 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.189346704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.188035574 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.158597752 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.180461915 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.160493384 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.177335051 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.160284069 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177430035 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.162693244 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.176425159 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.161351245 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.179427985 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.168562706 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.186731217 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.160392184 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177692428 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.157922596 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.180266778 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.185615364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.163825023 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.181304969 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.164301968 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.188063161 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.160011758 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.176830307 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159830939 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.188993098 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.17796013 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.160023213 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.175430898 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.159823536 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180245407 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.160674063 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.188496386 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.160408806 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.17960182 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.159130082 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.175703488 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.167324629 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.179570321 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.165167861 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.187847351 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180260563 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.160782177 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180779413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.169113684 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.178916676 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.158635746 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.180403528 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.168550763 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.182396029 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.165566096 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.187679872 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.162208895 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.184551541 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187537535 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.160965162 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180430486 seconds)
  done (took 12.734490748 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.188359986 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.182144392 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169579525 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.19061565 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.162977988 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182140899 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163213423 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.181777445 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.182272969 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.169526097 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.186513593 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.293273398 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.16753548 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189578158 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164180026 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.182878004 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163689601 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.184418424 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.164671289 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180945147 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.181917058 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.172035145 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.182319484 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.171599196 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19282452 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.164510445 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184019979 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.163846674 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.191059073 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.182761021 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.17482293 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.188147808 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.168293398 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.193257047 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.195399569 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.163779696 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.180264613 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.163505079 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.183648563 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.164964065 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.180205947 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.171780434 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.187393592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.162073892 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183473122 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.164497664 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.194635785 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.198628192 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.17029484 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.190515079 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.163811683 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19145179 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.4019574 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.18244422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.190724253 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.179626613 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.192975726 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.172956631 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.186423916 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.189661338 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172276796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.198094673 seconds)
  done (took 12.260001778 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.158969447 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.157558584 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.177118892 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157434126 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.178558949 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157609428 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.1787082 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158995358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177514753 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159178482 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.177864029 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157931816 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177652759 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15713332 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.177945114 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157528342 seconds)
  done (took 3.499302181 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.174509272 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.192618978 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.255932267 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.160334216 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.179630804 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.165025664 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.179999635 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.160440165 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.177930588 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.167958091 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.184655954 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.161994552 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.20134823 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.162425892 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.177670638 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.160499391 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.175794212 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160390158 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.177275546 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.257423657 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.162091003 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.182009319 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.158512127 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.182867178 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.158807555 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.182807884 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.167915208 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.178701495 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.161589962 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.178888252 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.160876464 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.184841313 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.158227384 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.182187553 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.159439479 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.179085972 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.159002832 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.180222359 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.161921149 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.181212988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.161187467 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.180557039 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.16017847 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.181190429 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.159189796 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.184285027 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.160603523 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.185045179 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.162344527 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.184557896 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.159693213 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.186071217 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.163652235 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.188190063 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.167539391 seconds)
  done (took 10.476741421 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.172343703 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.18130015 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.174359952 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.180065287 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.161489251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.182997782 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.16435428 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.182885337 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16007294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.178266594 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161755277 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.182572448 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.162502229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.182594239 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162340965 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.182776105 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158810698 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.181063109 seconds)
  done (took 3.95624255 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159608635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.160023771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.182252924 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161702895 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.182639287 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.159171707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.184837751 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.160878698 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179838652 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157796952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178737254 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.15819826 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.181041807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159532857 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.180805324 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159750902 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.161455448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.181824099 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.161830216 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.181866144 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157893891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178826232 seconds)
  done (took 4.572937033 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170561284 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.282247135 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188555542 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.29196087 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.156857237 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.17837855 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.166493309 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179425191 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.193818851 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.158284164 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.17840502 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.15894633 seconds)
  done (took 3.151711611 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188230919 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218378468 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.160538361 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182981788 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169988376 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188143688 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165389677 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185466531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173129278 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196855899 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186184291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171717368 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19546075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173789768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191464571 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191455282 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165472649 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185138348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162329371 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202792199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165685525 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19574228 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165426414 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187191332 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165972852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194572578 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194767365 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176247482 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189315275 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174251278 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193424876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185308341 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173732847 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197935505 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161749619 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194396019 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165407627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20187658 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191118508 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174088129 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.182880239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170979354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194361098 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170982288 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195965283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186508284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17152663 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188509586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167507335 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208477 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171017417 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194467048 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193694044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175089514 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196683251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187457567 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197585321 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194337562 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170209773 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197911689 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197230946 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174271882 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195443639 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177510282 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192075403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17480051 seconds)
  done (took 12.985596144 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198398414 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18409003 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166334001 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198119468 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175021698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18731111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166565735 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186793237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187775764 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164330743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.229481696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166695848 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19661781 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196280407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167864852 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187272627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167634935 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197532731 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163136597 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208388371 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167222941 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195978972 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195514457 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175901768 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199076782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171377589 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188184335 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187754951 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168039805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188129021 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17234524 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188036551 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175129672 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185609846 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175046351 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189445041 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166715475 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194427238 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189097789 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171728053 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197261258 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183896779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188597238 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168330833 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199644382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188927656 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1669419 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185270976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167361785 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18588111 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177748651 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199964745 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19972449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17495479 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189674819 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166866471 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190380634 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167380013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189381625 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173116148 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1982023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189359066 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186147764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.18926045 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166912497 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198051721 seconds)
  done (took 12.994517599 seconds)
done (took 228.939197232 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.319928533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.351654285 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153915033 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.413377218 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.152986145 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.908670649 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.860185503 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.257433365 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.154060233 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.175767743 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.153473358 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.195259956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.531757845 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.174742054 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.153321243 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.192825638 seconds)
  done (took 32.010777349 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.354561149 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.402226289 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.192252241 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.15713332 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.181814741 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.15995414 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.17959295 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.161358508 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.180286404 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.165744191 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.179426379 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.156434138 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.185112436 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.155088507 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.181238969 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.158970914 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.185252189 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.158706564 seconds)
  done (took 4.371201604 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.176130429 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.220772907 seconds)
  done (took 1.276599629 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.188686355 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.27553434 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381626392 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.228350965 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179392784 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200204999 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.229110699 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172531926 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270439767 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.19436508 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.172956212 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.182726937 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.186804132 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.187456729 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.180122975 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.181370969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186876697 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.195885734 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.178539254 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.187976557 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.207990695 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.165026223 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.188749002 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.177466911 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.263042388 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.191388933 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.161790128 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.180159852 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.161900965 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.194731677 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.167254229 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.196852896 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.171065818 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238411882 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.184427154 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.234845087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.164451569 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.182876118 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.172593317 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.182018398 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.1621364 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.184326442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.189625091 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.15803979 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.157483225 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.184786487 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.158382082 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.179897597 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.189974018 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.162245493 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.190337263 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.165175684 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235493704 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.185707763 seconds)
  done (took 11.325297721 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.992661986 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.207046162 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182020633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.146555858 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.202998579 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172777488 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.983518085 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.19009645 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.314617103 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.083525077 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.203220047 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.168022833 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.327999531 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.341992791 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.343353369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418411936 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.844545036 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194045067 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19238466 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.228002388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188553936 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177730352 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.19892781 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518351251 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.161533739 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.18233394 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.165397988 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.189824349 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239326174 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.161642274 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.186442214 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.260827022 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.360580211 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.273876168 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.182220728 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160717505 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181995979 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.249634817 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334858713 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280163839 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.251941954 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179498594 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.159949949 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.186011434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.175626593 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.179677388 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243655426 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25517351 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.253654114 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.165385766 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.191366932 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.16845557 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.185703084 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.244052124 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.158519809 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.446030044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.426795544 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.182787141 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166216737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.193731619 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328696757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.183577744 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299422923 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203769139 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27704822 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.159581815 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.893226576 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.247488175 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160071193 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.187100468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166535423 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187355669 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165360274 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245086753 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.495306561 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167420452 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.186709358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.159997022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289221625 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.184157008 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.160928635 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.241539793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.185033306 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.167244801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.191477282 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189127891 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.251426735 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.336539514 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168288858 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188282323 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.16651496 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193622457 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.161411308 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.293308038 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316424176 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.240812816 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294609811 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167018655 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.245239496 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.248679388 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187620995 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252587986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.165794966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195158476 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164986204 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.311482696 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.198949881 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185510671 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.16720108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.189012304 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.225062838 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.166556166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189735231 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.25089629 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556395684 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.249633211 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.158432158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187448697 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168612852 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.241696098 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.192253568 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325922661 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19121426 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.250068113 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167405437 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.181345617 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168104198 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.246297102 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192262927 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168814414 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.186710265 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.171519088 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.341823636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.305606809 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.170219621 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310802652 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.258602229 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.189698913 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258373219 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16999103 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250383307 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193583485 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165955321 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.184259395 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.876169379 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.194212965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.167186973 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.190116145 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.268760574 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.161651841 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.186747351 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161135714 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.181092861 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.867252253 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.166208916 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.181307902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.165075391 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.189067199 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.167362135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188902932 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.167914439 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244112258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.329832027 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.171162758 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188694038 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.162605454 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.241753648 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.186918183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.163928737 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184667128 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.164109696 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.192165079 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.167767912 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.186970145 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252619554 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.242872994 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.296922465 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.652386941 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.16312235 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185245274 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307737388 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.162141918 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.411063306 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168903881 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.322250057 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246600843 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160488984 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.446495117 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248750487 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.247426296 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.189063218 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.257297943 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160558197 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19052367 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.245043102 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.163169353 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192752096 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.242790651 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.17225298 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.192305321 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.328907189 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186007243 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313539871 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.160522228 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.254563237 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186816983 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.168196249 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.415311472 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.16355802 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197300718 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.243634544 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1678263 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185772297 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.03227212 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.163541956 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195380921 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.167218192 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.321859714 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.245668112 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.169837519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.191342419 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.194325061 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.244748582 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.269652307 seconds)
  done (took 61.707212979 seconds)
done (took 111.560975668 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315455339 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226141047 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.41581845 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232534319 seconds)
  done (took 2.165836033 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.337372371 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.202786472 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.297597341 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184795148 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.301643247 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.159032444 seconds)
  done (took 2.41209102 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231840096 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2259288 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226548082 seconds)
  done (took 1.619693328 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267441342 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.264184922 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.409546633 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324609156 seconds)
  done (took 2.261513214 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.331686103 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.178448111 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.21599269 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.286121091 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.30338872 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.267765336 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.209826333 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212717762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214617934 seconds)
  done (took 3.183058334 seconds)
done (took 12.577984463 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.2008335 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.215402601 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.184235859 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.200500497 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.194711493 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.216862074 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191928247 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.212743884 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.190354514 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.197872299 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.190507256 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.194992533 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.302555304 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.192465257 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.196956261 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.213222505 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.173345996 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.221267034 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.192270749 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.195854306 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.193079092 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.195290756 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.174070809 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.20221049 seconds)
  done (took 5.770255073 seconds)
done (took 6.705857079 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.304306714 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.151164265 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172332878 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.197168438 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.287265092 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179904861 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.212994474 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173724326 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.205025164 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172977722 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.184053084 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186750075 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.196100146 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.301646669 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.218219998 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.165761372 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.186978525 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.183961242 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.211111413 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.189985193 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.288093689 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.189200806 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183861649 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.187265154 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.287646006 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165386604 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.195928547 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173515012 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.209533559 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.172531367 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.195278324 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.164480414 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.211529622 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.189546031 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185364843 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.174068783 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.18691071 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.132643054 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.17292185 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.197570515 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.187518539 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.196039733 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.172765755 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.188328208 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.198085036 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.172991901 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163953461 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.199299436 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.185587776 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.175606619 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189036748 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.190419955 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.195249201 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.163842972 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.186218792 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166107715 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.206516834 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165202852 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.210249292 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165077067 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.187596272 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16493983 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.197483563 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164053334 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.173756453 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.186450875 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.196897804 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175265025 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.195224267 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166828896 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164360845 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.195091428 seconds)
done (took 14.738068228 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.167878401 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.231643214 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.302912821 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.308618994 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.215839458 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.180876074 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.211977375 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.187663529 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.200060357 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.181770671 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.22558113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197398287 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.330201557 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.180696023 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.205319406 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.177691451 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.200949297 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.172213869 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.30252164 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21449229 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187925992 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.204406999 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.215672119 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.182732595 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.192236667 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.193520839 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.196173759 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178684454 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.192408616 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.187226742 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.212635559 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169196306 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.194119238 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.187046272 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.210284422 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.203369996 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.180976855 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.201714128 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.16966117 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.193290432 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.175862867 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.208597616 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.170134484 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.205093259 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.179545737 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.207413876 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.177229381 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.203098732 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.172103241 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.198619182 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.170272072 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.21585615 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.181563312 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.211358372 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.205599609 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.181342963 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.204718072 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182754874 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.196057404 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182788957 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.19359452 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.169814262 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.194458737 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.190499923 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.196242972 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.182347559 seconds)
  done (took 14.154572939 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.188387714 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.224764336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.179775095 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.205663374 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176530969 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.188292869 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164016947 seconds)
  done (took 2.29549002 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.165004712 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.322905518 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.311989465 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.310810963 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.329099531 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.319378253 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188518386 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.191400596 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201459348 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.200558884 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.322064698 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.4048086 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.176234422 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.205529488 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.316204316 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.16702501 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.315478316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.29705677 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.205747532 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.316492691 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.206710015 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.200341677 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.20531766 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.176224504 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.319271676 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.19641108 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.364935304 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210530822 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175565831 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.205134047 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.180638264 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.268391323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.315712284 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.207439159 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.174266225 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.309907357 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.30681667 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.207490701 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.361763881 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.196959054 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.305146276 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.205357749 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.181708442 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.206035628 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.18104495 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.299891348 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.210226733 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.180892835 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.205521736 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.327689157 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.202313855 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.317079428 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.177849781 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.204268783 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176942822 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.20623272 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188326183 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.205441348 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.328248376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18389636 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.33518131 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.315568691 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.309058156 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.314889973 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.214956385 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.319217479 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.296005378 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.179027095 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.311097242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.208356523 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.316621199 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179914709 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.203278574 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.305016301 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209750904 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.316452741 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.317485624 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178609305 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.20409851 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.170317818 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.204315787 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167683125 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.329373519 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180747915 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.203480764 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185473237 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207030237 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.181937242 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.307807439 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.216199211 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182529496 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.204149425 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.213174664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1821497 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207749323 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.320267682 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.179057057 seconds)
  done (took 24.403278099 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170339747 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.16827496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.198390451 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.193201734 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.169526795 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.169230319 seconds)
  done (took 2.074196866 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206696047 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.207085622 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191865321 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.205769882 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.229922394 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.305243564 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.315281014 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.202553131 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.22868341 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.194545969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.311540734 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.312396081 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.312491763 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.211419832 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.314844227 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.205014478 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.31558196 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.20710832 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191599085 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204622739 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182392956 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.211085851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.203070446 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.302012148 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.184185713 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.209843723 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.176753762 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.219523446 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.190767835 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.200942522 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.187502685 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.207848987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175060879 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.201029823 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.317648634 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.200292929 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178758416 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.211027673 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.18614497 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.207338796 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.335162104 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.181827033 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.21421055 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.187563376 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.204259564 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.176906924 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.210714505 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177099615 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.315292538 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.213164118 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.212166505 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.183981566 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.209934308 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.187097116 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.200805074 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178053299 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.210749146 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.319650634 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186836468 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.201850878 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.184110354 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.209847006 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.178198569 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.212188296 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.208645876 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.18608323 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.199582643 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.185072278 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204791545 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185019966 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.211162258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184286912 seconds)
  done (took 16.689098034 seconds)
done (took 60.572709771 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.818658574 seconds)
  done (took 2.82364601 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.185740589 seconds)
  done (took 2.194768343 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.795247985 seconds)
  done (took 17.834800571 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.475863725 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.409663548 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.073625564 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.237543127 seconds)
  done (took 3.207851153 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.13579129 seconds)
  done (took 2.158521206 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.458759246 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.339389457 seconds)
  done (took 1.814829456 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777067042 seconds)
  done (took 1.803702412 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.835054024 seconds)
  done (took 2.851641748 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.357452159 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.282696564 seconds)
  done (took 1.66738417 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.707232533 seconds)
  done (took 1.74010026 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.007109284 seconds)
  done (took 14.040970014 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.314981605 seconds)
  done (took 1.351532831 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.355786095 seconds)
  done (took 1.395192992 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.452020051 seconds)
  done (took 4.491707361 seconds)
done (took 60.396568867 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.182603737 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.210638587 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.186287027 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.209730371 seconds)
  done (took 1.815081513 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.185918125 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.208443546 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.186533985 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.206224618 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.187792736 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.207436294 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.180745121 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212943559 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.182280372 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.208687571 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.182722398 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.206791241 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.185133249 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.206946079 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.180884734 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.208924403 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.185728646 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.207351019 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.183899363 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.208424828 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.183928837 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.210523209 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.186305605 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.211885603 seconds)
  done (took 5.751588033 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.178421641 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174977139 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.201430853 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.174070809 seconds)
  done (took 1.769010221 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.194075657 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.222066716 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19498995 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.217130334 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.198283944 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.21985603 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182265915 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.205497221 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183798093 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.219318951 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200244249 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.221998202 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.19678529 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.212182639 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.194883092 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.201414021 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.187433891 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.220122266 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.217133547 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.193558552 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.210985559 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.192209708 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.208345978 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.194125314 seconds)
  done (took 5.935659975 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.257763923 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.221135872 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.208942702 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.252527644 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.236312942 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.181084829 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.236588675 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.187121002 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.214098594 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.191053556 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.20806312 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.228946153 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.213771528 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.185509135 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.208558365 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.214217255 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.192294844 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.211940499 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.225256718 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.211911585 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.188198652 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.220267187 seconds)
  done (took 5.744524845 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.329871138 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.174741913 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.199367741 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.172579837 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.214494804 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.17771373 seconds)
  done (took 2.32352061 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.17223999 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.170315233 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.193825486 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169465405 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.197352122 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170900364 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.192664933 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169597405 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.194084038 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170006185 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.193180222 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.168263786 seconds)
  done (took 3.220616742 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295866185 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185912957 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.346746608 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.456440515 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254316628 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252105802 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.370077298 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224074374 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.268253247 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228710718 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277043051 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227633835 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244482696 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281273268 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208807209 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.239059799 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265135322 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305220168 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209972302 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307670899 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249187624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270865101 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.284337065 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215367052 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230719912 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255297409 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.18788304 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218478481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258311899 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229125296 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267966967 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2415238 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232948058 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251166018 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323619505 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27064559 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.383140482 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198789036 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.249204665 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.284523961 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325360159 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23457124 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282792246 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218181655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222426748 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285983085 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214502067 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.278698499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.226965035 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210998619 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276907908 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27258166 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265265855 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203771443 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389760109 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223947542 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.235404167 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24440175 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281839681 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298038738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273992454 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.215863973 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261100801 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258164882 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307861426 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.234706592 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.258252603 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192907213 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256217568 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302031774 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277745794 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253010456 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285474221 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198486902 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268839983 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259801125 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220544107 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302490491 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266930453 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.186703142 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244269191 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229422819 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193492273 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.28361302 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18854325 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311367389 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225908336 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.266760249 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243617781 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24471813 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256063218 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255829111 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228108547 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241056841 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.153849033 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23648063 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.252418761 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223803879 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222117073 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244074264 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205771558 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.219963097 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21984311 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.216838188 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265157252 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.188020628 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253645662 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266139221 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.198147335 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275758251 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241579743 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.229619004 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261780496 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292964838 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226712908 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198969436 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316020703 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267083614 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.205170504 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263869309 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.293056261 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.231619677 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202731297 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26041866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288059676 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239342168 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267617761 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234666713 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232240775 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.191234164 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26940912 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255114495 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.22630748 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221538787 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.263269652 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281485796 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.193385277 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234172097 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277927941 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199414744 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219333758 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203999685 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229776426 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.237559609 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.217602253 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.234384973 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221552056 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260703543 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261518941 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252196875 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200320097 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267780002 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226224788 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.237026091 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241664111 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.214093915 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.240226777 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295387353 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226923619 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275800506 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.226005626 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272843774 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266813468 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224035263 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248563452 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22130845 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.18917266 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257227962 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267453773 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26070508 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.285935104 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273508803 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.229410877 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.260325702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244046607 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26495164 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.252762101 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252644768 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.235656503 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269099024 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237351691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.215897426 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.191183809 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.222162888 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205459577 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225741276 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234553291 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277026988 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233052402 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269457939 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.263196528 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234776154 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264670458 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.219786958 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255635581 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.271651793 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206181526 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.287270679 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288477187 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2772766 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207186612 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259792255 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.216496245 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1934892 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.22999063 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226168635 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232597176 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231702998 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209617997 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290269663 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264707824 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217705617 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308152245 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231258039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.300270656 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.217629351 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.228324915 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261357607 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266988631 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.254897847 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223934273 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.257179981 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263161328 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237537469 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289090324 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264633024 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278146683 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261925557 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.262290477 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226235194 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211612874 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254402113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23482651 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227126997 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238522231 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198749296 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242168505 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.233604915 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207648822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282360068 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239709253 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2722518 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.221486545 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264472668 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222101708 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212871972 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270843939 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241308688 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.158391022 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261223163 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288680006 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24685262 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219112989 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265376833 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227039346 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.384994209 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273595826 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267759119 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203726814 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234133545 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272038923 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252700081 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227289099 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.279794099 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23917385 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306270372 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239135298 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.236245894 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200139976 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244377166 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246891312 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.192731353 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.249569655 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.262141576 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.211785032 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283414741 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2336647 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27152126 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247178919 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.241962822 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.245989242 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208342975 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327373474 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26998552 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269507317 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.26433075 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.232696909 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278756956 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221615612 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195816661 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.230950529 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.252521148 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227520064 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278102125 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.258547263 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273672022 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244045699 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256906762 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238424732 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196436712 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266688383 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246727814 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27639674 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20252771 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.234265335 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283285605 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.181414829 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228039543 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228626978 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389439327 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2448722 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265460084 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.161736489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.381177452 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197925239 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228801861 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255911383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239336859 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.231589855 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.277009109 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244051984 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238035508 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257225518 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204137272 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273135501 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276797559 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26534736 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27396347 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.214962252 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260234001 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256428419 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268488821 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214409947 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.24460848 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228521797 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292486496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.272646822 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.230180598 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240139127 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270825221 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269869095 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271018403 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207725367 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280377344 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197549423 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263652452 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236927964 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194867029 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257368971 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.261759474 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226480337 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241837736 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271077558 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229891385 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196772997 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245420524 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266294338 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209914682 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.227938134 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283506722 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.199222261 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283513008 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312422411 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198557372 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.265785545 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240671806 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201050636 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236024427 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242097476 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20174863 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.268626548 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246229217 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.228187188 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271262987 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265560446 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233866681 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252480571 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240737876 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.3374346 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.226543822 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294771354 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219591612 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298381659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246710493 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277088449 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240987699 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249307052 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264223824 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218013617 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.320359593 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26497776 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.265588452 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202508852 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241190518 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20854279 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.232072249 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220952609 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268770701 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240606295 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.20739446 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.268025633 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243217381 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.216468449 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239899362 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301073761 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221664082 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285480577 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.285199675 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237481945 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276497731 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244130766 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230260496 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.265314256 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271207113 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212958715 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252214125 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.204968104 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.234546796 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315121637 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.196375252 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259150064 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275162225 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270697202 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245652049 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.232343163 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279333286 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212783065 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278034449 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22668148 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.221528729 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26962451 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204780441 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.2257704 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274097496 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259909448 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.238736434 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240181311 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.248273611 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291849962 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.223643244 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204489063 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384183003 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259628686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29404263 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.188265561 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236182618 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218589459 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260164718 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.265841277 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244381845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.229361639 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228667486 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.214813978 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.240514803 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.194007771 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272612739 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280521287 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227877302 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283631808 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.233426401 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.356456572 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213337953 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2724586 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.172942103 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.227322553 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212591839 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233235944 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243649839 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274710841 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289500711 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.264743792 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.24737161 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20797519 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.22493007 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202920637 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259108019 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250999516 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239363958 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245837756 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.159075187 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240366879 seconds)
  done (took 120.411657309 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23692985 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.227610718 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.24246554 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.29939757 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272029635 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.367781615 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.304208936 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.320118082 seconds)
  done (took 3.447165383 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.188326672 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.235080522 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.24544895 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189028158 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.208827603 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.556125398 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.236213418 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.218609852 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.230473303 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.221339599 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.20698945 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.633638537 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.217661268 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.217130195 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.216536963 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.179400397 seconds)
  done (took 5.370089381 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.273034372 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.702729656 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.052979432 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.401863602 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.376479998 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.293953162 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.911750579 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.306103241 seconds)
  done (took 13.498763636 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.241166911 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.272102828 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.468021667 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.436137165 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.285748138 seconds)
  done (took 2.879895063 seconds)
done (took 173.194038785 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.19326019 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.224681574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.194821912 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.227426616 seconds)
  done (took 2.008682598 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.246391947 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.148981096 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.181177299 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.146000131 seconds)
  done (took 1.900024717 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.45849783 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.148447997 seconds)
  done (took 1.811508433 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.214163896 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.232520909 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.205803685 seconds)
  done (took 1.845094059 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.206271203 seconds)
  done (took 1.395506091 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.190479599 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190838513 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.37359255 seconds)
  done (took 1.944853043 seconds)
done (took 12.087433325 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.211691724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.029191421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.648678089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.203508282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.818083152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.46998742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.526931532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.24741128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.302658669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.181701458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.24345086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.760706721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.511936119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.949603927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.493701329 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.947454421 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.794034074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18204815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.217134804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184438399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.508820151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180497325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.212257299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184239769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.790726041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.488520573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.212901165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.961360449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.209438155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191695396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.500384441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182766398 seconds)
  done (took 23.726972683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.184073757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.269984332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237650751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.213951788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191139111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.213234448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193747333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.224321822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31194749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.18560391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.234389443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18281808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.218361497 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.183888049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.235217132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183123566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.213727947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.183978494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218652666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185144493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.233148713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181787154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.214026588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183669865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.211572366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.201499436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211322823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.225303441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.184323649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.222521174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.188151231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.213307014 seconds)
  done (took 7.93701315 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.222040805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.279434486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238234345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.250104919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.265249023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.184058531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.300131043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.24958509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.287415041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.212397331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205117843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.212182848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.254165212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.183769249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.237643767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183002391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.215756138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184517947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.219600202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184025427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.234333081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182076924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.214801338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18406803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.213152385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203783386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.212120689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196185073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.211525362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193624692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.217446087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18484704 seconds)
  done (took 8.21191389 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.19736609 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.228314439 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.206915139 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.237586149 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.19338821 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.227209201 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.19815802 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.225286959 seconds)
  done (took 2.924307064 seconds)
done (took 43.988856895 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.203427475 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.23180336 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205119939 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.228729087 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.341677388 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.189454958 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.232233582 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.19012306 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.230546985 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.203682535 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.213496772 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.19129304 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.203652294 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.22369353 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.342283331 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.231489773 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.3481141 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.343658436 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.191902825 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.22922894 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193706127 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.348993891 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.228735791 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.192881022 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.321854685 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.219242825 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.335092333 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.195133124 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.225933829 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.184079694 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.344757318 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.225883753 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192140146 seconds)
  done (took 9.177879743 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.293495982 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.22496499 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.192557098 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.222755492 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194905372 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.22270346 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.328381145 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.192504438 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.222471517 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.194227283 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.223780063 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.312427788 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.197272991 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.220304621 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.194981918 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.16871482 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.330005094 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.226109968 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.18456523 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.152250716 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.219979859 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.192927327 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.340951737 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.220261948 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.193530197 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.223711339 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.194121473 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.229214413 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.194736495 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.223290266 seconds)
  done (took 7.957955617 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.197684496 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.234882313 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.212371629 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.289143822 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.22271212 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.235357862 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.209493261 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.236077018 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.215721706 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.217729154 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203635672 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.252426933 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204959164 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.227881981 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187012957 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.233129437 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.714107709 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.218395789 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.195814845 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235335723 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.208064099 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.23497583 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.240700161 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.198152922 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.21764297 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.194760661 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.228636547 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.198177925 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.227009734 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.202049577 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.221535504 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.189127681 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.220607802 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.221467129 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.22040212 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.202792827 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.23946872 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.202055722 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.232144814 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.220471122 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.221441427 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.190606361 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.244729864 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.244632995 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.221178615 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.199046192 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.22041071 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.20375084 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.216903351 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207130948 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.261091372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.193978438 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.239163863 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.219086101 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.186665009 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.229874903 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.18784791 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.19236727 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.231896528 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.189665878 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.238658212 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.197738902 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.230365188 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.191657403 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.229525626 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.188231967 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.217728665 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1937048 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.243982702 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.197298344 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.255236088 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.188615186 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.230841785 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.233346433 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.199409646 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.232792522 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.187054932 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.200882947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.228298026 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.224004883 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.200984637 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.224710419 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.190282158 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.205740967 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.240446848 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.235641697 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.199999805 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.231773538 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.190353745 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.222122101 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205116587 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.222519149 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191423993 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.23309745 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.188474526 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.224498939 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.199906846 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.229239557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.186951427 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.247502354 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.1925476 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.221086774 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.213535395 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.225794425 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.192376488 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.231003119 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.229293543 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.221100602 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.199120293 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.23235343 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.190176907 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.228445181 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.19066391 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.22116297 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206306542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.237165354 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.195912204 seconds)
  done (took 27.001935442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.438377673 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.432989698 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.289510419 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.513141231 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203466656 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.386092323 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.431536231 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.435544562 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.222008539 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.224267206 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.278554417 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.433385418 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.190117612 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.249658074 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.436627381 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.516197975 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219625555 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.260182737 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.256305638 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204115761 seconds)
  done (took 7.870007004 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.197014858 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.254563516 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.210893997 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.237618205 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.200025855 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.238174491 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191085473 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.24295387 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.200531227 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.227378147 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.193460006 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.226742172 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204255094 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.235281107 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.205339869 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.237648028 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.19812268 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.224786057 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.212730962 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.225900724 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.163373429 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.245403973 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.199260744 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.241282918 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.207213012 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.229969257 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.189472628 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.224585124 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.198111925 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.229183195 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.193401549 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.227807879 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.196737728 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.166608198 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.233065671 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.205401539 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.226162839 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.195453067 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.225113473 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194395041 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.235252541 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.203377049 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.228115879 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.160768349 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.240836562 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.171902027 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.204176103 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.233165545 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.168101684 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.241938797 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.20180618 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.234582275 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.198889049 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.242575819 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.197267963 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.237645933 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.201863449 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.234366186 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.195916883 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.220175205 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.18934 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.224176482 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.199990586 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.236035183 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.202847792 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.229506909 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.198805728 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.220770882 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.19452313 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.223744794 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.19242433 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.235131647 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.210788886 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.230439779 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198674078 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.231997938 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.19836049 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.15756438 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.230058515 seconds)
  done (took 18.082056664 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.214290519 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.232158992 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.206471228 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256022292 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.202861202 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.229183614 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.201068376 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.241609496 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.205888472 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.241016263 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.20619759 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.237214803 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.213157483 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.233103176 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.201428967 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.23809578 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.20296771 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.260892324 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.203312587 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.249509033 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.20582792 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.22783833 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205000231 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.235375882 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220873059 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.233629081 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.249850767 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.203365805 seconds)
  done (took 7.529880301 seconds)
done (took 78.821717135 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.434275685 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.650920693 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.353412679 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.35867054 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.348525116 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.372036975 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.356067276 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.355347143 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.7045801 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.331016116 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.351035351 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.350600659 seconds)
done (took 30.274181376 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.845724027 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.153658507 seconds)
    (2/2) benchmarking "String"...
    done (took 2.16778677 seconds)
  done (took 5.588296739 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.152161877 seconds)
    (2/2) benchmarking "String"...
    done (took 2.173090517 seconds)
  done (took 5.581183124 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.348347231 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.343481807 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.539094461 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.34380154 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.344896094 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.343831921 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.349885694 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.354993956 seconds)
  done (took 16.874931163 seconds)
done (took 34.493993546 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.397308205 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.587040224 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.590147323 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.3276263 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.351830215 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.366654447 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.347164468 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.376860004 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.353811892 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.328112605 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.827811483 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.616133308 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.363312891 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.736427517 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.331126395 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.349411123 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.368382041 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.609566621 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.351203949 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.385283073 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.328802566 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.330919525 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.351730621 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.357123347 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.355783931 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.352693942 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.384470609 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.34603297 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.605900373 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.350495758 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.387601314 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.34954396 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.378796354 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.350236786 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.354137841 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.360360699 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.637934824 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.356572648 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.330293887 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.348181078 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.632697217 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.357894185 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.346805344 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.345907465 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.335164758 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.332799374 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.33265145 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.523080205 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.37169168 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.353885784 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.37248801 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.744430769 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.361685868 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.360717798 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.3518592 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.634331992 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.370663266 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.429655964 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.377188608 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.357639334 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.349944222 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.346917439 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.362004554 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.358139258 seconds)
  done (took 153.550427611 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.347692468 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.352093028 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.352028494 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.356706603 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.352978336 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.354003397 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34938598 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.348236882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.353091549 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.382217459 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.352890196 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.34809245 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.352009079 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.361011621 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.357947753 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.37424815 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.353222571 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.355244616 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.358330902 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.348010386 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.360604656 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.352935734 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.349028532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.348245332 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.356393924 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.439230506 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.394956649 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.35964748 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.368410396 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.349253142 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.351129777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.358733537 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.063618495 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.314645808 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.359984954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.384907257 seconds)
  done (took 85.881706328 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.349142513 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.350470336 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.349715491 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.383014209 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.349536209 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.94154997 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.946879418 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.415678 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.630292582 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.821776358 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638347587 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.355304749 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.44262549 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.363499367 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.350933593 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.352985669 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.445404196 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.379164767 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.350542831 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.350571256 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.944269729 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.367792231 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.38716334 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.528464548 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.350489123 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383658494 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.749179697 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.349999047 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384673847 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.685270871 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.385144438 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.350964113 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.703030881 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.775795372 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.468914378 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.353999416 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385208831 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.352502298 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.63634356 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.351861993 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.353335434 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.355604369 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.997329898 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.357045823 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.947634822 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.355903219 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.350197676 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.357203525 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.352091701 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.007302256 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.098396661 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.356430311 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.35240913 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.356474032 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.354020228 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.352160984 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.353380064 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.387163898 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.90162995 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.357612166 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.25417918 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.354726045 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.356951537 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.387632324 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.352679974 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.511423486 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.353256584 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.39720086 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.40718495 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.49565926 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.939688839 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.356711562 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.448335295 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.473093052 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.354374743 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.35320546 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.352586387 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.354185404 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.465985444 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.354564501 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.151269097 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.354926908 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.533035242 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.354743504 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.818162212 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.455803144 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.35415125 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.730422423 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.35724096 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.35521654 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.124339765 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452315061 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.354514007 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.354730723 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.354816768 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.151128017 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.952529648 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.664784468 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.359694205 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.486799963 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.35926922 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.300723926 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.940025893 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.029572476 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.359252178 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.467987444 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.533772835 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.357532407 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.356145917 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.828702379 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.360764033 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.415920069 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.355735111 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.757746498 seconds)
  done (took 396.498959619 seconds)
done (took 637.186187869 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.340100651 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.340223082 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.359133867 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.34403076 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.340728314 seconds)
  done (took 12.988445808 seconds)
done (took 14.253399752 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.35680948 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.359332077 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.376761598 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.179322664 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.362752904 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.360694121 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.363816237 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.369246606 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.362632986 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.361994496 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.196654407 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.358440763 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.376380823 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.338721146 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.196094838 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.369101476 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.296156306 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.376345553 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.366777158 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.715010547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.370127444 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.491784395 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.706309161 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.43388192 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.714776579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.769410761 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.367890358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.607294964 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.411274716 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.409668785 seconds)
  done (took 20.264638263 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.265410566 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.718095367 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.369043367 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.491398592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.702932685 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.434521946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.746521887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.771912965 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.370277393 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.61316254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.41153271 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.410675408 seconds)
  done (took 20.309045655 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.137806071 seconds)
done (took 90.572258807 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.418209467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.488728769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.402207292 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.401716098 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.397419183 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.398147907 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.401421647 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.40333921 seconds)
  done (took 12.578532927 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.402340828 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.402259533 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.40236227 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.403308759 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.400510148 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.406761223 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.401617203 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.402400053 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.404418187 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.401961241 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.402022073 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.40263912 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.40195328 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.402521717 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.403409819 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.402387342 seconds)
  done (took 23.712025182 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.405022175 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.40252032 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.402005171 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.402420727 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.403245483 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.402373654 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.403343819 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.402262606 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.402596797 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.402204289 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.40352792 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.402650714 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.403072207 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.402706867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.402772587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.404508493 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.402611742 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.403300238 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.404997521 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.403826701 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.403848003 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.403243806 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.403552156 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.404199095 seconds)
  done (took 34.947607724 seconds)
done (took 72.506430882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.378121757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.376053547 seconds)
  done (took 6.023802189 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.498739889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.501035153 seconds)
  done (took 4.270672339 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.404373349 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.404381451 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.404129254 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.40400319 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.40365601 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.406034315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.406075102 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.403936632 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.405327452 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.404800639 seconds)
  done (took 15.317265275 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.405042848 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.404486632 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.403430213 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.404053407 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.404530353 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.405188607 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.405057863 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.403810568 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.403460035 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.405259915 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.403308759 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.404460023 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.406068886 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.404642099 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.404686309 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.405153337 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.40492782 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.405230023 seconds)
  done (took 26.553810579 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.427402256 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.432859234 seconds)
  done (took 4.132739646 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.589231913 seconds)
    (2/7) benchmarking "second"...
    done (took 1.487387328 seconds)
    (3/7) benchmarking "month"...
    done (took 1.572365173 seconds)
    (4/7) benchmarking "year"...
    done (took 1.558710993 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.487006134 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.435966055 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.487269436 seconds)
  done (took 11.888621521 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.401827425 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.737924005 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.928715028 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.616606903 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.393204471 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.415102158 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.349123027 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.419887683 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.420505149 seconds)
  done (took 15.954587731 seconds)
done (took 85.411058698 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.365101735 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.429729925 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.383576292 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.384381421 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.761999273 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.39893432 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.370820409 seconds)
done (took 17.369252892 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.349628469 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.353365676 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.35796242 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.378871154 seconds)
  done (took 10.714810173 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.365278224 seconds)
    (2/2) benchmarking "read"...
    done (took 1.785857335 seconds)
  done (took 5.425352275 seconds)
done (took 17.414199041 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.410057591 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.409133033 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.407815337 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.40859735 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.408387757 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.407915909 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.40782756 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.407193331 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.408473312 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.408233827 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.408366874 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.40835996 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.408995655 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.407833636 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40959196 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.409848627 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.410797001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.408120963 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409846532 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.408696245 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.41048076 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408414366 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.409650836 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.410211382 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.409742607 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.409751687 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.410807198 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.408582684 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41034897 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.410186449 seconds)
  done (took 43.546639207 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.410486767 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.409904011 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.409741769 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.40956102 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.409065287 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.409754131 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.409907433 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.410270119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.409683592 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.410741408 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.408925395 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.411082303 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.411068125 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.40979883 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.410715776 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.411371306 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.410893802 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.410295611 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.410477687 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.412422976 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.40886142 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.411526284 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.410746157 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.411794405 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.410110252 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.409647414 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.411686081 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.410393319 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.413809885 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.411163738 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.416994926 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.410303224 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.411153262 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.411872627 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.410978589 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.412682926 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.41396633 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.412147453 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.411469574 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.410855668 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.410995141 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.413300393 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.411754386 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.411334011 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.413640031 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.413518507 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.411953433 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.410860208 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.412448259 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.412435687 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.411819268 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.412031097 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.412898945 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.413201008 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.412798513 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.41585784 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.411980672 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.417836234 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.414041129 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.417668336 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.412313535 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.412186355 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.41607833 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.413500557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.413099738 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.414018989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.412888329 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.420643854 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.414210075 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.415236113 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.412991345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.413475973 seconds)
  done (took 102.95058052 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.413365764 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413568932 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.413479885 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.413170697 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.413967307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.414176621 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.413365764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413975548 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41470958 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.414257148 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.414464437 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.4136885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414099028 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414145263 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.415147066 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.413540856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.414511301 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.413483656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.414717053 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.415139803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415156983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.414628983 seconds)
  done (took 32.391842706 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.414120888 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.417670012 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.414403186 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.417320108 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.417869269 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.41744226 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.41672031 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.415932012 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416368939 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.414790247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415341714 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.415381174 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.417937505 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.417346368 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.415831511 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.416943803 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.416518889 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.419197092 seconds)
  done (took 26.778427341 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.415300088 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.418528152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.415933898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.415682609 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.416312298 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.41642565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.417234343 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.417164083 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.417026565 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.41635972 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.416567708 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417879815 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.416673168 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417218279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417505746 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.417537664 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.417501276 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41683485 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.416907346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.416400926 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.417268634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.418459847 seconds)
  done (took 32.453703716 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.417280787 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.419528768 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.416954558 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.418801721 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.419229778 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.425408426 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.417831486 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.419138355 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.417208012 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.418029765 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.417549327 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.416825282 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.419646102 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416642577 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.417965372 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.418408095 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.417885962 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.418998534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419709518 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.420678356 seconds)
  done (took 29.656637063 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.415076246 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.415056202 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.414782075 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414034914 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.41510153 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.416366634 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.413907244 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.414931605 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.414562914 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.416957771 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.415142387 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.415287586 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.415952126 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.414667466 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.414896196 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.414516958 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.416594387 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.417043536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.415671085 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.416561771 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.42186901 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.415076107 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.416879688 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.416738469 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.416462457 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.417558895 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.416644114 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.415549981 seconds)
  done (took 40.928709441 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.446846697 seconds)
    (2/2) benchmarking "in"...
    done (took 1.446490577 seconds)
  done (took 4.177759686 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.422133499 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421145594 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.421918039 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.421137073 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.420946407 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.421369296 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.421539079 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.421038877 seconds)
  done (took 12.65610606 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.408938874 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.42154341 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.422391074 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.420747079 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.418261638 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.408977846 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.426726611 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.427763824 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.4113873 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.410140424 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.411029014 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.409900449 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.416377949 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.411683008 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.411501072 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.4177152 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.425983919 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.419881956 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.418499169 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.424536528 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419169365 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.417764437 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.419424635 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.426409672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.410734913 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.427676662 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.426518274 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.427591596 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.412844539 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.423947626 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.414262666 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.427782122 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.419829715 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.419473873 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.423078381 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.419812743 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.429699545 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.419050704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.427623513 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.426529728 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.423584312 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.427012472 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.418553504 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.41704605 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.420827677 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.424539462 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.427691748 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.425509976 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.412753116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.415185549 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.426454161 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.411358456 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.425845144 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.425127874 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.41998539 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.431877894 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.430118103 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.412693821 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.414002717 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.429220992 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.437827185 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.421914686 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.425908211 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.429021595 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.422774432 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.421559544 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.434376955 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.433083145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.427617087 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.425814554 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.433908949 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.439751941 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.429548548 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.430061533 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.423091791 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.427307132 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.415031898 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.432389062 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.43291434 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.433513229 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.429717773 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.423482902 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.425575138 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.420536718 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.41707671 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.427549272 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.422055207 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.424820713 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.413408646 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.434592625 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.431044619 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.4270219 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.413448595 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.417571746 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.419738781 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.42578131 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.414798907 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.418506292 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.430566135 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.427844071 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.423117004 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.415792119 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.427336116 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.428072732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.424713785 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.434159121 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.434733914 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.415948704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.435048479 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.436360937 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.423865074 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.415877954 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.425227887 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.431051602 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.416437174 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.424313944 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.428946516 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.428167856 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.430689126 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.430080668 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.427795182 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.433637965 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.434066581 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.428142783 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.420102374 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.428289589 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.425365264 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.428334078 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.434617908 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.428614631 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.429188935 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.431219082 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.435816594 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.419889778 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.428251735 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.419563689 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.434167641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.429865069 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.427568269 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.42813531 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.424450274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.422431721 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.429929253 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.435382041 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.432099292 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.429715888 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.441927357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.42578543 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.43243886 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.427479989 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.435840969 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.430987418 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.421644401 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.430485958 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.41869619 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.428645919 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.419416044 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.437487337 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.431155037 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.431574784 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.432725628 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.41837499 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.421903442 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.43073117 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.434362219 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.424352287 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.436353114 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.431785914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.431494257 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.418222107 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.433125958 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.41861727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.422794268 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.431900244 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.431889488 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.429049463 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.432819565 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.43553192 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.430009151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.430119082 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.422261308 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.428121551 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.434084949 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.439196702 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.436700645 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.429932465 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.433830307 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.423116236 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.4230216 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.43046312 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.421761455 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.435377362 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.44111175 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.435949292 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.423923391 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.434674968 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.421319709 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.430744789 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.436074238 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.437308264 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.433964473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.431156085 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.422289594 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.43448535 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.427155297 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.434256829 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.42216814 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.435955928 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.436539032 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.429633475 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.434196765 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.424060979 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.426697558 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.437466734 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.433974949 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.43198105 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.42377896 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.437642803 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.422279258 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.425897106 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.439145369 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.432505349 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.440683763 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.443445148 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.438577211 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.440855223 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.432453946 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.426296179 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.439890226 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.436222372 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.430906891 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.444973974 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.43239919 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.427531043 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.445913338 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.433364466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.425047068 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.439089775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.443324532 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.436640022 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.425628706 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.437817895 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.438963712 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.433271647 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.432310352 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.425261201 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.440372061 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.443535731 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.444724221 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.425038757 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.439819408 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.427707462 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.44139817 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.437263775 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.435860245 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.433891349 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.442629262 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.444686088 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.436846753 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.428759132 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.437570657 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.433707946 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.433500168 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.429131596 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.437918817 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.443233319 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.433993806 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.43837893 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.42776997 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.441290404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.426273341 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.43588874 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.42768162 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.451389384 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.458042605 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.446480101 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.438290582 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.442748551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.44551196 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.436347597 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.428322973 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.428658281 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.432596213 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.428930522 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.429992598 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.444666462 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.428444008 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.443810069 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.440415922 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.433960142 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.442719357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.440765966 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.427236383 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.441836353 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.437385299 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.442542379 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.427944713 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.441760855 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.435256885 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.444714652 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.434888543 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.431887183 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.45144407 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.440659389 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.434268701 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.433673235 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.432342688 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.429043944 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.436820213 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.442210633 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.429669095 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.441612443 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.430143736 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.435710086 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.433593616 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.449791136 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.447889218 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.429578161 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.441342785 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.441236068 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.427961963 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.432187292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.439934855 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.448680171 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.448742609 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.429164141 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.440564124 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.439574893 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.437909457 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.442273211 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.438790925 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.442939846 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.439091242 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.451059384 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.441915205 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.433739304 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.447678228 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.450733016 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.439315362 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.450576431 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.429597158 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.447707771 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.449555911 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.439022379 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.437847997 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.432857978 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.445351605 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.44265643 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.44492711 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.442815528 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.442698614 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.452750661 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.444855592 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.441983929 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.449078755 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.45043647 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.450506381 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.452398241 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.452599035 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.436594695 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.445784062 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.444416011 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.434863609 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.436018365 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.435543165 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.443939554 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.431383139 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.447627523 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.442137649 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.442840042 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.4471936 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.447124316 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.432937457 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.447122082 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.450396102 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.431816574 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.448187232 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.446182088 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.431674307 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.444247135 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.442002995 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.430120199 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.435541 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.435889019 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.448307288 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.433619108 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.446017752 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.434288676 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.448096996 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.444617224 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.44634859 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.442674519 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.445520831 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.435121464 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.4440381 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.449454711 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.454513036 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.439263471 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.443565065 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.436896131 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.455975721 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.452429112 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.441725027 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.447435739 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.447720062 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.436295984 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.445823173 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.447526952 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.435571242 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.449821936 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.435239426 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.437714042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.437594823 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.452328749 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.445579916 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.447037993 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.435393285 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.437552638 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.447508932 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.443198817 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.444029719 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.446591079 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.452727334 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.436030098 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.436123057 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.449531187 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.440872335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.454011086 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.436150924 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.438815788 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.440083268 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.452874839 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.448155943 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.447064811 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.434780708 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.439093407 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.457628306 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.448408488 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.440241319 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.438537052 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.447445796 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.436559216 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.441377846 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.44116036 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.43798796 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.440381001 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.449180165 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.439199147 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.438926277 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.439503585 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.448128494 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.456187829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.446280005 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.436935312 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.459431608 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.457694445 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.454844432 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.438003045 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.440973674 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.439843782 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.453900598 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.4507796 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.437822994 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.460677507 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.450079371 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.449785479 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.452046171 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.446374711 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.436358422 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.451190895 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.449647612 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.449282552 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.45719969 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.449540685 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.454207969 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.452633048 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.451550508 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.436908143 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.440753324 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.4435321 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.4413145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.453241855 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.454057181 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.448794431 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.447604894 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.453453893 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.452547631 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.451952166 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.451641023 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.440036823 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.449993676 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.439010505 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.456806483 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.448741981 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.442104963 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.454844083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.449683791 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.442227046 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.447636184 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.45712063 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.452975131 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.441936087 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.449005771 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.460847081 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.457076979 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.449895968 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.441326512 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.447789834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.456700953 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.448555225 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.453586311 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.440707998 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.464292212 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.465434885 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.443239884 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.446016006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.460379005 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.461982491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.452457816 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.454896743 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.453848705 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.449361613 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.453615644 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.450700889 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.460726465 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.453472261 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.443114798 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.456822547 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.443031688 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.445664284 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.457785449 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.459643995 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.450934997 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.445881979 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.464531837 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.466209076 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.454111798 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.470187655 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.454930547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.45433487 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.458362268 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.440981496 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.452446502 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.453541614 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.456179239 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.455069181 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.455500661 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.45061673 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.442414779 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.459143653 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.463858358 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.465527984 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.455558001 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.442285224 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.444874729 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.456848109 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.451110996 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.456039556 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.451232311 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.451042552 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.451560425 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.446008812 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.470387959 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.468474587 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.461417545 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.45242513 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.455543195 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.460408687 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.456860541 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.44966605 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.461164091 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.451793765 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.452141086 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.457854731 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.463509361 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.456481163 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.446959561 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.445315846 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.44707445 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.458480999 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.467920816 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.471478042 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.462566573 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.454424546 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.45514901 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.458322459 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.446283637 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.458157564 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.452596032 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.447376374 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.44989066 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.455910071 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.457989385 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.457121188 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.447425682 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.462880092 seconds)
  done (took 858.356532302 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.457090808 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.457404744 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.456740065 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.456695017 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.457481779 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.457591011 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.457647233 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.457324217 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.457895379 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.459325519 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.457586331 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.458754986 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.458305976 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.457794389 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.457717493 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.457549875 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.458260858 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.458044561 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.4582999 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.457872401 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.459706084 seconds)
  done (took 31.930548082 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.459568776 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.457629214 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.456903703 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.458793538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.459567868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.460590135 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.458970167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.459099234 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.460214528 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.459161601 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.458853392 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.46098418 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.461067291 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.46010872 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.45977816 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.459718446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.459768453 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.458197653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.459961005 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.461898821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.459679545 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.4597035 seconds)
  done (took 33.425313652 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.456769887 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.457208839 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.447964018 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.46415679 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.460078897 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.460022465 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.455632521 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.461818992 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.459601602 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.449095098 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.448515555 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.449294914 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.452545397 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.465201057 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.459530154 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.466150549 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.456653112 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.4590259 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.456708357 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.460784573 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.468463343 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.472448138 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.460410434 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.447448938 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.460320967 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.46155192 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.461881641 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.457558674 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.446757789 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.460019881 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.463167907 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.450950711 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.468920803 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.458543366 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.450906711 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.466068346 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.458713988 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.462624821 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.461821786 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.465298555 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.47097267 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.458833627 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.469123273 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.473686494 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.462067349 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.4521392 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.463961094 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.462600936 seconds)
  done (took 71.383583557 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.46286738 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.46345719 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.463005666 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.468858714 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.463079767 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.464476383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.46409952 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.464159165 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.463582275 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.463972269 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.46440759 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.465162365 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.463218332 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.46447359 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.463882453 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.462766808 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.464293329 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.464594555 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.466831571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.465696091 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.464642326 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.466008841 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.463862199 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.4638666 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.465021495 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.464245977 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.464794232 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.46446898 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.464957102 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.464093304 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.464850384 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.465329006 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.464599025 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.465731083 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.465051177 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.465009133 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.46512032 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.465215374 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.464350041 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.466639578 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.465451158 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.464151202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.466402816 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.465156009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.466033216 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.464456129 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.464687933 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.465029805 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.467058416 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.465680238 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.465758809 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.465232136 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.465611025 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.465204549 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.467185038 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.466349667 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.465723889 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.466201045 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.467625876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.467264587 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.465057533 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.467814657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.466199857 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.467104231 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.467587952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.467208714 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.466566593 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.466974816 seconds)
  done (took 100.958144261 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.462874364 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.463992174 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.464343197 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.463756879 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.463797527 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.463854726 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.464540917 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.465782206 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.465719698 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.463807374 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.464536447 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.468887978 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.464286764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.468765617 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.466298752 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.464524574 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.46452604 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.465352332 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.465622409 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.464184796 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.464606218 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.464325317 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.465312523 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.464624308 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.465875584 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.466048581 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.464374974 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.46566641 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.464828244 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.465199311 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.465443266 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.466164308 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.466200765 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.465225152 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.46608839 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.465689806 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.465804276 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.466049349 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.466341146 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.465448784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.466365591 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.466457012 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.466264809 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.466030771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.465801133 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.464962409 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.465577641 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.465951362 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.470648816 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.466553324 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.466965387 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.467644175 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.467120714 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.467764371 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.467797896 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.47119288 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.466825495 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.466628822 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.466726251 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.466308041 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.467996803 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.470935865 seconds)
  done (took 92.213905975 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.471983693 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.471034411 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.470424137 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.469883915 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.470575064 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.470477706 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.471035667 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.472344004 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.470693515 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.471146925 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.470530506 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.47130735 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.470947249 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.472267527 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.471305953 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.472843788 seconds)
  done (took 24.864981783 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.47188815 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.471941439 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.468083616 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.468177622 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.471539502 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.472030836 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.472816271 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.473954824 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.472338138 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.473202632 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.472245318 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.472230513 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.47276843 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.469601965 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.472154874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.472978372 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.473016156 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.472234074 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.47280356 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.469503699 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.472191541 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.47292222 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.472390519 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.471794213 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.473333096 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.474137877 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.473057921 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.47292655 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.473235528 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.473624335 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.471504581 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.474539534 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.474037376 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.473631598 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.469232785 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.474196125 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.473816886 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.474234537 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.472928785 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.473206404 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.472967617 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.473397001 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.473757941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.474296836 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.473680278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.474931414 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.474682011 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.473509585 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.473516011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.475031008 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.474274278 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.47118415 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.474472976 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.475444538 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.474871211 seconds)
  done (took 82.335195071 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.475410945 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.473444843 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.474374291 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.475237668 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.474579903 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.475506278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.474556646 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.477069675 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.47470415 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.475735357 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.474910811 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.476371192 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.474917376 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.47607269 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.475309814 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.476219357 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.475537497 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.476621573 seconds)
  done (took 27.886324791 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.475541198 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.476884037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.475797237 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.476349751 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.475265046 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.477195668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.476383694 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.47694878 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.475704697 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.475826989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.475964157 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.476344652 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47687377 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.4765965 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.476383415 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.477331929 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.476311897 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.476737091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.475940062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.476553199 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.476795827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.47734464 seconds)
  done (took 33.811538814 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.460258459 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.459129894 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.461054929 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.483710045 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.470386004 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.462211501 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.462882955 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.462493729 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.487731156 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.497729075 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.492465767 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.471288074 seconds)
  done (took 19.003015607 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477678202 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.477743504 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.477273961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.477368176 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478024405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.478857891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477529231 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.478560717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.47831264 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.478380037 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478403085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.479422628 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478140971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.477587898 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478374659 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.477576164 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.479220507 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.479082012 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.478085097 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478205434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.479079987 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478138735 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478374869 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.479600723 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.479287485 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478829186 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.480449783 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.478570355 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.479904254 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.479318983 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.48097925 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.478750266 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.487128915 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.479281898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.48060972 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.481072069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.482877187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.480018863 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.485458102 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.479269884 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.479619022 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.479139491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.480060838 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.479843142 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.480318482 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.480474717 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.480627949 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.479302431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.481205396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.480288381 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.481534977 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.481387752 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.480200101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.481696241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.481257428 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.481661111 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.481610336 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.480967936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.481998025 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.481878457 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.480980228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.481599651 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.481526806 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.481818603 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.482187714 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.481892705 seconds)
  done (took 99.010168195 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.482326209 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.482253645 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.481650704 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.481993276 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.481994463 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.480342927 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.482042444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.481928114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.481654825 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.481472539 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.485196896 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.480596869 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.481665301 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.482278368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.482078692 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.483700057 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.482429853 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.481884114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.482900934 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.484705563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.482236114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.483138114 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.483317536 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.48272186 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.484597448 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.483245251 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.482595657 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.483166749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.483369778 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.482227733 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.483998 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.483366076 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.483396946 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.482391022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.483688953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.483521543 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.484056876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.482908266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.484375562 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.484674553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.484321784 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.483661924 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4844468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.483574692 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.484884356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.483542356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.48283214 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.48402021 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.482843663 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.484230152 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.484914387 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.484261581 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.485095626 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.484489264 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.485674331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.484313193 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.484720299 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.48496628 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.485590172 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.484102134 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.485642692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.485599181 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.486786972 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.485880712 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.486318337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.486451315 seconds)
  done (took 99.252608871 seconds)
done (took 1901.245387189 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.446544984 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.446236145 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.465965469 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.684243227 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.465276416 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.122798995 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.079159508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.473536544 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.468571667 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.472074696 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.467714225 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.44904111 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.80444727 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.471157819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.471272918 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.448479308 seconds)
  done (took 56.575339925 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.510724024 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.488821519 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.615082616 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.477750418 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.50643521 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.718610516 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.548994255 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.483569594 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.66565008 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.481362748 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.45821197 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.505754887 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.476161878 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.450887435 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.499832346 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.718677843 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.81191421 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.460410294 seconds)
  done (took 32.218988812 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.01788328 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.487162508 seconds)
  done (took 5.843991125 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.503428125 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.476950665 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.485598483 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.491561462 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.448398291 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.447005726 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.473409782 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.455706553 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.452892578 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.62288703 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.484509867 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.500401552 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.474684595 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.479322894 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.492057405 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.535079915 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.666542652 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.491612306 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.492211544 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.491510269 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.476814964 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.713947842 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.53148232 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.49185724 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.621146237 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.45615263 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.49342818 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.501491775 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.68729159 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.492552789 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.477235269 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.480456558 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.481643232 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.465545025 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.104788395 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.453581702 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.516235829 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.495532986 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.493183386 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.691542828 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.479153459 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.493621081 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.465368606 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.092698031 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.658765895 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.75569065 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.453348292 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.48775567 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.483005067 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.680414039 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.485663435 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.482394794 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.588210973 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.466944295 seconds)
  done (took 94.515379018 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.496849565 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.450816266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.718138529 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.474350824 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.452605531 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.456014623 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.454420217 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826960957 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.524053164 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.452158267 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.872565569 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.203829412 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.466715216 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.501629362 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.50215813 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.486870432 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.452102044 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.453249257 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.451551974 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.454142877 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.12170102 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.45832176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.473475293 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.652649335 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.524795088 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112519267 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.453661042 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.454710757 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.455220179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.452206038 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.16699037 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.453159093 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.512800615 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.457063499 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.836124272 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.95176342 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915286365 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.45510955 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.482887105 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.456193487 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.454920769 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125111371 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.934312526 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.454227734 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.453956191 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113506263 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.454639867 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.458939926 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.464843469 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.819803552 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.457055887 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.455506109 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.454276763 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.453803378 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.455126731 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.520060826 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.50665102 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.114389756 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.456162896 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.455063524 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.462044231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.456470617 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.455329969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.4595539 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.458802128 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937614203 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.654340682 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.455110877 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935956312 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.168894033 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.460084135 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.247684499 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.460275989 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.479916476 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.572512189 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.460747907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.45609962 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107288573 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.460674084 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.456390928 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918833324 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.45626661 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.871780343 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.477948977 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.458066141 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.155401606 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.468110156 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.53883975 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.457313532 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.457311786 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.456933316 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.459719564 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.843739137 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.49272397 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.456902865 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.457906623 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.488976916 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.457101144 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.457379112 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.464857717 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.249869624 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.460932427 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.457414312 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.460813348 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.459053766 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.46004677 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.458362408 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.462120637 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.826715604 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.459181366 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.467290149 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.460704116 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.457507969 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.462905164 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.659931965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.463352497 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.870194667 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.459668859 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.457941964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.481345358 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.45838748 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.465391025 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.459305265 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.461638243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.458963392 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.899140596 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.490272332 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.459309875 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.458424636 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.459563538 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.460187081 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.4615647 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.499489775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.459996344 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.383060654 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.48734661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.490137398 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.459078979 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.463646389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.45905691 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.462309418 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.460537824 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86617558 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.839330337 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.690082587 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.464388313 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.462046396 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.383373124 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.502236563 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.722904009 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.479386799 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.460162846 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.84559943 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670173909 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.462479482 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.460817817 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.462103107 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.831197669 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.461966428 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878591824 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.191370704 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.461529361 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.466312511 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.365595723 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.296859818 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.46380025 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.463812053 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.86515443 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.477361402 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.461055976 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.4612215 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.462311234 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.460765647 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.468304594 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.463356828 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.46176717 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.46174524 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.537570804 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.741518038 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.478170443 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.467457978 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116543522 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.474033674 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.461686574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.466878295 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.46514686 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.461917679 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.497177678 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.467512663 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.487790661 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.4646014 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.465353031 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.186231434 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.465125908 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.463789564 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.740803073 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.328138655 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.464224466 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.464331463 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.462611412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.504787236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.146708949 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.464187241 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.876429677 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.475406964 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.533861813 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.46359778 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.489514763 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.145599242 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.467052689 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.463290688 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.317062735 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.463022987 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.243849166 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.464846193 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.466714936 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.247897795 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.464251285 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.465722492 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.463469412 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.465234022 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85595368 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.465470295 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.486493359 seconds)
  done (took 532.153078488 seconds)
done (took 722.644098964 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.46395844 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.466885559 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.468296632 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.466861044 seconds)
  done (took 11.220209218 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.505086017 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.487191772 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.503546435 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.487328801 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.504237794 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.489091944 seconds)
  done (took 10.332597323 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.464768181 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.468477521 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.4678222 seconds)
  done (took 8.755750923 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.769456716 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.475636183 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.938232858 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.480074247 seconds)
  done (took 10.019531255 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.503374696 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.503186963 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.504869928 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.503237458 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.504640639 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.505476639 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.506012951 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.503634016 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.503530792 seconds)
  done (took 14.891744195 seconds)
done (took 56.574059105 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.62487618 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.62874881 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.465742745 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.572869427 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.681440915 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.639914126 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.636249205 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.639220393 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.633984601 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.539892119 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.631014181 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.532750778 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.634295884 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.758147667 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.538873763 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.627742536 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.531013127 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.735430742 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.635622588 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.539772621 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.658599394 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.538022189 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.550932001 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.497971285 seconds)
  done (took 41.830072247 seconds)
done (took 43.185069485 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.528931647 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.658832244 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.498125425 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.497452574 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.506870531 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.480527447 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.527265094 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.496899362 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.519485265 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.520368827 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.479682158 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.507402093 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.521686591 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.509200367 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.540040043 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.498833546 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.49849279 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.509411497 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.521498718 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.522534744 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.498715793 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.509125777 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.532463102 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.498860015 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.515190444 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.517557155 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.512553028 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.468875756 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.50644429 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.520102381 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.474040379 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.513741657 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.522435779 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.508188506 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502082283 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.510117522 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.509032957 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.65823084 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.528159132 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.50960412 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.507534792 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.522765709 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.513874425 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.514049447 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.509051186 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.534573356 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.517638242 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.522839602 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.472725128 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.471908823 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.529799983 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.519263449 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.509055167 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.474191655 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.472762283 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.5230735 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.510353517 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.529332676 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.507386519 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.511557161 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.542199326 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.530397266 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.521464217 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.516975727 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.509873428 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.524261779 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.511978932 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.525602173 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.507691376 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.513464526 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.512116101 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.510008571 seconds)
done (took 118.42066467 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.682188985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.471152302 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.718942401 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.514289562 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.730681185 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.68082694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.516528953 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.514433854 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.513114621 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.373472143 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.514574235 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.514427708 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.473739433 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.514632831 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.681025499 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.515300864 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.514939365 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.27148159 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.51182193 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.692832378 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.476445992 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.514119219 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.514767625 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.380327065 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.471958899 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.480620126 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.692458936 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.515203575 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.279602106 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.480479187 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.473750049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.279871693 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.69112413 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.534058626 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.524738935 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.523724421 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.733089104 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.51809221 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.683455278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.682392573 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.720696186 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.550773461 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.481456616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.476371611 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.518546737 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.51398694 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.517364952 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.546280502 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.474375687 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.51724692 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.273691228 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.527017227 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.517227924 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.517481867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.517374451 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.543010532 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.518136489 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.51454567 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.694770683 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.514733053 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.682972813 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.382693567 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.378913269 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.518169314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.478357548 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.518655969 seconds)
  done (took 121.149454274 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.629033901 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.640028456 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.674299854 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.506593681 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.597696117 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.673270323 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.506432277 seconds)
  done (took 12.592019838 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.51907781 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.518997143 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.598225444 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.597896632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.514076686 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.735646272 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.518471099 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.528086288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.517658984 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.598898295 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.514872527 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.51983035 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.526032326 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.480186552 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.597040099 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.524473958 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.682177112 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.509946342 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.519489245 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.719421793 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.520053004 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.529600377 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.599247641 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.525352351 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516809575 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.519691226 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.328600795 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.515156431 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.519967309 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.521475531 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.520629195 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.627772218 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.520827404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.48203106 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.51952228 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.680720432 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.515964984 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.520844026 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.520729906 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.485195289 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.521862941 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.520189614 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.521924332 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.52047715 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.519532127 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.540149275 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.521890598 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.521466591 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.519916045 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.521120738 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.602739706 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.520585194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.522623722 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.519981277 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.603841452 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.530001476 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.517975715 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.520501664 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.523147881 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.520647284 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.720893348 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.601159547 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.522120795 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.599520372 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521628484 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.521332497 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.522121913 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.521907988 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.657724142 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.52129995 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.600683509 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.521728846 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.75190679 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.541490018 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521982858 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.513126215 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.5151704 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.51900294 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.481155041 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.523596472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.52115021 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.511986685 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.524094998 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.522028884 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.522880738 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.726443425 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.682084922 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.523616934 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.533691331 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.524993158 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.523129722 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.602241249 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.523865849 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.522159487 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.602737192 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.685186922 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.602287065 seconds)
  done (took 156.564654629 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.529593533 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.530771196 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.514543784 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.546340146 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.512609879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.510496062 seconds)
  done (took 10.514012431 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.516102572 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.526819088 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.52388757 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.52372882 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.520509766 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.520658947 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.521237443 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.513969689 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.524590243 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.525209386 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.522204534 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.523090262 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.523037462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.521730033 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.52112402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.525122504 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.522044529 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.528596619 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.524355646 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.522643487 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.483866838 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.521314058 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.521811608 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.514543085 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.525531214 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.526854567 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.544314399 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.525808554 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.525056015 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.528381997 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.523164293 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.522035169 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.514046095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.517871232 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.526315183 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.514766089 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.529588504 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.524504827 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.524835595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.522390871 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.526756929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.523341481 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.526176059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.524099329 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.514744577 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.518560775 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.528798529 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.544783104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.523711849 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.524954605 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.524389868 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.52719637 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.523750961 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.52532623 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.518348318 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517555968 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.528320466 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.524893215 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.523557779 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.516597955 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.530695698 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.526417571 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.518976191 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.529426752 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.527470707 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.524879246 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.514055803 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.528699216 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.525128301 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.528475583 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.527176257 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.528634891 seconds)
  done (took 112.057203576 seconds)
done (took 414.236850032 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.797289586 seconds)
  done (took 4.17122771 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.722062142 seconds)
  done (took 4.09810647 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.194631245 seconds)
  done (took 24.575694508 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.546416622 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.493209577 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.487997182 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.495423685 seconds)
  done (took 11.395146199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.049221762 seconds)
  done (took 4.423777423 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.504014163 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.496603863 seconds)
  done (took 6.376885427 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.827684163 seconds)
  done (took 4.202163068 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.095531073 seconds)
  done (took 4.477541592 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.517072527 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.507603516 seconds)
  done (took 6.405243572 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.471786531 seconds)
  done (took 3.847431576 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.410517846 seconds)
  done (took 16.787363743 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.522215989 seconds)
  done (took 3.900050977 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.526078351 seconds)
  done (took 3.900849333 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.254391637 seconds)
  done (took 6.629729102 seconds)
done (took 106.565396273 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.488423632 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.494996326 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.493180103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.491925684 seconds)
  done (took 11.344239376 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.648295987 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.646199492 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.64990129 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.638387605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.62515806 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.65499279 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.56352634 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.563598835 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.626365965 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.624018529 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.655178287 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.637958431 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.649958071 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.563733768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.624523342 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.655806021 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.62702366 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.651267595 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.583053613 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.640164716 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.531776911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.640810749 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.624527882 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.531375812 seconds)
  done (took 40.234385254 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.105012167 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.647276096 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.729665623 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.612469993 seconds)
  done (took 8.470995229 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.696668061 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.704828386 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.712631054 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.747381702 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.786065114 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.708637949 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.567711788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.56026105 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.546776165 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.704334958 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.773554793 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.701230722 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.920861025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.532317552 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.919540188 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.531957032 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.532234302 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.772861549 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.745940039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.778993055 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.533609057 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.699695751 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.70726466 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.697724271 seconds)
  done (took 41.960958654 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.548984895 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.557068535 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.534679864 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.556915653 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.534024194 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.534189787 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.534074061 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.548086248 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.534638239 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.536414861 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.534007223 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.556117018 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.534531801 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.534440518 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.549061022 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.536233344 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.535709395 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.547978622 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.550533067 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.534686639 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.534931153 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.550436406 seconds)
  done (took 35.295632986 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.493525329 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.492944669 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.931950774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.835660457 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.49543046 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.497104066 seconds)
  done (took 15.125181841 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.611572534 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.800003269 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.523523976 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920960968 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.049271908 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.52345197 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.521166624 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.845046287 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.179133813 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.141423989 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.58466108 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.611352324 seconds)
  done (took 22.690669533 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665908144 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.510201192 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.510571212 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511824863 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515119137 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509606634 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.522698173 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119045515 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.54126017 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86631673 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515024222 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673114438 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843743956 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524737399 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515644622 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.49535098 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829696221 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159274863 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513085917 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511020082 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576682062 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.510087771 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51414925 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.800811262 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.515248342 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510429015 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.856831095 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.509997745 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904837759 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854798994 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864973612 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516857905 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866266374 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05427876 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69362766 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777585404 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501677204 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512234901 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.51238897 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.520190381 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527968745 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516477898 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853945254 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516289117 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512857326 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511419923 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115718207 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.546033822 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.511351548 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512076501 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866405497 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676230057 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.539997998 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511690139 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584298534 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517730013 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.541019427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707149352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241249045 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512570558 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529028447 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.518269327 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498511577 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531364428 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284683408 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.542666774 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.539597528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539553388 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511982006 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520834318 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56591114 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512585155 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.565480289 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513126285 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426124928 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.528223806 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518663861 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218846754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522404001 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.51788122 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827829154 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513730482 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512017974 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.508323998 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512582361 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.461048643 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547955086 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.482482025 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576069276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118846328 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787033673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567740353 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574872964 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.817760345 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.483155714 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516854482 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.525972402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518878344 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565097908 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115218004 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518102198 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.542904094 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848699824 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.813256002 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51422852 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.488853016 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143937718 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525080179 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.575773637 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.51655207 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.787712879 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.259009613 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876926738 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532399197 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586226154 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516558425 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514032825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520990693 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.548363168 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.529255641 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890673248 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.486204566 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52181489 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66706297 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519894115 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.518034102 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530054066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51845315 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517066032 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.778018211 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524452935 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864640049 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.514045048 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516433759 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.527901977 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516287231 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.520436014 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.820135997 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557702973 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871303397 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517074343 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517886318 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518516216 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.82009032 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.526203716 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.5498276 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941512465 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516491937 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519701563 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872594343 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583782337 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715225728 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58120226 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.524709531 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857169826 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.54570431 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.545887295 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517617359 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523257253 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523898744 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.546987715 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510237441 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266624478 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519950547 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528788682 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518249423 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.562150187 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670487358 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548527296 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787754504 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.522275563 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510180241 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.547107701 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.533660879 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8225062 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864629155 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.537675217 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771318825 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.128089263 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275617731 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568004632 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.518555677 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.519330217 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.518560426 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519192141 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518796419 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520490001 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786942739 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887108759 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.51450593 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267316884 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522940242 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519745214 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.554555017 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866350462 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.555606268 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521271106 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.528157736 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537834315 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525983157 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866921066 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827393483 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.566323553 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519809677 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.12562617 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551135309 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.523398472 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520239969 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578598019 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.535262131 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21862012 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952307762 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516727721 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893789776 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542067536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.572693287 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.516080711 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521340528 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532213908 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.54962534 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555918947 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.791372422 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526887183 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528549546 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249113732 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452068731 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210512594 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523889805 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.534641172 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.526965405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125237155 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525947329 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523270731 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868413854 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13324362 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527067164 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131451632 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.532864409 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.437712924 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877809252 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840822636 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528644809 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.528025945 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902151943 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827907585 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58101341 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531477292 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52719211 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.493290103 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215177363 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527170808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780035785 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135011373 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528127285 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.529400073 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.549674368 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.552195918 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048016092 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529227565 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525017532 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524231818 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529445399 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224470304 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.53847029 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527754054 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289680832 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.541867161 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.134316941 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531050212 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796400785 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875997778 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.862298062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.537298982 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.529708981 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.857345896 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882455583 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53174241 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.52486905 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230801207 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.469854582 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.555319709 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526465691 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.543294437 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543216914 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92769311 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.535738378 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.540212551 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528255514 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.525215951 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526752599 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.52655411 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.525344529 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525345507 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168740103 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.516303085 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523311938 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548500127 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530330428 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861805122 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.571669903 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276583705 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843319392 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52546724 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590384853 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.553766299 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525944395 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.502021032 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.526522961 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526509342 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592141151 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.837229721 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53773989 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.501488563 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.586113779 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.831207167 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527881933 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52761046 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844115652 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.534658702 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.539585446 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465098809 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594030497 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.529855927 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536043026 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526707063 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583828223 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682404236 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801669053 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.890923979 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884439215 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052060182 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535981566 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534599198 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.572961757 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687526675 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539693769 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.546716311 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.528865368 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279285516 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450833727 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281775496 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888445382 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53575095 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531665654 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530255558 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857137141 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529306695 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88980575 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530725939 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.521198611 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581183753 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530622574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547051898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832978202 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88676514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529875482 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543793104 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534572029 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.530697793 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897459865 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.833759027 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179823007 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242231572 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534089426 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.540017903 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142014078 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895097275 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529839374 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531525971 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531902416 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.55073435 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.532352403 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.564667755 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534327235 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844441392 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880169049 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091357358 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884235838 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.568288537 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.488210547 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532194632 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.86729367 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45493809 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.802584672 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294478229 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397951653 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8695244 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684516376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802712132 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.532902054 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856365045 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.542615161 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.532615007 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531784174 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532346606 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.531678156 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880302517 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288786444 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871687943 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.561041457 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.543135409 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591910396 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.804375892 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.844202465 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49001769 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.844018782 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898672939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.548895847 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.533955121 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286440545 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896893732 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540907821 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.561995768 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842660369 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541102678 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602049814 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.493319995 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.533864048 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245648277 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.833675707 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585186007 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543883339 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397796396 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288412514 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.551584877 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187235471 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536866246 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549266356 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899744304 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.56449406 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545566164 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910265265 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.562476486 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.545109822 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812687843 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.289558051 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.457261919 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.557934706 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541227694 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.542805757 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536599173 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56779015 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54236925 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538141128 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.04567592 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.542147573 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536834607 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578426907 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.549094267 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54889012 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.540322202 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536703516 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.5665798 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.550820045 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.510163827 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.553014109 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732458087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238745165 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544690774 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.232940097 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.954879178 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871272876 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.547564185 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.511590056 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.564521228 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53943836 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536738506 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537561096 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522047881 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252731511 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.550013797 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.894016062 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571025897 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.836071333 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83581257 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539493116 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817354008 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55668364 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591220713 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.508201428 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539212982 seconds)
  done (took 1070.528889281 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.580652191 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.585976611 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.584861385 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.53593582 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.564223774 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.604281382 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.675629981 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.615992299 seconds)
  done (took 22.152465409 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.539251255 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.561842396 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.535560423 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.560393259 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.52669959 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.121948818 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.527444935 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.557345456 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.581494476 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.531027654 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.526188351 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.284573478 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.563460549 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.5346242 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.539184697 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.560164879 seconds)
  done (took 35.463916606 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.843721957 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.906516883 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.749364567 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.60446723 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.570828735 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.531923369 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.934618711 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.530888391 seconds)
  done (took 29.077927159 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.569561743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.569859268 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.570596024 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.571561579 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.57322918 seconds)
  done (took 9.262083328 seconds)
done (took 1342.983300634 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.569178525 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.570193039 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.56844568 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.569233978 seconds)
  done (took 7.683490338 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.510080926 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.512881631 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.514891593 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.553003354 seconds)
  done (took 10.497574098 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.00551362 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.220730863 seconds)
  done (took 5.633268867 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.538648805 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.389577264 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.37681803 seconds)
  done (took 8.712703061 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.942465309 seconds)
  done (took 3.349964406 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.032825962 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.123201561 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.543232418 seconds)
  done (took 8.108835139 seconds)
done (took 45.393598237 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.528168072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.302350809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.687332236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.528025596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.695645864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.689807971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.802596126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.533754467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.538825782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.535499102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.529644098 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.694051876 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.792127268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.303404295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.791793496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.303408206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.6955462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.539466855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.536733198 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.530120974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.799282716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.540905237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.532849813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.534691598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.695350854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.678582102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.529031381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.30355599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.540886239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.528439406 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.679297695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.52991173 seconds)
  done (took 87.860635562 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.530118599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.528400155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.530670695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.529505114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.552477798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.531056638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.550374528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.530500702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.545657307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.540557986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.544939828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.53627448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.53429008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.540672735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.533718639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.544183936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.531560892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.540729236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.530734251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.539694677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.532238701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.530839222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.532241985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529642701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.531980149 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.531735845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.543576246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.531185286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.538059065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.546036616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.530468225 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.531358492 seconds)
  done (took 82.566680234 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.531637299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.547109867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.531119216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.531118307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.531697641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.533571343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.550848959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.534695718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.531923019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.532234931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.532672486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.533015476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.554632331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.531642746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.533444581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.533338912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.535065108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.533433896 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.531976238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.535873522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.533680226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.532946893 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.542488678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.534770309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.532175076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.534746633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.549596077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.53528448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.533883324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.533460505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.534881286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.550279054 seconds)
  done (took 82.570978058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.864462862 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.574829732 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.578421391 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.548008654 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.579419911 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.576345847 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.548288857 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.867764609 seconds)
  done (took 16.550928509 seconds)
done (took 270.958202443 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.542269796 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.544352463 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.600941782 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.543806164 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.588896395 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.60264549 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.838964927 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.599580435 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.831751789 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.558496091 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.589881576 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.560030155 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.501670917 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.76336062 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.553107557 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.558455443 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.551539201 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.535882252 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.548114115 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.865155199 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.601589489 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.550282965 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.546409429 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.577880678 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.523350979 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.660914212 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.648001537 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.785449742 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.742873239 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.64224445 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.544126946 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.556207811 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.547669365 seconds)
  done (took 72.61974166 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.562167089 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.578342609 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.578663181 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.580116717 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.58063927 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.58067908 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.56288778 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.581094775 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.582286407 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.579755987 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.580578647 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.575875186 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.576371828 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.579921442 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.580680825 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.553554401 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.562371304 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.582782839 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.5617354 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.553146388 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.57968461 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.580589752 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.578065828 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.580563632 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.582893747 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.580969619 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.580553994 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.577063396 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.579460349 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.580650654 seconds)
  done (took 48.690998905 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.580796553 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.540218976 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.559166009 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.580307594 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.566611089 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.569137808 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.934866438 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.586278814 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.57343605 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.572139446 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.541337484 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.586137735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.636072227 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.546494774 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.569992735 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.583099987 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.58193294 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.565772924 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.541213377 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.594642238 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.948567063 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.587919874 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.930607098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.592007546 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.569491972 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.564922327 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.579058692 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.542071656 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.575842291 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.542168316 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.445285535 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.920038435 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.54199518 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.542442443 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.444466297 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.589447443 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.583311328 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.543150076 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.566955965 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.568811928 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.927183618 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.566429362 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.550057169 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.54303337 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.565583235 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.584809703 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.542966742 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.543731154 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.846335837 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.583783385 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.542698901 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.574376672 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.585596954 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.569057211 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.847391417 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.574393923 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.565727528 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.542944533 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.583475314 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.918765508 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.587232008 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.571444246 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.543808888 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.567852868 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.544136793 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.594331025 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.594147971 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.573733014 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.555260763 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.574259897 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.556030973 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.567801045 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.586682357 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.544942552 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.546445117 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.563282943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.5756357 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.545032297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.557273798 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.918469311 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.58013767 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.544515821 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.943451677 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.578621206 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.590317805 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.589425862 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.587346477 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.703597504 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.920342664 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.546994349 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.553792979 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.545955529 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.929522253 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.591255773 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.574512583 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.545446736 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.587254288 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.588140433 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.552917169 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.561834923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.573107096 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.596461952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.547314991 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.577474412 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.927154284 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.588222078 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.54783873 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.573874233 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.704252335 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.589138675 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.595082029 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.579686356 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.946198047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.579708425 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.589359233 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.547638844 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.54890353 seconds)
  done (took 227.863638461 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.548890959 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.547656863 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.547098063 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.548817486 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.547726984 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.578239523 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.548241365 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.551161359 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.572866983 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.549404851 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.547639334 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.579414323 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.57348857 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.548090997 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.566999058 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.550016381 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.547952013 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.553958223 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.569789427 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.550721359 seconds)
  done (took 48.552491557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.590385272 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.247403598 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.219327332 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.591221621 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.590800548 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.576169637 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.646115752 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.592584783 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.590031386 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.955739344 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.785005063 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.597727546 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.592295361 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.590693341 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.220117167 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.563217571 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.953146766 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.249777014 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.591738237 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.251476811 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.565234867 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.594340105 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.570644703 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.250648005 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.970924096 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.929586507 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.649787658 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.253965187 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.59254658 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.592725514 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.250799211 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.593307431 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.574423954 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.239136765 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.594166968 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.615590991 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.592619424 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.649794992 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.651817455 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.957994309 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.256328057 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.945442783 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.611933822 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.818797768 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.589533697 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.563470396 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.267680548 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.595420758 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.565324054 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.593944453 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.604820627 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.245280214 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.583692871 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.245482334 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.598407521 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.593338231 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.252263714 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.245874144 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.235309322 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.790743572 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.579582012 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.93173706 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.594490333 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.27066312 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.595912371 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.594498714 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.594783527 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.787363952 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.255672386 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.928947739 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.959755986 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.960209465 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.5940298 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.665113839 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.595386397 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.959228963 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.666413445 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.057756507 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.963085739 seconds)
  done (took 144.870178677 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.929120666 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.700419446 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.082667984 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.31152949 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.231295055 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.786785736 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.702060577 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.894527929 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.56523354 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.753978911 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.398178847 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.696112683 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.405476981 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.668144672 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.750587417 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.770007904 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.114962245 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.565617528 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.364560466 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.369735984 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.582674794 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.732225236 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.419183124 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.037209271 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.556197964 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.419785435 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.556351544 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.244631039 seconds)
  done (took 61.038402371 seconds)
done (took 605.049322 seconds)
SAVING RESULT...
DONE!
