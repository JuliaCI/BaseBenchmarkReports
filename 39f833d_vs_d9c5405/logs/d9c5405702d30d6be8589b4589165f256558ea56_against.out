cset: moving following pidspec: 11563
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.406830178 seconds)
loading group "string"... done (took 0.591161097 seconds)
loading group "linalg"... done (took 7.602251407 seconds)
loading group "parallel"... done (took 0.173949659 seconds)
loading group "find"... done (took 1.193710083 seconds)
loading group "tuple"... done (took 2.114533783 seconds)
loading group "dates"... done (took 1.339969593 seconds)
loading group "micro"... done (took 0.248854316 seconds)
loading group "io"... done (took 0.979639856 seconds)
loading group "scalar"... done (took 42.189125707 seconds)
loading group "sparse"... done (took 13.747999084 seconds)
loading group "broadcast"... done (took 1.095669984 seconds)
loading group "union"... done (took 15.126580719 seconds)
loading group "simd"... done (took 5.165034392 seconds)
loading group "random"... done (took 10.452381744 seconds)
loading group "problem"... done (took 2.062203432 seconds)
loading group "array"... done (took 24.762356277 seconds)
loading group "misc"... done (took 2.105088559 seconds)
loading group "sort"... done (took 3.804182663 seconds)
loading group "collection"... done (took 20.108803781 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573578415 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143038715 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149641774 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130571558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203619103 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156034265 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157565258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099120974 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.958268338 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17378091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153711229 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525640627 seconds)
done (took 5.158798242 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.260808312 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094980719 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104255393 seconds)
  done (took 0.880146601 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078685945 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145935266 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095913013 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079899126 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09736289 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079188338 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.099797018 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093992239 seconds)
  done (took 1.375437621 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087476097 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097045279 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082209539 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098660614 seconds)
  done (took 1.046277367 seconds)
done (took 4.331227833 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736396206 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278230074 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204493311 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46381242 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203299487 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220319122 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687330784 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350816381 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256137006 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100400291 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143733232 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3897578 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140600055 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683900371 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092748953 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127152051 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180329151 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452542805 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082377189 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111994569 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118984117 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14469889 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.135075209 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093749808 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188198013 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081721241 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193010832 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111636058 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081519207 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.282258895 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202697757 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700273835 seconds)
  done (took 10.961764032 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110779659 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133450807 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098221704 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140650932 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13396662 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099254357 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084936055 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098040379 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124705262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178686316 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12991695 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120301935 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096644832 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084146811 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118177559 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248719805 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122182309 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101205359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103415641 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090195539 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142220269 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112749909 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110520473 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093600928 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167971762 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221321757 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110600426 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127517901 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099607147 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114591051 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145136266 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142603443 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094820679 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080028013 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173604157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123677602 seconds)
  done (took 5.173117009 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.04496084 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189171126 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122922062 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171894432 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081423551 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143809312 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094585596 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113452634 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257411182 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107042187 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176640937 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141000415 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.154410801 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09917685 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100348577 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081355298 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098211982 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.608968443 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122337052 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151243848 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114315672 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102920491 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08532136 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369273619 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109384331 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081216618 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102168383 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066661407 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163989417 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10100343 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.165187728 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121461596 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082419116 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138760167 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20740848 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12417639 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117797261 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09939808 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078969773 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196547917 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089561948 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098737014 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105499155 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137814919 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134432478 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098958108 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082653589 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220005081 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079981951 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113729598 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.962768193 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181798641 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089450114 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097714141 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330380451 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10008484 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100450301 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078590457 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.328313476 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193172216 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100511012 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08127728 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098685792 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082417625 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401773995 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08240348 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.736104497 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084622351 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110647844 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083969111 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099162451 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109194204 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088986536 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118421239 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080923681 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101766574 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080306458 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099354153 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083000511 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110578378 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104139413 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082941244 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16682779 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081328876 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117771905 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12894564 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084834723 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096856536 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132230619 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084071915 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099148248 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136996008 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08257821 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098217097 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109769658 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084941658 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144886177 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099207617 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174464442 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092921871 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078660449 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096041294 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126973504 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10198379 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116774481 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11592781 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101573129 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087260159 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098247976 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078192059 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167017262 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081031549 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099336849 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082977293 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113940694 seconds)
  done (took 22.6887578 seconds)
done (took 40.551327955 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321617636 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106199547 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105715251 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103833379 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100600892 seconds)
  done (took 1.49669876 seconds)
done (took 2.231762149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.164020694 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115795766 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095979209 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128968622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078321912 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.135523936 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.132942084 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096589145 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135616619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095289033 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.129744286 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079155603 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094773639 seconds)
  done (took 2.241229495 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094458332 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116254764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084511928 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11309589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077287198 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113178905 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094444271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120484121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113646095 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087828687 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095346353 seconds)
  done (took 1.835805482 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093855869 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112384274 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08317431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109506507 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078264443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112604309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093954985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11873953 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111200011 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087042721 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095598162 seconds)
  done (took 1.824600563 seconds)
done (took 6.624680595 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090548373 seconds)
  done (took 0.813741147 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.921194817 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.869764688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112572256 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150715809 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315747736 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194613951 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.482328616 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128074553 seconds)
  done (took 11.091051003 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.117041898 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101875622 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116077638 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085020287 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102862037 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084301284 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100159458 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102946081 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086396704 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102300372 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087679247 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103240456 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102982174 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08405746 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102653144 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084530014 seconds)
  done (took 2.356187677 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119774838 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120764912 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108169998 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110108549 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088634603 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107622162 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106729728 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090283272 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102942262 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105226589 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091904636 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108082522 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105103291 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080817995 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107969456 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109018791 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087475254 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106549971 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108188436 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091134467 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107606917 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095886012 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088073198 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107508729 seconds)
  done (took 3.298430707 seconds)
done (took 18.289436761 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158319277 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108209055 seconds)
  done (took 0.999705478 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094822281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115317257 seconds)
  done (took 0.945340366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096444991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097375418 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12380363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110982579 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082245167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098139875 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121670043 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081520866 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098437939 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098007327 seconds)
  done (took 1.747242681 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082520763 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108749163 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10207515 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096069969 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107497259 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096283886 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090165236 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101002915 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111730096 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078207543 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103484671 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115598451 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087417654 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117745245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107315297 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101162333 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087747885 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100422116 seconds)
  done (took 2.532228843 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079924812 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096255414 seconds)
  done (took 0.914557248 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080963242 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095040487 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081969062 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099210351 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095342307 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078201811 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095747677 seconds)
  done (took 1.365070533 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.442788987 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138458599 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265177128 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085304491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12108008 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304919308 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098589 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085620977 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105451906 seconds)
  done (took 2.443796067 seconds)
done (took 11.687590612 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093262059 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114260736 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114386509 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460251283 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10666519 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098236951 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162244258 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25555515 seconds)
done (took 2.153599231 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145595974 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.589691704 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428930789 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235736438 seconds)
  done (took 2.001988879 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400487033 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100016956 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084068724 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082662788 seconds)
  done (took 1.415438698 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079642414 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100222866 seconds)
  done (took 0.92734653 seconds)
done (took 5.242477793 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079451381 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097793965 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079751701 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098679527 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078716877 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096050587 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114703279 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100854255 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079550472 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100454835 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.099297532 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081980792 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097776644 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079028371 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095547587 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082275115 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097795193 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079744851 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096093994 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07974557 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09874342 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079153046 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096294453 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079284673 seconds)
  done (took 2.953984662 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098916157 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099544009 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104786691 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088106612 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10479368 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087280453 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104021389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098801297 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087095218 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102854184 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102582089 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086562962 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101298728 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08633995 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101188527 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103536678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088447383 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099814188 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083900543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104026184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104453472 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08229531 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103562066 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104488955 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086092788 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103253297 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084634265 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100451809 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103779586 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085733203 seconds)
  done (took 3.643587871 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084369855 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094423981 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08063923 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103865301 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079925797 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099326305 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079075327 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09767243 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080101701 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097105876 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081237456 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09681143 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079810304 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099492584 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098059042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083833762 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114165441 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080629359 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097343352 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080247376 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100929312 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080601729 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097859923 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079791204 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097721744 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080430922 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09759334 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079269857 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097752515 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079738924 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101200349 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082931129 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098104975 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104012982 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083506094 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096309897 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083961904 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097018971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081072912 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096794814 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079810476 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097443051 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080037604 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103910126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080045449 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100565347 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079380971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09961381 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080673112 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101216481 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096649465 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080004273 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100073028 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081431727 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101820035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079547572 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098828463 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07931698 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099209716 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080520204 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09760416 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07955304 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099821751 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081158863 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113359786 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10463319 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080073833 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100515556 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081678571 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099814973 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081835535 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112715008 seconds)
  done (took 7.312954876 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0824636 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107228142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08230509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100517228 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077996717 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098434515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101661374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081095632 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100221316 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087669743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09825848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081930208 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098829975 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110412118 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081454564 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099309793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087093198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096121371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080009096 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101882411 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080518484 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102016309 seconds)
  done (took 2.796610662 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207161111 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102454794 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143552949 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108552539 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084956686 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108159085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104624366 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087782258 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105272225 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085381886 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102120323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104073714 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085290502 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103432064 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10343565 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085345476 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105387088 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08476137 seconds)
  done (took 2.675285665 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093452451 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100090318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.216407374 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101132058 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100694155 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085503907 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106538593 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110621251 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085187268 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100503236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092702272 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1030739 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102665903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083426309 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103409353 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082928329 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104458232 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083044755 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110402494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106588647 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105551762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092439282 seconds)
  done (took 3.035126622 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096392327 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101691735 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121177312 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085974395 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097394654 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081639679 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107786455 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083001271 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107523468 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102909835 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083101223 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099949376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0885796 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101661899 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105861375 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083657704 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10345177 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083167222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103078654 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07914561 seconds)
  done (took 2.683416825 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102505879 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102190141 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102407342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09416395 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102783628 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084321756 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111440092 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102922113 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084459783 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127229691 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103460247 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084250845 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113972681 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108295567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101728514 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093905919 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111621736 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112079793 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084350614 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102086312 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127490426 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084313655 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112358511 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102369595 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084826018 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102416164 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102497573 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090539387 seconds)
  done (took 3.605681449 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080651149 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100256157 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083305132 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098840116 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080901956 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098111201 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080729023 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098277013 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083123755 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097974102 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08311134 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100570592 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08296209 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101221189 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083013789 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101748181 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082737634 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098264558 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08139845 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098840101 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083177127 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101798074 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082667275 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098226111 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080778031 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101257474 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080433197 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098360606 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083022116 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099036618 seconds)
  done (took 3.495100381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090329631 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108658862 seconds)
  done (took 0.970301889 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079041911 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116532027 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080791507 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105481019 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088914316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103213657 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110353468 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087819487 seconds)
  done (took 1.541896391 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096366456 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112988512 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085136417 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116312357 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112610141 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099690107 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175888354 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103863525 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108815588 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081421747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116396066 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082838526 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108686839 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084095813 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108541943 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092792131 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100308955 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108390938 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087799508 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10148368 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088419831 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112193091 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105216912 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080657811 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10423778 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094537557 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11588395 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10334256 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087401314 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110230464 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089346928 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096616078 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083793713 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103981483 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099824522 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093897986 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120306339 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087295425 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112906373 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103611643 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095779118 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098059179 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106861892 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090944713 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112977757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085812316 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104780114 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07903921 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099900753 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08599066 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098154011 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101512949 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079020204 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109180061 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087543737 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113454228 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083202539 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103979603 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104782356 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087733012 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110272634 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086772823 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105325493 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083921268 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112420811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106517558 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094617068 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098719182 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077882058 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101008513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094981445 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127113663 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110020014 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085606932 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105144695 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081478201 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1071487 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104371731 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091149005 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110149327 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084718904 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110090444 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110662907 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084198682 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105242338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111596116 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082983023 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104604158 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08244555 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122018032 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08388913 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100681736 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099958285 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096031307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106514895 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084567657 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100531231 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092195686 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.098057046 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103388076 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08580372 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102852569 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096313456 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109419785 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109617858 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093865403 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110671381 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084614008 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106448515 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099949849 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086500819 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101835707 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092186919 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097258529 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086981817 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104225121 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084905161 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112567724 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100603949 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084477248 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111298002 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09086351 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102100125 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08114815 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105477997 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102986236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088189291 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112343759 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083117712 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098311614 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079723691 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106796316 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102948364 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088187008 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108953483 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087949942 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098180584 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101464829 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089285582 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113715571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085055933 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104611294 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10979281 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085983262 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102402181 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091120882 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107020133 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084588929 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109691856 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.1033549 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079564128 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106528423 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087249219 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102467248 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088166286 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107327774 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105957908 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086381215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102854339 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091597897 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10485336 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083346556 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103485914 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082843184 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11504753 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106638346 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080261469 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100470681 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093040201 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101680866 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102784363 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083320425 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106169506 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085659389 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102150099 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084547785 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105924777 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116520991 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090055072 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105471819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089517107 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115996487 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102882398 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087413278 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104120598 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086902459 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104584068 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093715944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110348264 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109680985 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087671133 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.10016739 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091219109 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111624315 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102468126 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082850273 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103471968 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089160286 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109206585 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089384543 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105811141 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101593291 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085118458 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108547775 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087831586 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104044419 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084358002 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109969423 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103468942 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093861418 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105436885 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114781359 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088062515 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099815752 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088982115 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102228747 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09105996 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09948934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082774981 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103034347 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105921747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084274634 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106733388 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079674166 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110900264 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092371517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104849282 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084041566 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103842088 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110664481 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086514365 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108784161 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088237728 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111896907 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115534828 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084924055 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107682026 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096443498 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105346138 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079460988 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110365041 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102895615 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084241106 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103628188 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083288667 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107132789 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094995108 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113151251 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098610797 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088327635 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102980182 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08440593 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100322935 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090633977 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108230371 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0856043 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112228249 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106376174 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089945047 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108589606 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085074583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106929574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105273004 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088148708 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106175762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08791804 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104332486 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088331055 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103856008 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083223227 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106338206 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105695886 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08543079 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1103393 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084990783 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105228735 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088008445 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106024972 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105722955 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085747125 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103407974 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088767853 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104783069 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08635419 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107434046 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080341656 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111934665 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105406012 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093608217 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104681934 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082428818 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111575459 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087815555 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11052032 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106100794 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087114082 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106840823 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084923738 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108277452 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092141301 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102633521 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116582187 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094746428 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10537668 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087894362 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105650169 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10651223 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084910193 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105223818 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087893936 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105374453 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085627556 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109799869 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088166136 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106077645 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10695517 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087177413 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105371966 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086893137 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099538089 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085286623 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104581551 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085296917 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116209211 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106057986 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08597804 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104392561 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086424702 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104825141 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082240885 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114357175 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116625682 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0869734 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113964252 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104060653 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087779559 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116962317 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080464957 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103812302 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083415616 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103322936 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113303737 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087525819 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115166713 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085266552 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104987291 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08310323 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106448916 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.092784845 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099484762 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082673614 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110284983 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105035608 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085143949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105195125 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089353487 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107652316 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117041597 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085435905 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105969567 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086706256 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102585809 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084250564 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104654273 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088679002 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106843839 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083287447 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103321794 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105512637 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087317387 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105950003 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086018327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107489647 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093331806 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106127104 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108805534 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089828716 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099977071 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089089275 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105172797 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086086514 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104593567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089433009 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109427153 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106467768 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096009372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105711484 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086354585 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106352911 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102506528 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08554031 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105787837 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086841765 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105099759 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087698653 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114490412 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084491429 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109046148 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105673793 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08781998 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113598599 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087430408 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109399167 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114006905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086674604 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10656044 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094719419 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11013416 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109086004 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087460054 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10745506 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0926394 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104856431 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092789856 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106533636 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08746495 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107688688 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103790172 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085836234 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105909681 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085296638 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113170731 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087146097 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105100632 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085435283 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104034169 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10703181 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089978047 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114447957 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08910929 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109215504 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081063234 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10383824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10708045 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084071491 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108116211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089781133 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112685648 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088168129 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107036333 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104585445 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096000715 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113072404 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090136237 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103983537 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090128189 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106661305 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108173453 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088051796 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105653713 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088333842 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110003935 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088878141 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105881777 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113566247 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089641078 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107475464 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087532001 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107004521 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086080988 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101596865 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087107715 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107896456 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111775997 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089652323 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106671682 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097613785 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104203966 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086509325 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111509086 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105557153 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091407761 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101777323 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088494798 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107992307 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087717711 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101905958 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106272972 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084305367 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108869503 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086997386 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102016565 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098569847 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116338904 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109487206 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085848062 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105582927 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082204113 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101390096 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085574504 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108189609 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088207357 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118500217 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105711153 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085677485 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101668695 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086918319 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109907124 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089952696 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104277168 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082353812 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106514097 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110018372 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092975007 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105487955 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086833831 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109929324 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088506678 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104247679 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111530483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082913096 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110202475 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100848107 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107854866 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087094011 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11415058 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115590807 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087573398 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101884073 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088125228 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110672308 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107127528 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088609322 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107847987 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103080865 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109522112 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106457224 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086038841 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109085939 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086621957 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115352325 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088313519 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10879058 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111396216 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088789852 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117091742 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090308159 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115517747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109757242 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090175702 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106047562 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087270936 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10533151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085302016 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108757842 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108182953 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091918846 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116242264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085619074 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119229876 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117441441 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088784798 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10417572 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086845961 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106480067 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081924521 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11125501 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085358507 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105927537 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105228054 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085949275 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107558932 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093153531 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108042503 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087736563 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107127037 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081272885 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109049813 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109860809 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08746876 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103428316 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087029634 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108033906 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091593829 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112089221 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084989233 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109669024 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109029465 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087934774 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102817099 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093884263 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106524043 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089926381 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107074314 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087859168 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108670779 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110603895 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093745133 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109714372 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088877702 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116773813 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11018602 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085221103 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104262225 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092576435 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105035536 seconds)
  done (took 59.768497547 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144990402 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08334546 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103177643 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082677308 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117204909 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104053339 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08212863 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10395846 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083728003 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106993953 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082106542 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103692994 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112574664 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127644715 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096822689 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10789622 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102829213 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083985894 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102726523 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083367778 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112710266 seconds)
  done (took 2.94721202 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103927499 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120115496 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11951947 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123687968 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093385685 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120468084 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119075614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119759412 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102765837 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115336313 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122847487 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120501117 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095750443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115717269 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114972236 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096096796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123587132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113694773 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119728253 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098986451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11738681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118466172 seconds)
  done (took 3.315201604 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084579762 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102966257 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088248001 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103225022 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087330851 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102511309 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091110474 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104831484 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090154462 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106790812 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105682068 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086229114 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108321971 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082603324 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106892348 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08514637 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156772943 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111707846 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086458076 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109041039 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102706331 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08935709 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10255414 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082979858 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105866673 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092046082 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107998195 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084945424 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107536429 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085325522 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10858221 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104962628 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088740577 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107445295 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086695642 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106698768 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086546267 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107678775 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082583004 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105558454 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087228178 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103801827 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087065807 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110817777 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.10543093 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084605081 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108579164 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086989645 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102167956 seconds)
  done (took 5.645740681 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104105463 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165755324 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089480538 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148282152 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125676164 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117010795 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090920979 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147566982 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106595102 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085932661 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12751218 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125303679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107976929 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09279253 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115477934 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108662283 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089653322 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106320935 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111682656 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087460996 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113051061 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094264522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124010552 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122986093 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111826577 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086631221 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108300615 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11290448 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101658818 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114360588 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112697191 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093287922 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125048876 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110326885 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086659541 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110739851 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125399363 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107993864 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089998654 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105459644 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089988589 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113375335 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114805333 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10527952 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108815222 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11432911 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087065286 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105218297 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121961572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089897632 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117228258 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125076114 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093004936 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109715809 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112953793 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123893846 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088835278 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107898338 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091276763 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123305817 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106355444 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09190547 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124189713 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110996707 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115670114 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10311304 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114129204 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112666863 seconds)
  done (took 8.404716595 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092980373 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113735866 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125205549 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124988042 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095750519 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115796717 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115119718 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09513873 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116254716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121056743 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116251923 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138755631 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08911873 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118895869 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115308054 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095495092 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116402842 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115825591 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094381146 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117247054 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115366181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12510283 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09461503 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125060435 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146432276 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110017185 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11543675 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09508963 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12645998 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115748528 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128060768 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095430495 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116711345 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126220032 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.1279407 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095145892 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108784241 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11523545 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095567965 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11547354 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110689805 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126295304 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095436981 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110603114 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116200293 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095677087 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125884258 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127902447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119146536 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121675354 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.095207367 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126288299 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115874113 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116867436 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105159787 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152270354 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125960833 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126993837 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116817395 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125825091 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125536633 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111948619 seconds)
  done (took 7.949546956 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107024132 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118055337 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122965715 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10445649 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08666275 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113755898 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086769468 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107553077 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118762739 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098214864 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122156912 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11389287 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096125937 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122593713 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114214965 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11664901 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09263953 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113923904 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11958277 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113745627 seconds)
  done (took 3.022768891 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093919736 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126139868 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088916354 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117570775 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11298367 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095336274 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111767421 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112568314 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089640439 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112473285 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09978606 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121469412 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110193913 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095703175 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121497239 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119121607 seconds)
  done (took 2.561768454 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097849645 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118581997 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124739622 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088386718 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10975288 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107221488 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088916873 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10548295 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084964131 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126195842 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088802029 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113687912 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109923146 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087035259 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106469208 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091646083 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106299545 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086417956 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110721974 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125197403 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100429341 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109348582 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111037927 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090462112 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110548655 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094788967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111191797 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108882429 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087367662 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110280426 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089454892 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118589979 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10679 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087486291 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108263392 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086348222 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109881901 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110537128 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093036133 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110336564 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087631842 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110438501 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088510569 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110884134 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105692136 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08999599 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106482174 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095829421 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108794115 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089380278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110758846 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112438105 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090559216 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121689475 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114027832 seconds)
  done (took 6.513167768 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099346428 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113989367 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084260694 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108355101 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092013939 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112069227 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113510546 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090405833 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112688212 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086402499 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112749072 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091695515 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112783917 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114001105 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091123781 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113555491 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08463779 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11266585 seconds)
  done (took 2.684193056 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090824597 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107593053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096396534 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110806085 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089363394 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113635973 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084476802 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109580764 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108769388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088768809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11019404 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091913212 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108487099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091731268 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110852755 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089060307 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112604377 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109310547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088996347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106396349 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091310067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108752929 seconds)
  done (took 3.060346849 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114062497 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126923295 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095842057 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237762352 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106480123 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136453076 seconds)
  done (took 1.659056469 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109619696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12498547 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111736821 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111028375 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120952211 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1121652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091734504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112999298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122907189 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105679171 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113799306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122514047 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123768025 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101090293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120460259 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119699684 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113701225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092032696 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111242443 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133163024 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092097075 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123888112 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113626301 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091539733 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114790538 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123180719 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123083437 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127516978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09184463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124202371 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119788772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091859306 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123858954 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129174317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115561423 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101468768 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113851811 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134593645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120035504 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122690562 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092818631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119282008 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123980348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096474741 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124951467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113998071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118823617 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092170595 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113814319 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14068704 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120435724 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101295578 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119928161 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122892971 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123659685 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140493592 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128029978 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100597684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119990901 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128257895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123466349 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120136553 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100587584 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127823393 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12028839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122774691 seconds)
  done (took 8.47817658 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102448249 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126466197 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11280961 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127603037 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101718288 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113779178 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113531106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091835473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113760853 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112957899 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157929023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09300827 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124607705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123341326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113823339 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092208935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113516868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122996077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091709131 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141770573 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11439395 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123996961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123302607 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101263224 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127636885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120312637 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114373513 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092040509 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113383662 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113323997 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097573532 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114647831 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123862882 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090883309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123860903 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115457152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113532903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097498566 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114008377 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120299868 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123193364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112635992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11439671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114857198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128827712 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092834808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113763616 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113413839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092695935 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112765152 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127929476 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106110467 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128775378 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123707046 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113960777 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114626165 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092689873 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114762716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09203359 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121200431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123125536 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113776194 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14205311 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092405942 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114476707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123625183 seconds)
  done (took 8.362738935 seconds)
done (took 159.833155089 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.226718287 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.210677532 seconds)
  done (took 1.283798954 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098153396 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141677136 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101482541 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176405974 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107348387 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121619948 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137915419 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096948269 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111198614 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090252882 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112648932 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091165359 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.177234278 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105961981 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086201755 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108283621 seconds)
  done (took 2.723761351 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.117587232 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254714163 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128653112 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108221708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093299796 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115873472 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088458793 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117417743 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093663451 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111852179 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093436799 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112633816 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089659366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.11304232 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116147783 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092468134 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112299775 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092481751 seconds)
  done (took 2.906703177 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109659694 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159145206 seconds)
  done (took 1.130610812 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244427541 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161054084 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.22844645 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.467585428 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.272091834 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35723412 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.199122075 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209793486 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16958965 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209142621 seconds)
  done (took 3.375237659 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118632088 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183615201 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320394175 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158580892 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11081172 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136745874 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.163458459 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137287388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.129985231 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106937251 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128165596 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.124681566 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145990573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100241837 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121101555 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124193303 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125856543 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119710344 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120907299 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099655882 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144892854 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111678576 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099932825 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120546315 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.124616206 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10353816 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111925186 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089191492 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124126 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.121273606 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096874424 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131151199 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125784185 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.163055694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130102739 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.164487014 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124228624 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096177621 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121368987 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095704132 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125137566 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125030561 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131434225 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102275609 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111344756 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102430246 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111954172 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089150841 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.120966942 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125350034 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098435585 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118873624 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159435875 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12113952 seconds)
  done (took 7.681507349 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793041888 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156035717 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092641601 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887813465 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137028525 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105343018 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.786130006 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111862737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257166995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760409364 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133376551 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120959619 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212432619 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260973836 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.013206404 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291696064 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669457181 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123919888 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151744842 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153703998 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1179844 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137020025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109007862 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.457923596 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116795602 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111792587 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096045937 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120318508 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164408028 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126808633 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114771337 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176537764 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248976671 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204182398 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115784215 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089450341 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110591849 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169499023 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267137971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194668913 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180204603 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108952152 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110710823 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099528417 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133375802 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111854087 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16723606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175143799 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168984953 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114427155 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118501141 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099541361 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124523607 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169708295 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.128364832 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328421757 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311250578 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08927095 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121831854 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125572595 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263575671 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101855185 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226730224 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139526902 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210947207 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09050837 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811921417 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16915659 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111514339 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095005138 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123262337 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120296218 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104000439 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17614104 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.399406268 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130889451 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120049514 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09554665 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233873205 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130738228 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095470009 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16945965 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122165375 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126652408 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107110016 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127936064 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176118287 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.262202619 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106148305 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125768224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118488702 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10776339 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123303261 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218123342 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227580613 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186178662 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210035843 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100704409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185619046 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169145265 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119060108 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173697564 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119622391 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102389253 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123217469 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217337443 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144835255 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12401581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093536848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118500027 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149313132 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126962899 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096182649 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193555987 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483130582 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169561123 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109093179 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127275326 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097663708 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184429863 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095234508 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258418059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122352522 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17021624 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120367386 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088340446 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126348944 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16994369 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128480291 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125627401 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103934414 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124488858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243213177 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223468509 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124311367 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225448379 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184009779 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118106785 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171415663 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121091527 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169830308 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122606312 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12497494 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101013089 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806117824 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125032414 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099191608 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12045464 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204318813 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11562584 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104229632 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.131206256 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114124534 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760334498 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128448857 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121019286 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102366448 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118978533 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120416253 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099196267 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119595268 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165931814 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230845039 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119619227 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120165871 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102960553 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181552062 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095292372 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126092854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125056415 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103349699 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12218734 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116310282 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109008947 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192533392 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163203129 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221555116 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568542828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113923913 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124444511 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226093393 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090199087 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291480649 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11923006 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22502293 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163461836 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101927248 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308508833 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187061032 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197350436 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105971693 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194394084 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088579178 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118691575 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168127492 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115162302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100286678 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.192164245 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108653905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130576721 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970689389 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089704377 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246662981 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08793751 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.194702837 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095680698 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120327985 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295413939 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090685695 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127809162 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165193419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114881207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12537324 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.724592543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126182694 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121334269 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096015216 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224205458 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164853858 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122239936 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125298868 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103416483 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193293472 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215658479 seconds)
  done (took 44.553788241 seconds)
done (took 64.510868239 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286425597 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.224348446 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272459651 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170530071 seconds)
  done (took 1.918481081 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172017884 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150687124 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121837445 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110639477 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152595292 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087558433 seconds)
  done (took 1.680853128 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361484621 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276656324 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24377234 seconds)
  done (took 1.77225745 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.322496817 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25771375 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477497568 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.33037042 seconds)
  done (took 2.375018424 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212619971 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135941091 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11279666 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104083975 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203461252 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248882625 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142772818 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.2033029 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101069486 seconds)
  done (took 2.399087266 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.201576669 seconds)
done (took 11.238390243 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.192870166 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.248387234 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.191373355 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.240929621 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.198456122 seconds)
    (6/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.143378343 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.180246807 seconds)
    (8/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.127330289 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.104983884 seconds)
    (10/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.289319073 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135337904 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104365793 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.135679725 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.149373099 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.252029727 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101927706 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.198658032 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.232587177 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.177899831 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.155328782 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.23231402 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.234169435 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120417058 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183598008 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224737773 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090968367 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.198975834 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100210895 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123062868 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.126011398 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.133123392 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.130065379 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097273588 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.22684795 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203057351 seconds)
    (36/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.121513952 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099408125 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.128916291 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.243272577 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.178769348 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.192260663 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121214496 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.142165029 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159397122 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.101316403 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068230278 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092190933 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095655252 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.139494977 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066689307 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091291464 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182243175 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128063295 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.143965434 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13200922 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.123239316 seconds)
    (57/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.222087127 seconds)
    (58/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095507684 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091987396 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134090049 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110670405 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170093096 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085909675 seconds)
    (64/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114608351 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067521143 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.165928816 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096773138 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11093593 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085963706 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.095061056 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180317337 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093690978 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124075232 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.120445216 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.142581452 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09961902 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147662177 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071956511 seconds)
    (79/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.143893794 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.180671499 seconds)
    (81/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16125421 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11629083 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096613943 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195767842 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.112082832 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.209477432 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101530004 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.1111018 seconds)
    (89/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100693119 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.14026653 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.142491317 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.162562694 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.130121864 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12877659 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087441797 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.210697326 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100077112 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.127160031 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.179382988 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137400478 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.128195915 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.194664255 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093945779 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.188669695 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.120921886 seconds)
    (106/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.164259665 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181556048 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092190562 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.147630718 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174721815 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089409449 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120110682 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13943389 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115625039 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188147104 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.201118648 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195756187 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.146716758 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067386764 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097894654 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178369642 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112276994 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06852513 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.334485244 seconds)
    (125/309) benchmarking ("sort", BigInt, false)...
    done (took 0.226974839 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.1899162 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125241285 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109757865 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140943449 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112475361 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.2203612 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.140121891 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154782523 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.070536531 seconds)
    (135/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.127672804 seconds)
    (136/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146809821 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136568358 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116713593 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.162345228 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117663194 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068122759 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100455383 seconds)
    (143/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.125262567 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121086581 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092335886 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.125552356 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.187679846 seconds)
    (148/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092554096 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.148365034 seconds)
    (150/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092839015 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.139246352 seconds)
    (152/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115827043 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117025632 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115679038 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087046357 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120143612 seconds)
    (157/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089779405 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.095644674 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093455214 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119662866 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095857906 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109040589 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097804474 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090223505 seconds)
    (165/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085390649 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212582591 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1870221 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090059974 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.095924602 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.13159415 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128252062 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135179097 seconds)
    (173/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075643215 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108364351 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.091044916 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216418308 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089122923 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109794052 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067058344 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119998716 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077226123 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076692402 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177451776 seconds)
    (184/309) benchmarking ("sort", Float32, false)...
    done (took 0.175458571 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135340091 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225148651 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172050481 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121336382 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.219109224 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142219642 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087862513 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121026116 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06721258 seconds)
    (194/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11019126 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068119634 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092189021 seconds)
    (197/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117941386 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067703334 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090068093 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110793666 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109017206 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095865332 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.099354124 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107449167 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110151625 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217017548 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129864566 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173985007 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118208216 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095820612 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138383916 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087037578 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091016411 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092445436 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06717909 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196975779 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.179837936 seconds)
    (218/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114134419 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09319357 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.111395738 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090551036 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069808255 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11310624 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069173132 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094480748 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116989816 seconds)
    (227/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097197826 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09229527 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.193540055 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114640295 seconds)
    (231/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.131940802 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092076347 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086506634 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067299228 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136724713 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110365977 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082694059 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112816676 seconds)
    (239/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.072210686 seconds)
    (240/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071394256 seconds)
    (241/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.146023335 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090253111 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.107835152 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091797574 seconds)
    (245/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133758526 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098917528 seconds)
    (247/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097793802 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.072476459 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.202771977 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074505045 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.118026121 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094493134 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118788558 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095690294 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.097503416 seconds)
    (256/309) benchmarking ("sort", Int8, false)...
    done (took 0.19699846 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099122181 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.125876984 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093488017 seconds)
    (260/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.098824842 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.177982942 seconds)
    (262/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106215502 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112963245 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097177927 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117232096 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.118517479 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.105897783 seconds)
    (268/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07784833 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.139481003 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.070109385 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115341036 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.070481527 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127111866 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086944392 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092598978 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146703923 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.16857814 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114425827 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07121803 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069365982 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.115300189 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117730294 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.144202736 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.123207527 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.153724507 seconds)
    (286/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117769985 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113977532 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093248128 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.116372098 seconds)
    (290/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118847583 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.099896026 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.072868913 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09221351 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125648742 seconds)
    (295/309) benchmarking ("sort", Float64, false)...
    done (took 0.173142972 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096382858 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092139347 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086673946 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110750021 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092932548 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133048862 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076976649 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091403957 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06812567 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110491769 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092278752 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069401976 seconds)
    (308/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.101541615 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068747321 seconds)
  done (took 40.742181266 seconds)
done (took 41.63815211 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099660993 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136122125 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096536587 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135974607 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123943877 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091728992 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119151094 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098296364 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124066146 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125511404 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098547189 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093677185 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09607887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121154455 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097476285 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135669814 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124645336 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093715372 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11985104 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086144826 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11987732 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088443697 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.116718953 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073636936 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124464176 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.097131022 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120813494 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123221284 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087712924 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112817159 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092068186 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120451395 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087315755 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125158151 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093694535 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119611085 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097074201 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121629285 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112738438 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087388797 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118876858 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087025655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117756685 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095141422 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11689045 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092416206 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119733928 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099188135 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135833687 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11378291 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096013698 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121162463 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096515009 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118784388 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090927639 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122430578 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118752114 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111694282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.124348447 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089546488 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119376824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09547111 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116706375 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119358782 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095349581 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122556388 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098091902 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117511187 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096893921 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11640559 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08646271 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119631044 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114340089 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086736608 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.12114971 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098472231 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110696054 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092915636 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118686355 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094305356 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112986567 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09331686 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120993671 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099043712 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120410024 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075995117 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121491158 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09733679 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.117904255 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.102220616 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.125128032 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100011924 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120353571 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125661047 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089243712 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118901427 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088912215 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114269001 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090954229 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119791244 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091191649 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118727227 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099037519 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115732377 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095841906 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125122254 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087296884 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119319017 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086712752 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110445875 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126258576 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097637281 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111952469 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089794497 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.1109708 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094329334 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111132318 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088415193 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112870887 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087994753 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117903397 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087326916 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113451587 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094341433 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125328754 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087259723 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115036976 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112887015 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087481986 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117276398 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087659483 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112162124 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089069959 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102645973 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089602057 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111720171 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0951483 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113677293 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095656388 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113771749 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096626814 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11644298 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093124192 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117693477 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086649923 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099661885 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090031552 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114068896 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089672633 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111141789 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090809217 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11362831 seconds)
done (took 17.1497197 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08740829 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185602826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152965369 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142861805 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10881044 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111960637 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122816371 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119752225 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113900724 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143845584 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111268803 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132672354 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148401646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088013044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112976605 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091396441 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113358095 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103597367 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146366074 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13391035 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1659869 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086851372 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148106006 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136408065 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121619198 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105434402 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112618367 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092322184 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115500076 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112708204 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132900361 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115471795 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087878439 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134698214 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105074699 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121072098 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111511729 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094848261 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112157024 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087981919 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141917073 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13430967 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093333715 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118282939 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091435832 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114687874 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089756067 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120914284 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123051751 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092307206 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127735146 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157196343 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091002009 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121959528 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111347751 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098660167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122030177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090496859 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113277642 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090378334 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112159494 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090782059 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127582996 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142977891 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116294067 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097525452 seconds)
  done (took 8.650937913 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104152384 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139506943 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129946543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106136969 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112327766 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088228737 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114216378 seconds)
  done (took 1.757708395 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088812057 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135471359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128891293 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136411981 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132559818 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108605848 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123686382 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088091035 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131929185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089718924 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133954345 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15334183 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089939106 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12270175 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138717332 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088765983 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136958141 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088447776 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117292158 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137514916 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091631032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135242897 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091002742 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114759393 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10319962 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114396135 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163299009 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094396755 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11646561 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09218021 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112869614 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169827872 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103270422 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125337252 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113865902 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103580579 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130265762 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087187561 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131668381 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093791024 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12841641 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115088665 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090813912 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112945544 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094322335 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124881909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090213021 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115447079 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092096475 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135288192 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089779111 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128729232 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11406425 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093496206 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116358689 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095406626 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124662598 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090024526 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134325634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091395183 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131288864 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13188423 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106035357 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131603135 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092122559 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128177954 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128496392 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092544349 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115767309 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092900892 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131449641 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086512505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116113323 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099736417 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115512275 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137848562 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112655841 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116405589 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100884907 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119540924 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09505305 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.12267413 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147581485 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098811186 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123185695 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097904464 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12379152 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087152622 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.11677469 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0941252 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115082258 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091187437 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118156465 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089775143 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118003174 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131063157 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090817906 seconds)
  done (took 11.950370332 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090081784 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115502156 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092407221 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116268436 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090198808 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115921874 seconds)
  done (took 1.596878181 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114224458 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118528654 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10507553 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120786754 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156838467 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129725296 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104602462 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123786495 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107994055 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12775434 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130309409 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105047896 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136927097 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122534991 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104230472 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123448918 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130186887 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099924989 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129006665 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097000965 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137684285 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122219988 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096143893 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132492869 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119079967 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095622292 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12678607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102610517 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128421979 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124569586 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096466657 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118874766 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122454393 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098957401 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130918802 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096343702 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121138784 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120205266 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100752237 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119618478 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130693044 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096923542 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128073693 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094929531 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125511836 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124060585 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094011625 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125868245 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130189298 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095347886 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120845131 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09621864 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119535182 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120717234 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097108659 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124600381 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094450692 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131212684 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123174868 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096057124 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118754003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094311596 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12408247 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119072825 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104588845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120732888 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122111956 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096253572 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122636114 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096021301 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120403093 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118167891 seconds)
  done (took 9.300951067 seconds)
done (took 34.21127602 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689519148 seconds)
  done (took 1.65999053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.725113952 seconds)
  done (took 1.697187335 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.433479938 seconds)
  done (took 18.401376204 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504042806 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585236035 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.883724413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181464565 seconds)
  done (took 3.121503846 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947792986 seconds)
  done (took 1.937368295 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.246324249 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232248422 seconds)
  done (took 1.455344537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781595009 seconds)
  done (took 1.766132816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.347720953 seconds)
  done (took 2.325699486 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332335815 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185721664 seconds)
  done (took 1.499404285 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.565260831 seconds)
  done (took 1.547555124 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.788947353 seconds)
  done (took 7.780834505 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268175034 seconds)
  done (took 1.267273685 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302053221 seconds)
  done (took 1.289645244 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.580448496 seconds)
  done (took 4.570987026 seconds)
done (took 51.298794192 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099041553 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127322246 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10223718 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124380923 seconds)
  done (took 1.436327642 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101227915 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121305629 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100625384 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121453803 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126819042 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095586457 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12446023 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100925121 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122493331 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097233249 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121341563 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120793303 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098772161 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124014053 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09309666 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124844882 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09941677 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121544028 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124624571 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096938455 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119432906 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09746235 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125629923 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094777157 seconds)
  done (took 3.667510828 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100527012 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120137879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096839606 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118437765 seconds)
  done (took 1.434067622 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10022896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142327919 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1397705 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10133178 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144026232 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13712956 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093005991 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117910009 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095219801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125435688 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090971616 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150660929 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139027048 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100800948 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127365505 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089032675 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118575985 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13946307 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101428932 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126864361 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092761961 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125079488 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090742299 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139493454 seconds)
  done (took 3.821665185 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170533315 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128257817 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139250717 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095341366 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160769963 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141123375 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088586244 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141794029 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087943392 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132626264 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119035897 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13384522 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130692147 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088585108 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116400975 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088660538 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130167649 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129616359 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091338844 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128335922 seconds)
  done (took 3.443930967 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098022099 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118014562 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088458992 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117020073 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099668828 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121800402 seconds)
  done (took 1.642702696 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090374776 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115214682 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090726421 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114578962 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094663241 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11721553 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089980339 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117416935 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089868773 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11495655 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089510513 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114027012 seconds)
  done (took 2.239363599 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463096566 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094094029 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120925799 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112039725 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097153411 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115856057 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103991675 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121471927 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141239211 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089627945 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115479606 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09146763 seconds)
  done (took 2.665825505 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239328832 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125672139 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29381528 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19592031 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161489619 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17243973 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154286808 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167252308 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227206958 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159873252 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210503207 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222434698 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126213183 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221333527 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139651352 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120287271 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229063825 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222324965 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156504331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234994525 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202723229 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167611012 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205803891 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12710667 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139692098 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169746361 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122228151 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130268368 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212542775 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206786713 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191721127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164401104 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147592863 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245324258 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25106403 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198776584 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194364155 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136805283 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172099732 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169121338 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267505682 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112434541 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237917063 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160144706 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131647379 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198059937 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168030233 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175624877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150088012 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139415425 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224298093 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216928136 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220236041 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11272565 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168140221 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161464609 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.194096428 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130283137 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252251414 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227979421 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182938777 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120975714 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122463316 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219231343 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18480037 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167740321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182703986 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147293538 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220976927 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188434743 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168002698 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191893853 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21132727 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139616115 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172478097 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175711086 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173051771 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259432932 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180791912 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122511717 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168534864 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149618079 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105009391 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194552429 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124541349 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218037901 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150179471 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134714795 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170629334 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16250973 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161973217 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200010328 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21897639 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12107363 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111460689 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156196326 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155277669 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190636721 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139858176 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160240521 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16225123 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129767676 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180131065 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098250411 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178011152 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118031294 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178846434 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185206138 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126857443 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160064469 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153882191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151485019 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179447337 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200449761 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142234247 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133826822 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209393137 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176168197 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149668803 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180470544 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228145132 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143713321 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121773464 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226678467 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248786421 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112903199 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233778914 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15573496 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135450715 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107740704 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179989119 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157042487 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161376729 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13428708 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183500088 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241487238 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09838301 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140179376 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216134749 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106689565 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132681916 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163395541 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149439573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138712054 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120742574 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153751823 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210100336 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181289772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154400053 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167966283 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151619645 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25239585 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140401729 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124234369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149473552 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120793314 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194660305 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198806054 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131305628 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231293212 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173969798 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160468121 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172104011 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108037085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177090176 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130885669 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119764781 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195774139 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168128471 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162553182 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223997559 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132860055 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.210156941 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184690139 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17246756 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175684885 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165388815 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15834366 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139488731 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161435192 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16748337 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123503726 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.115178654 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133966466 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157309174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143932234 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133370273 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200885841 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17070246 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152468929 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160542684 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150416718 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182159985 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128321301 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179890825 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177804331 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147673326 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198925103 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22453031 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189360783 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14341636 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233337867 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094446514 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125000251 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116477522 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19848616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107485279 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136903594 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167262036 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18273309 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1849748 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202646862 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169496271 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178417095 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191702348 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122510634 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142006941 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213725469 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177180136 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184450831 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116359917 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153156271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177629201 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156300838 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25783067 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168252892 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178270487 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237341946 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149965141 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105193416 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151404557 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213623029 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154485069 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177264587 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147995042 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113729304 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161791052 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133243348 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16076949 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21146943 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16340293 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191327006 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15006161 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186867491 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127908571 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166154521 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159807987 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165646711 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081204452 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176757629 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232648914 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148388365 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171179638 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192561793 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132429137 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.18001533 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24052768 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196278778 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137116964 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159348706 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160795708 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163207027 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17464362 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178618549 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159753682 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191156196 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160043937 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136039065 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111961331 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149941757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152955666 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133589378 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14921241 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177613855 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139417516 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189423587 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161445064 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160471151 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172660525 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150458966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145043896 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122499366 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245752061 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176045048 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244409326 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150550272 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179412823 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20601835 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12739398 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131467684 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106884539 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178748767 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136941646 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191088363 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.15038136 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162303054 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181971214 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220969937 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11225996 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120862041 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158413984 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174428311 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170457212 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151584623 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158785933 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234488153 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115647581 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132477802 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172572257 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161984429 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119467876 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225927681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080806783 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1517914 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127839155 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10612413 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165756205 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237549615 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136493402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158612487 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169648909 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196697594 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164149173 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122338375 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151574927 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171009505 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231229668 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1857763 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131734206 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130478615 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206951812 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19647998 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161014619 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139730701 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204290333 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221276325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199502843 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142782589 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170569605 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168905282 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158029373 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186464479 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135735101 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207117175 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135018111 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225780029 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15491314 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143013845 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177753631 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.150581237 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115239761 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214632101 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17553605 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136362021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106555135 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167938848 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20460985 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154371782 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100351019 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180852299 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126107344 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19185042 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26354131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133250636 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156239837 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147936174 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107446788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156078733 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158754563 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139983486 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162571071 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205879632 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135672889 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191268899 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23171965 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171223881 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174513951 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144673958 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693162149 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131329863 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196811674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154725421 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234307502 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123629039 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201286287 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13085809 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168514213 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224644774 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160549323 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231070636 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192462381 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.205935019 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104663757 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159032624 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162043363 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143923815 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15457279 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168959992 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161600405 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153983187 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178799461 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168579855 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13490175 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140040445 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2004185 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156242206 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186900973 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182528161 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140271671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174360442 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213256491 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10692236 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.209153498 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209161905 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146199075 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150398682 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134459993 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155275441 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234385888 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123631416 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199586753 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205104402 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158242265 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167950274 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147588566 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193070173 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158696719 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178352012 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146357968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159602868 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15733189 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138202064 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105277103 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155816343 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166068814 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14916252 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158237326 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165927336 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19745967 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123030455 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117737185 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161339991 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2190974 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215214091 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139029484 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135205047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162809057 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123814078 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.203318011 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178547968 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13567909 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108470782 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137728773 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131721137 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136806169 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156324631 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161908554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167296245 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206404408 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13756669 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277724001 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140213537 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155324696 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089361275 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13218155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150740242 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118601268 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156950661 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153015293 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264377551 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147147831 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106036303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149748314 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126498314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136459839 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138332022 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192554958 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177409654 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1455691 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08156108 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15993483 seconds)
  done (took 81.500074417 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173819593 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15404565 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158937089 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224352803 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19002282 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292515223 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233909726 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268628781 seconds)
  done (took 2.781530844 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093931729 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145860821 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160373295 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133714575 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091704805 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119851854 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34591778 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.138800149 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11696116 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121755963 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176108937 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094235935 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.526117293 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.119506414 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119878338 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083173352 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.117639779 seconds)
  done (took 3.787942802 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.48150545 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71872665 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.504185066 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098787371 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.218207701 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113221874 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.823944709 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197045922 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116051833 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485695894 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772520641 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.168096525 seconds)
  done (took 18.782777945 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099765026 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122367901 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108778092 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135851475 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096874148 seconds)
  done (took 1.652130576 seconds)
done (took 129.842100162 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105156593 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407059416 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072658525 seconds)
  done (took 1.598552465 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108510603 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138223563 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109590174 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137901112 seconds)
  done (took 1.591146632 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098173328 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130157132 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110255294 seconds)
  done (took 1.429678779 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325592087 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193041346 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.149736225 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106360965 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130357289 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103816512 seconds)
  done (took 1.432377053 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098215903 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128385178 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098296234 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130201264 seconds)
  done (took 1.550156688 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09541799 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079588241 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.110956962 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0808997 seconds)
  done (took 1.456598196 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115276301 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132334923 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107693962 seconds)
  done (took 1.452376149 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129885096 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139290624 seconds)
  done (took 1.365777832 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106133872 seconds)
  done (took 1.198572515 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118580615 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171377034 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.204297544 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.177006072 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.239771013 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16601011 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.144305988 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114411032 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132805264 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144495613 seconds)
  done (took 2.710553684 seconds)
done (took 17.65066056 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103556027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.425844873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.420481793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118551116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729927061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389177355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039536911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156205668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177742544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101886238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148810481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680559481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.063214202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.388619901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.028266538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.38623315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713075491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094570499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121866175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095034116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014957224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099267746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127286085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0941331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704610663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426615056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095046708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376612984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094138471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128099836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.411267552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095404331 seconds)
  done (took 17.13720675 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095741134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175225303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106356635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138613942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125159192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095390721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125183189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094451247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180267805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130095201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142532279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093203383 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127394277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096311214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142792701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09900489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125714225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121982153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093735291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122930773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112303508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12133296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095120362 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122786874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095287472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136418319 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12359165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093667929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121745297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099591615 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128954356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095692843 seconds)
  done (took 4.882175645 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142051373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184599862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135824907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128299984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169453619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125913343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199947601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148736005 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155590646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124374803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141036519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096190864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161145194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.131151695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115199145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124222777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10036453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125632627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093555754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124155983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14100961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095832097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129224457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096761567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123731502 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139041352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095292492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121939054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093501985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127703068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106975435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12982488 seconds)
  done (took 5.233831614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097728684 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128621726 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110284038 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144697265 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103742064 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132978906 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.102650094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129210697 seconds)
  done (took 2.055094705 seconds)
done (took 30.404496332 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10447343 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123961513 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099023605 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135670634 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100695283 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135631504 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098637498 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136342502 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099902306 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126912916 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129807123 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092823008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127767165 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092900275 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136617873 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098068177 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.143239755 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10603015 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.141921731 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142916801 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098945214 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136366416 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099772196 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135776041 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.1084748 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.140662279 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13683144 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099633485 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123078754 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096173897 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125081126 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11114159 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129726165 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104524853 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124379193 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095048222 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122862996 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096855459 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.140630163 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107503693 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126064176 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.130462191 seconds)
  done (took 6.058639884 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107865492 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144041524 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105363262 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087479513 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118124953 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081444604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139725509 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087327363 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113744837 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108740884 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.08285839 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.114674815 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081012316 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102682144 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077852563 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076615686 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109301935 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076563002 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077121609 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106862931 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080118961 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073189037 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108854789 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079187144 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105085944 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082369137 seconds)
  done (took 3.633530799 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100582804 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136750763 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113537263 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185838268 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16236473 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100505315 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133497947 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141188678 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109814829 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121055232 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097476402 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151530046 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118843097 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132073205 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092344646 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13840433 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13687945 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094861067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129285454 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116113338 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142500406 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103907531 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143816053 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134515958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093662871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126969811 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097028226 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136600355 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.106480393 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.139080344 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127043989 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097165931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124504008 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105706124 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129182163 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094608373 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143472501 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132474074 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102094842 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123075895 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097512467 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123148346 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114024471 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.176251942 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123434205 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101032951 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130173407 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.112801325 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.131464369 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120073855 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138841779 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094572142 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126060888 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121088909 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095230768 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136274606 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097178202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124190575 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10310748 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125756185 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107444091 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127212162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112305517 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122844281 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129716776 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092748821 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123092479 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093861979 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145717928 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102670303 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.172875023 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.1300769 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094854331 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132440368 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101492697 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130407708 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097507885 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139074881 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135610388 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104202291 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132282065 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099426823 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125779939 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113117314 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.129648036 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096002043 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124227135 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102067611 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125932991 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094215603 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136868208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123211832 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098983845 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143315329 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.100437274 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.131022479 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099969259 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12831973 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121366602 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10752166 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128930943 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098482915 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136934552 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097535875 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129019384 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110010112 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127831541 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121752453 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098448038 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129279279 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094596217 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124846755 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09908844 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12451037 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106103554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130828475 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101433457 seconds)
  done (took 15.117335227 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228639067 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219337467 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.12590886 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.219009516 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.1059525 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135455672 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21818353 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156728688 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094120401 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124699994 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094291714 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.16332909 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156377873 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.167430155 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105037661 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122208927 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111914593 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166217685 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215557159 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207777944 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145584947 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132135275 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.096439242 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12580322 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.096743353 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133447944 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142289813 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106529413 seconds)
  done (took 5.24299838 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10841864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157083729 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099626864 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145903496 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1496106 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093612098 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128874162 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095476029 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136070842 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137119973 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093984338 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130572947 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100624055 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134360127 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124100261 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103707439 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133685109 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096031498 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126692276 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098088956 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130150444 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133325405 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097944142 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123571213 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103274578 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12258405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086911761 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144119553 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124020423 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116093095 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122232882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101099141 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134836835 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093766244 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124018833 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.098345019 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126318451 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096434555 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125204666 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121473905 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092455667 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078160041 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123475176 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136836048 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099756053 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110753851 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101627919 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129635301 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095831306 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121688027 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096319893 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125972616 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097874549 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130846161 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098502141 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125554678 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097317006 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116986299 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100218815 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126585325 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085549248 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124734883 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098819352 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119438685 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102058288 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129494079 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092465759 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126747941 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.127523664 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101222992 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125833451 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097459296 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121509032 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096051447 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12689625 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098441281 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127345968 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093752006 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123480331 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094875938 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.10682914 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094258528 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104679261 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097271341 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122727094 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09400635 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125439027 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101102342 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138280881 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124752563 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102802948 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124507962 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093552657 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127858779 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084695154 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126077365 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108973937 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142414153 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094227537 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122589529 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13777984 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097054503 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123322984 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077014019 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131713034 seconds)
  done (took 13.077162721 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117478486 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149385891 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096229322 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139056131 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151435865 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117797056 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131380638 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.103091334 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127747541 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118280628 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127139832 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10232748 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128539811 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132521245 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117067392 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132751698 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096404714 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133866506 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.103220758 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16074941 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13765155 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109067484 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13533004 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094578975 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129313333 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109532237 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150794522 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134528447 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103828245 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138779534 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.105184815 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.151294919 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111309422 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.133035143 seconds)
  done (took 5.364111054 seconds)
done (took 49.601107131 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.219170882 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.42049354 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198166368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.134367207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.249815208 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.208591045 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.233525643 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.199083667 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.746321938 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198210739 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.459260361 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.872815085 seconds)
done (took 60.271267162 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.280651214 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.33391179 seconds)
    (2/2) benchmarking "String"...
    done (took 1.466778001 seconds)
  done (took 3.937700267 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.63877548 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.153745257 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463506387 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200361713 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.21738877 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494388608 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.87995566 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.584537643 seconds)
  done (took 28.121021791 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.204723629 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.60428159 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.947042088 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.962403717 seconds)
  done (took 18.847571596 seconds)
done (took 60.955740306 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.229355378 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221115757 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219119301 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18040813 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320655731 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.23818827 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.322815781 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.36430859 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.217519663 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183851739 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227070939 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204100688 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.21326619 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.466480407 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.206993717 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208997206 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.237180368 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.866002603 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.625296815 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216295477 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.219845107 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.244220548 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.229244902 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210966641 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.259280017 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202707561 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207687978 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.22265212 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.861091662 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209675023 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.221878267 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.511362402 seconds)
  done (took 190.698817805 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.201593112 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.289664074 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.401915533 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246060866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.636157029 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406160724 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.338449873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.702992157 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.226317167 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228236287 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.40409444 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.209430803 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.479477519 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180050717 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212954937 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.305809522 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.402255211 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.488331542 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.226165528 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.481966628 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224236033 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.426098958 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.336722938 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.380896788 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.237977772 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.299170366 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.232689762 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.228629858 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.410100317 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.341598863 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.265600649 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.213564156 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839514432 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.066690925 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.204308846 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233196071 seconds)
  done (took 150.142684755 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.485611827 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206449828 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204628804 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206231908 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23787349 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205383044 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.79766591 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801510475 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.753261296 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.238401215 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.645174485 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495441703 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.205626541 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204533005 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30292521 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218806799 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205608574 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22105284 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247681787 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210939925 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205718251 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798106014 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222775005 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.235000211 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389219521 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22103671 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240105627 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596873348 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206048677 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239110651 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.539072407 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255466127 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205957996 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620641551 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.263234031 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323660719 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208173815 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24017259 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206316857 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.489079655 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206526831 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206098979 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208676468 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872212003 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205867206 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801320935 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212721093 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.186583435 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207315206 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20770417 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.020209433 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.880089093 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224192479 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207817671 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210446584 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207669684 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207787746 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241421622 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.765079651 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.308361205 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226736301 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211468309 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240188203 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208539024 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.620038063 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213171283 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.127334726 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.27974644 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.315716101 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802998662 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213262623 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306251232 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330006278 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207548094 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207818349 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208366864 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.208188315 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32186986 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209400893 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.647232801 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.387849717 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225869031 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.648760113 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31217518 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208666032 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625617693 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214242659 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209489202 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982524369 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307268957 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209957563 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209703923 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209193641 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208887966 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.649600934 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803987208 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491379017 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21517804 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.856566625 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.218299248 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209555214 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.209808071 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.668002949 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78045616 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870746975 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.21055787 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323414421 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388453673 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228720077 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210650993 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.65856756 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216239478 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269292661 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209736304 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607929027 seconds)
  done (took 368.405313391 seconds)
done (took 711.863257837 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.881717943 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.87362136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.989750923 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.872213571 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.830768996 seconds)
  done (took 10.58594333 seconds)
done (took 11.724283261 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399004005 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.401844293 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276837329 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402371202 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246445411 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.421190549 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387196686 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237174056 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316526249 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.2951801 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314158182 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265443425 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241552327 seconds)
  done (took 18.34294028 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533452571 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.514766216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275493112 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535263405 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251676513 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546983181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415152787 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427955788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427928108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249069343 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226731447 seconds)
  done (took 16.543687915 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537075989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.54900414 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279163321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559635554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253082838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545503825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417996954 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433958124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453838381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24838568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226928942 seconds)
  done (took 16.643967108 seconds)
done (took 52.669428364 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222610219 seconds)
  done (took 2.361878135 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258366188 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.426261294 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.244769677 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227288375 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223877764 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225075759 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227589059 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.2248663 seconds)
  done (took 11.198830834 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220005218 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219415012 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.223035371 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220363219 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220688177 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220930471 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220055245 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.2227126 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223029364 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222830027 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223754805 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223102701 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22350686 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221154771 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223095215 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220981634 seconds)
  done (took 20.689137395 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22299326 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221703168 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.220739704 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22048049 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222014384 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.22130995 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222340387 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221945559 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220443217 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219379652 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221183115 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220573903 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221742746 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221290349 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221844602 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221954151 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221342729 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.222489268 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.227045268 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220994838 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222354259 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22146259 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.2221831 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222650493 seconds)
  done (took 30.465916465 seconds)
done (took 65.857032215 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.447478446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.038772394 seconds)
  done (took 9.628791257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224709049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.224130282 seconds)
  done (took 3.593207836 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223927409 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.224410257 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224115024 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223971745 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225311168 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224543369 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224303325 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224145263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224699805 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224187834 seconds)
  done (took 13.387297583 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225507471 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225011795 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222428375 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.226447605 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225583233 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222673293 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22504238 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.225864992 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225992683 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.223978519 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225694398 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223120651 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224755602 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224441482 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226372879 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223777596 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222987716 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222431504 seconds)
  done (took 23.186029908 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22498413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225452943 seconds)
  done (took 3.59379272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.223138651 seconds)
    (2/7) benchmarking "second"...
    done (took 1.224396733 seconds)
    (3/7) benchmarking "month"...
    done (took 1.22391926 seconds)
    (4/7) benchmarking "year"...
    done (took 1.224632676 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224067712 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224774367 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22328617 seconds)
  done (took 9.712426442 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227504202 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.403729535 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486984017 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.843372997 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.228209335 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229794788 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.091445447 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230649429 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231492965 seconds)
  done (took 14.118858518 seconds)
done (took 78.365626735 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.264865888 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243233965 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.504275411 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.246907377 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.24042752 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.563717588 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.272650615 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.353815388 seconds)
done (took 37.837536446 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.237858815 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.992510046 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.987728085 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.22134937 seconds)
  done (took 11.347482759 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.214444666 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.197515064 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210428214 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.270902019 seconds)
  done (took 18.040215955 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304400754 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563405247 seconds)
  done (took 5.014767197 seconds)
done (took 41.788210556 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230139922 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.228243421 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.226274189 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228093165 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.225548891 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225287515 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228697522 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.229956431 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.225293086 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.229574129 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.229323422 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.229725206 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228468299 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227105893 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22684538 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22905839 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230562364 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22861521 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227075013 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227917157 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22897261 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226670867 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227513544 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226565243 seconds)
  done (took 30.619362345 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230812423 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.228525135 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229310095 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229436307 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22783756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231630092 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231032946 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.228294307 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229823898 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231263126 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227032318 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22755066 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230689909 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227582614 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230278672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228957955 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.231665042 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228597254 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229770461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228095683 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231012008 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228620408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.230053521 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231654144 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228575444 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229480035 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230680536 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229574085 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231295611 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.229476058 seconds)
  done (took 38.038853053 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237180984 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.24045245 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.231961326 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231641616 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232498923 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231630681 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232096307 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232153342 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231503505 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.232647761 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233091999 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232514131 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232493992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231995587 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233251122 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233230733 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.234870149 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232485764 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233047168 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23290694 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232626113 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233222492 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.234119885 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232929143 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233860205 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232472535 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23292342 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23313985 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234329143 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.233615048 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.234987522 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233838464 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233380613 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23369196 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234189843 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233367639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238740867 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242348649 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.234151386 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.235383418 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235971401 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234661526 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234585888 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233196293 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23434172 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.234973465 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234393898 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233868992 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234914894 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234539059 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.235755799 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235269606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23529904 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.235593564 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.234745392 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.236315342 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235585588 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235856227 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.235201759 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235722331 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.237126913 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235740368 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235622905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23623628 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237712278 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236663406 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.236678615 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.235369204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235554794 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.236860666 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236775036 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23602105 seconds)
  done (took 90.041594735 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.237667053 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233966056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233994417 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234121551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233618361 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236147102 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233522968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23613197 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234789652 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236521363 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236998887 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2363538 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234621627 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236796289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237341012 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234953407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238321511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235527875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236612027 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237497881 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237203486 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235613838 seconds)
  done (took 28.342804682 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237958624 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237163607 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.235922015 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237567994 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242021658 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238623375 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.237452025 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23859218 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23848851 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236578695 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237651169 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237921485 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236479859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235735772 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235991158 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235774845 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238478425 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236458953 seconds)
  done (took 23.43090496 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236932043 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.236153329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.238885267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236836266 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236586414 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239121519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237335994 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237973973 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23900931 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.237066666 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.240376657 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240140732 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239456181 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236948419 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239236351 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237383364 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.240214081 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237285531 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240214703 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238175213 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237622617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240350152 seconds)
  done (took 28.399807158 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239489939 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240470007 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237451637 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237229191 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237346784 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239622778 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.240978447 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.237627489 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.241595387 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240532709 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236563182 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.240589794 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238493549 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23875186 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.238554516 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237809782 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240858338 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238453522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240376894 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237486652 seconds)
  done (took 25.939179981 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240859085 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242077008 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241324159 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242292516 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242128307 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243133189 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24271071 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243057716 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242868162 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243713924 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243104219 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242763969 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243294593 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242762063 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243827405 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243465224 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243403342 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24269966 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242569975 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243956396 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243883585 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243361671 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244152278 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243372939 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243937692 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242927642 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243557061 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243410553 seconds)
  done (took 35.963261392 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243364769 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244482353 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.241689088 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242469019 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241940872 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241055652 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.241365244 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.241542585 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244040999 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241287677 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243512282 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.243560506 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243224772 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.243315589 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244317917 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.244241033 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244003201 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241925697 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240871039 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241965169 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24452088 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244431032 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.24430885 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242353607 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241243308 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.245317703 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243138253 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242325397 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244923294 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242843049 seconds)
  done (took 38.452379452 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.263408144 seconds)
    (2/2) benchmarking "in"...
    done (took 1.263215464 seconds)
  done (took 3.689211858 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.242660376 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244683099 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.245092406 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242888748 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243206142 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245552564 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246005514 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243580516 seconds)
  done (took 11.115957223 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245195135 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.24671311 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.246630022 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.246042459 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246126323 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.24580692 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252418263 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266330366 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.247352537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247955965 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254069467 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255817529 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249450795 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24699376 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247337386 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248695414 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.247154409 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247097324 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.247946628 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247725633 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24756518 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248336978 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248891775 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244647864 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.249057354 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260097529 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272088857 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.248749528 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245830754 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25103196 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.248596243 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.245485885 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.248207764 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248618411 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.248786347 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.248274259 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257151359 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267616748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.254930638 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269388068 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2503286 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.247838846 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.249775331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250323384 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24936709 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.248527465 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.249245268 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.245495034 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249543346 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253110539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.254826938 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24890479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246840854 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251800755 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250415203 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255541339 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268019157 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25336397 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259997696 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260583449 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282586735 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274697801 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251569288 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249890451 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26135295 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.2757312 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256955676 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.270202192 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248222143 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.250135594 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256369004 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283074185 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277302111 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24976398 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250896821 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.253093907 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251455634 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251485867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259575117 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273030364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.250982793 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252384328 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260321703 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277867785 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25193827 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251807152 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250768034 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251143026 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252947799 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262173751 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270266465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.25198305 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251842532 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252212794 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253231002 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.254668849 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252033223 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252638275 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250159209 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252799369 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251464779 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257770826 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263147684 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252776715 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252695911 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25883401 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.273784106 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252476983 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259313991 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.253922582 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253098282 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254735013 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259066994 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.251743497 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257071096 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262421202 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.252962803 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253159789 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253256801 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254247596 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265186215 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.282421485 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.253109309 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.253940724 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.258574211 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265889661 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255344441 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257125888 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254487608 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.252235852 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.252288822 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.255419722 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.255463044 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255536515 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254620703 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254638119 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.25198 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.256324101 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.254800931 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255609281 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.255984862 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.254983621 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256616937 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.256780867 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.255339558 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255547668 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262734904 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274316059 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257035527 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255819266 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253625547 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256685896 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256341006 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256272754 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254858748 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255786756 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25585026 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.257175139 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258024686 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.256589186 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257288816 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.256588848 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260297673 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256845884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259226153 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.256008028 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.254609222 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25694813 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.257309362 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257263171 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25797395 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255273591 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25964497 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265915398 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.256765197 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.257796204 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257905307 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257029158 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258608008 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259183551 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.26122488 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266627694 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258295473 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264384708 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276933055 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258111269 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.258259923 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.259045226 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.258919831 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258256357 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262238435 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267775429 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271716804 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284547648 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259956182 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263676443 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260371804 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.262918273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261072959 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.258909161 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.259320061 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258424424 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258572608 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259453779 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259975419 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259089477 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25772831 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259852767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.259316992 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2591388 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260234172 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259005551 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262348527 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.257744393 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261995083 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259709584 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259121834 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257721213 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25879482 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.259538523 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.260782338 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260298928 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265340891 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.258877452 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26174218 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261417768 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260747338 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.260331681 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261118569 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263952812 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260100841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267635602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28037572 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.262382192 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268122503 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280173511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260389566 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.263938215 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.262401985 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.258478752 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265636608 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270273903 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.261887306 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26197816 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.261721753 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261315203 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263109782 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267530181 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.280298392 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.26116797 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262696515 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.264061637 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261301555 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262528474 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.262115325 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.262408325 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263707149 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262948952 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.264027027 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262771342 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262857272 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.264116879 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.263044879 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265380977 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.270632177 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.269240628 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.263094914 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.265420792 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.266076187 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.268909092 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263346206 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266162029 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263150192 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276494082 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.289145589 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271158065 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.284831754 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.265405197 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270573074 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284559875 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.267817435 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2653148 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265076741 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.2651728 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.263763125 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.262367142 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265155181 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265923732 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265840449 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265714605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.270302416 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.264787296 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.26564944 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.265776825 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.265782917 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.266920966 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.264573163 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266246361 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266265886 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266224021 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263769077 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.266169465 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272258987 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285493047 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26567032 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.265039148 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.265524168 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264087915 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266866282 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.266653048 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26949121 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.274329161 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270355872 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274734994 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.267945412 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274039482 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267044386 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270283649 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275830303 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265052629 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265441394 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.266364625 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.265964564 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27287898 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28656027 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267571931 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271284712 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267002841 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.267341223 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.267588784 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267959706 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26745077 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.268080122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274635149 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.287908132 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.271638364 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269348166 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265470408 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.268404231 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268631072 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267581246 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271093924 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268710392 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268620279 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269775327 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.268893911 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269290437 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.269160273 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.269118598 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.266735351 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270152797 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275255243 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.290054574 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274084879 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270048317 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276965095 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290612013 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27644827 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.291600011 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269716453 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.271099723 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271041461 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270565905 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268577636 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269548649 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.270632945 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271792167 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.273877132 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268865095 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272773805 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270597415 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.270145174 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.269556488 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281892325 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297307399 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.271218131 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275254269 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269143491 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271491517 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.274953006 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.270896279 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.268986703 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.273201231 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282775619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280391396 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.271787138 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.271875526 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271000252 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271259282 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27037258 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.272548 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.271657769 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272341847 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.272528451 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.272403723 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273792667 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.273840897 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.273536235 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273068211 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274551433 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28189434 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291479894 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.274615641 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272109072 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272172711 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271830803 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274275648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.273815587 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272847376 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273677275 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.274548075 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281468828 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280074069 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27632863 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.273445075 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274314072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.273562764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273568938 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273453932 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274318721 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273460432 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.2749225 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.272901284 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.274074505 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27274876 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274363937 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.274133688 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275068502 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277695749 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.284114681 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275436094 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.2726085 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274471629 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274876411 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.273723235 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.274726862 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280864042 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298809848 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285541 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284009712 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27870416 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273965096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27819176 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282375633 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.274916052 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.274672695 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274987231 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.275518256 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276288236 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278976081 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27692736 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280157256 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.296200346 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275903007 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283308338 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.296383621 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275951654 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277485386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278897667 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274836623 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.274696875 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276968429 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.275967852 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283046568 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.296653409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276994973 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276900552 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275153744 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276826878 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281034018 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277282481 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277777276 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.275090428 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276548113 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277737606 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278440208 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27599386 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.277054196 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277479077 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.282084788 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.287734533 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.275005995 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27906769 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277657308 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.279642237 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278795642 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278080978 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274932763 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276595792 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27823861 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277779491 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278042156 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280572845 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.279599071 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.279223141 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281155892 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278490716 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282371866 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290002034 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.287257196 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277791786 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.278677831 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280002333 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.281145959 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280616381 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.279231829 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2789563 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.280233255 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.280394 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280622015 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28034344 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.283555774 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298387737 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299608111 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279462836 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.279816031 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282505051 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280938635 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.277356843 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28080019 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.281936489 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284791279 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.291723836 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.281801621 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28537186 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299533077 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282049758 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285212699 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.284415071 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28866922 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.2837237 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280807204 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281284343 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.286239037 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2978625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281775616 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291951304 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315650545 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.302937174 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.283171404 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.282328978 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280292878 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281208628 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.282796519 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282341314 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28295457 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282518654 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281648565 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283673949 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287939112 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.282438833 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283079323 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283701326 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.281558386 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.28436532 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.280612264 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282916491 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283749895 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.283722095 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283852443 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283268158 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.282362007 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297528701 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.308829567 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283442634 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.283758284 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.28332263 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286780939 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287675196 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297445067 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.291554633 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.285577845 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284243483 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.285033889 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284227578 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.282647939 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.2848235 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284562936 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284863423 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283176059 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.299059811 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31160613 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.29041395 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.285034719 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285372003 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.284831717 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28549317 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28511951 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285225892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.286757144 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286998984 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289186827 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.285973838 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.285305251 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.289794974 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.296805595 seconds)
  done (took 757.367749552 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285069738 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284882015 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284029637 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284006651 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286356771 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283836076 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284665102 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284918212 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284239669 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283673119 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284318584 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284016485 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283924317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286199312 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285211298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284728148 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285415855 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285003955 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283936423 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283654181 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285316503 seconds)
  done (took 28.176942982 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.287092237 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284871246 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286156239 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286915614 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286200494 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288077146 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285500005 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287887626 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289497507 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28479019 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287585117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287631078 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.285653506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285589984 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286553373 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288503728 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288634725 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28694125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.287962593 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286537093 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289945518 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286737682 seconds)
  done (took 29.516081644 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.287774434 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289468605 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.28702726 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.285935629 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.289213362 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.287721272 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.289504629 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.290031412 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.289876517 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.289559142 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.288209613 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289791316 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.298625737 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.29495448 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.29071312 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.290914993 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.435846569 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290637262 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288905457 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.28906375 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.287633784 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294191483 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.310047855 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.287358988 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.289291299 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.290169355 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290548817 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.290121192 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.291039792 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.291314182 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293608569 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.289810402 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.289584893 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.293858199 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.288917949 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.291379073 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295443367 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.291555387 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.290524622 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.292772627 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303394541 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.317548825 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292628634 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.296994741 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.313582901 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.291925033 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.295888608 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.302270983 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.291995767 seconds)
  done (took 64.693218764 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.291240979 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.29244242 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.291587809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29542143 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.293159724 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.293029931 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.291900906 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29301862 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.290918539 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.29342283 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.29383112 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.290842295 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290331262 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.293431744 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293026254 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291094845 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291329598 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289868327 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290895983 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290377087 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.291771476 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293041055 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.293561034 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.291999819 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293571498 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.291977604 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291587038 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.292984098 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.292413341 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.290708001 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.293236976 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292172502 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.29290189 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.292128274 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291120919 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.293702236 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294650701 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291715954 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293106422 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.29128261 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294286034 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295311838 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.294938012 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.295060114 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29459044 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.293331454 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29539541 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.293349576 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.293338357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.298011655 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.296156751 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.291834686 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295227645 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293514527 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294698094 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29494661 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.291960451 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.293350073 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.294749652 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.292672854 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.292395923 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295710001 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.292445678 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29561248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29498633 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.293487779 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.294292866 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295694481 seconds)
  done (took 89.138903608 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294345427 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.294558125 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295322058 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295862638 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295135752 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.295303909 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294604711 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295490498 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295087806 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295788026 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296874349 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296308616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296504235 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299020126 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297470766 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29653996 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295572444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295904374 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296224678 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295864579 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.295618713 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296832382 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296320124 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296447042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296457552 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296084917 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297964159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298137775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297466664 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296276487 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298100006 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.297257583 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298285032 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296735023 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296726442 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.297919793 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298110809 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29808814 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298296743 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297935523 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296954884 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297987506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299139013 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298336016 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297858052 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298812561 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298082611 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.299198042 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299093569 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299387417 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297747284 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299027496 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299378635 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299327567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298050535 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299435633 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299738239 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297602697 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298715695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298290677 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299254715 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.300522935 seconds)
  done (took 81.644166812 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299325156 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301554467 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.296963828 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.299024426 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301406153 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298030465 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300771497 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.299408556 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300690966 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299543749 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301351607 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298585655 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298223457 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299766307 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297875805 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298251435 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300272993 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298079982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300045123 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298590858 seconds)
  done (took 27.199736715 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.298163457 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301483578 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299065815 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299464098 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.302522383 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29977325 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.303250634 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30156915 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299504055 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302696972 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303517416 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303003886 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300380698 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30010265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.3033899 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.3031295 seconds)
  done (took 22.034091156 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.29916423 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.302375588 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301367491 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301542522 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.299312017 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299635938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.303179553 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.300247861 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300791478 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30352986 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303410835 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.303114324 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.303956272 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.303530458 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.30156031 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303791744 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.300955524 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.301839096 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.30536621 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303320003 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.301154384 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.302052301 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.304119215 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303625903 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.301791406 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.302935737 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.303533276 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.301620588 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.302588496 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.306236592 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30268159 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303629581 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.302710375 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.303296078 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304980822 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.302464308 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.305383635 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305978398 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.305075837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.306288218 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.306261888 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.303746764 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305180841 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30682902 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.304413656 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306301035 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303781828 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.304465768 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302625779 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303716446 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307326323 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.308041368 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.305869451 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.308758796 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.30815374 seconds)
  done (took 72.916164452 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307529352 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308732808 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.303659545 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309053629 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307550694 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.306945015 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306866342 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303226174 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30732213 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305356606 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305643058 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307714702 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304728639 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307146516 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307133687 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310372061 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30638287 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309278524 seconds)
  done (took 24.741333568 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.307066311 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307843409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311010765 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.306960777 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.30750721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310112314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306665973 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.307765762 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307701696 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308222482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303748774 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.309414338 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309586608 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.310197636 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305101998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305263811 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308123993 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306712581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.305877739 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304640318 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308410311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307362521 seconds)
  done (took 29.984777399 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.308188549 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.306180156 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.309035626 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.326968205 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332302385 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.332207494 seconds)
  done (took 9.135256015 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316447225 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312620192 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306887813 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31123463 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309727018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306912587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307208349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306917837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309708196 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308974691 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30819617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311132449 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31031001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30820585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312668658 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313439378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30973621 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31052677 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31122058 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313436092 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308561494 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309210624 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312012218 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309435072 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308824021 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31010278 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311478001 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311113978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308449156 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313461424 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312954185 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310808861 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312517626 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310958008 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315007896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31088553 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307871942 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31324967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314516317 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313047925 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313369327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313204817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313722942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31105394 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312120619 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309946121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309287442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311387445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310947621 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315187106 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313381814 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311805141 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311293231 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311299444 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312025634 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312792524 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310494953 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312389478 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313955739 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312795799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314226196 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313722738 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310314682 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3101231 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315485099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310446579 seconds)
  done (took 87.796640466 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309233435 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313114103 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312733566 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314888742 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312641017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312916603 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314962646 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312177936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310496788 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310868512 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312603644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310666009 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312013751 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31316886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311095502 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311702983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31217502 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311893776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313295903 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315055805 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312042364 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31371688 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313928251 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311689268 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31141336 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315233752 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311495728 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311954779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312399637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312202624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310723064 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311193784 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311895319 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312512224 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312467471 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31298034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312472855 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312807304 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312717728 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315179355 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312196933 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31488646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312982231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314301247 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314492181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314856188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312876193 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313710126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314187357 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313124924 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314673747 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31514657 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315540181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314941596 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313628266 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313141791 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314485486 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315414981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314568242 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317511182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316211279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315319457 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319758632 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316217857 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315724189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317057044 seconds)
  done (took 87.911596492 seconds)
done (took 1767.43878902 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.347532756 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.296110468 seconds)
  done (took 13.871393679 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478701161 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.43226972 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.314590224 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.331148205 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314752993 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.333303029 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.316669946 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.315159108 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31813003 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.317040443 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316320342 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506019083 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.315074772 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314727867 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.315031315 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41014903 seconds)
  done (took 42.884173411 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344505095 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.329658908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.443686386 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.348921574 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34467083 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.52932447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.38557164 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327898055 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.514386659 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.374340817 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.137062532 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.351626805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327767238 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.603119871 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.34834905 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527853582 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.603163407 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.142417873 seconds)
  done (took 31.213168909 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.833639352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.322246121 seconds)
  done (took 9.386185004 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.361224997 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.328278556 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.366603731 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.349877094 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.355992344 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.392432916 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.328115791 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.349290982 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.371402936 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.374281456 seconds)
  done (took 64.813174189 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341464631 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327851493 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.321930102 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.321938355 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.314776595 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.339097703 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.320777417 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.329055612 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.437771422 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.468507621 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.33050299 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328495163 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.340656819 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322076721 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319681501 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.358588898 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.508691232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.328204017 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.319301258 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.329806816 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.324061373 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.420651049 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.374612541 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.328899022 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.462135071 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.457583697 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.332660429 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328867 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.478063699 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.33038972 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.323055649 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.324113349 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.326891134 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.952451162 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.837510008 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.344126457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.356614681 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.339899445 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324494426 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.474081651 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.332261289 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.329604689 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.325199403 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.839133853 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481588389 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460144994 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.776083064 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.350740175 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.324081346 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392165368 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333342927 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323350083 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.354111836 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.150238135 seconds)
  done (took 112.457578049 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.331021102 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.706649823 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487108212 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.348185047 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.16594407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.130883684 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343511498 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.645996956 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.379959205 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318273104 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.675931228 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887133561 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.349474276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.331497296 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878188951 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.335782645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317321609 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.237091744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.345396547 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317632185 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840562283 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32719344 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.325911224 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.346771358 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358360249 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831567453 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.987216924 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.920310269 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.345381492 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.318948012 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833450615 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.350039548 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.359054019 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321493226 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.603551526 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.74060196 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.730863218 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.350462429 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337853131 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319122087 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.335732231 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819650127 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.743733864 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.348216284 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.326275451 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832809585 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.345361264 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.317363512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.320645837 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532166247 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.16996933 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327087643 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.95908977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.328204198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.649592698 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.401365038 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.327603815 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850516264 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348375583 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.564003408 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363434964 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319861503 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322505724 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324288005 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327536643 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.714299376 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74614355 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320967693 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.713835241 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.856775115 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.347225138 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895906569 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.2732891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33599035 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.368530617 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.335583489 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.954372863 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.869893749 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.360759441 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321330405 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701012697 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.349836018 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.657034931 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.340133746 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.349596993 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861200028 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.337277588 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.3467696 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.321526443 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.330298385 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.123034517 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330848677 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.633628596 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.378293066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.322574509 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.323858698 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.331358905 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322135303 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.332285048 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.325689668 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887643157 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.354956407 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.319283653 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.352919614 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330741013 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.3515021 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.323121238 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.325412438 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552928235 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.789919078 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.354576138 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324702323 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.324212769 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.357938619 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.621025497 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.325366189 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.679364101 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.352852673 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326974296 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.330900415 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106262236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363053912 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322440631 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.333883408 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.264325791 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.538505894 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.351572229 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.352273854 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323204874 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.352434075 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.796303303 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.355138069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.359708148 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326605019 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0696677 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.351970786 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.353075547 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.824018442 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.341101761 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.337362575 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.335383733 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324119933 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629870647 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.614053837 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.638639271 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328302667 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.354098614 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.066738844 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.384668862 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473691999 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354445943 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311947249 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526289676 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.502710466 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324888252 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.938399254 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.325361925 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551124596 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.333760777 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644166743 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872836664 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.351944152 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330556707 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081308832 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.057574317 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.986444991 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.330787657 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.6683827 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.316896567 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.811218004 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.326326186 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327644974 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.913823642 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.339365798 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327356209 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.326667345 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.327575283 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.388678275 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503298292 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.679393768 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330429529 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828423093 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.422452184 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328284592 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.338022534 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331136142 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.675974992 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343246036 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.33091128 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.339918929 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.330823224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337538629 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848260573 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.278208873 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.339086789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483184155 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016860555 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.356339207 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.329918959 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.023137398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.60919582 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887083471 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.406565389 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.686018227 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.362102836 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.368396266 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.139544326 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357584387 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.852021708 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.361348781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.336817824 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.980128012 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.358286493 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.404047926 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.331775078 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.345380723 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923954197 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.356739051 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.330819691 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.780812995 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.361872294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597061522 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.338475591 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.355637842 seconds)
  done (took 1113.949817817 seconds)
done (took 1389.803499206 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.333976379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330736723 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.322165977 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338940153 seconds)
  done (took 26.574349468 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.344631611 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.339198591 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339064612 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336868601 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343694971 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339164996 seconds)
  done (took 9.290460569 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.787840103 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33101098 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.340501314 seconds)
  done (took 19.707359542 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.569834421 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.751110744 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.740615596 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.810954435 seconds)
  done (took 11.122526651 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.338791644 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.339970774 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339071384 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.343891299 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.344585559 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342904488 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.340359808 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342387033 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345412371 seconds)
  done (took 13.32495678 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.748379165 seconds)
done (took 87.017274823 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.404538403 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.644086947 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.679163527 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.340817162 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.34020342 seconds)
    (6/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.018740316 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.392316829 seconds)
    (8/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.37033779 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.418358759 seconds)
    (10/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.31305629 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.64140667 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.40174988 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.336702638 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.386467132 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.143292047 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368529824 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.318164413 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.321194308 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.371641802 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.685643659 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.353744152 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.321378505 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.369336772 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.901831013 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.34200035 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.072726135 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.314157979 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.432659424 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.852872444 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.458309747 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.220827189 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.338672486 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.238511722 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.31528522 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.350705063 seconds)
    (36/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.460530766 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437770308 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.334601345 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.662330726 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.101806931 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.368255502 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.335769422 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.365671275 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.283627844 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.381696477 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.343137099 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.353230786 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.446233596 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.318494369 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.370132873 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.327503283 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.163746339 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.384052374 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.765325497 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.349489194 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.458962722 seconds)
    (57/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.345263236 seconds)
    (58/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.345103487 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.333832928 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.629161497 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346426198 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.3182314 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.309044704 seconds)
    (64/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.356577831 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.319175864 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.435861462 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.769059156 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.424387589 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.894679817 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.318950528 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.70637802 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428990751 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366735782 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.530892097 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.719939798 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373620943 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.032453866 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.342933773 seconds)
    (79/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.539401514 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.88572676 seconds)
    (81/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.32718744 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.363738228 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.462174255 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.327390656 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.656520532 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.644424187 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.489724078 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.338054638 seconds)
    (89/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.343667436 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.845953879 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.072827137 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.330041525 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456745614 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.424243111 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.905876772 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.237864235 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.373429043 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.39967696 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.437330551 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.319258177 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.380647423 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.320866871 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.987626876 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.476267429 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405142819 seconds)
    (106/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.741205253 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.329845148 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.620436437 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.803292044 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.330222453 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.433957307 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.34119519 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.6047406 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.227478726 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.187288832 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.543069036 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.349456432 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.214167945 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.33099786 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.376381563 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.65143538 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.605259663 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.976755359 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.731442265 seconds)
    (125/309) benchmarking ("sort", BigInt, false)...
    done (took 6.370824409 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.874935698 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.393907391 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.106619955 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.366940002 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.166116608 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.477060517 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.650739612 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.322220291 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.348193472 seconds)
    (135/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.481128233 seconds)
    (136/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.342186632 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.097234339 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.225642098 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.331964926 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613709808 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.673775513 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.397146973 seconds)
    (143/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.86933262 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.20980831 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.35078616 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458124568 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.344944622 seconds)
    (148/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.37897256 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.353036745 seconds)
    (150/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.369968364 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.033841393 seconds)
    (152/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.378310149 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.010496365 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.277224786 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.229913421 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.378126511 seconds)
    (157/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.349470958 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.349859574 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.363415406 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.39879219 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.37636763 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.345737739 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.071194677 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.3333163 seconds)
    (165/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.182949076 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.352171927 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.392948897 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.429752321 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.326208757 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.400485275 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.941419427 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.17364097 seconds)
    (173/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.749941678 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.393616208 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.443996894 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.365761377 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.457543576 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.00197927 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.334591253 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438843261 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.917399754 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.333958825 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.35743702 seconds)
    (184/309) benchmarking ("sort", Float32, false)...
    done (took 5.422286759 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.448799381 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.370424993 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.354130323 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.381353939 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.348496912 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.173623038 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.354862732 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.424237972 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.767736182 seconds)
    (194/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.385463682 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.199817529 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.474227995 seconds)
    (197/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.355179887 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.33647104 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.907504934 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.398189298 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402645752 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.371817343 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.755692897 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.255595176 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.324522716 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.354241304 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.442699974 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.3284403 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.565728358 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.012024254 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.429624072 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.776974835 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.723733264 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.482086181 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.541601277 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.37353012 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.855261911 seconds)
    (218/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.454549398 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370805204 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.431964122 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.473289636 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.301927327 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.417945576 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.132106696 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.689112727 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.356630426 seconds)
    (227/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.56292973 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.360174578 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.399145444 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.422049495 seconds)
    (231/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.329266971 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.338350157 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.296656394 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.685894984 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.372921555 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.294041178 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.922462294 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.369162836 seconds)
    (239/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.338163274 seconds)
    (240/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.706531198 seconds)
    (241/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.781857937 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.37792181 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.299259783 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.066827145 seconds)
    (245/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.109006768 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.406131382 seconds)
    (247/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.046487794 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.630120607 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.33918724 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.354135295 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.585934135 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.427488148 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.365106479 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.416019942 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.282445192 seconds)
    (256/309) benchmarking ("sort", Int8, false)...
    done (took 4.384108151 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.387090584 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379564125 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.350176653 seconds)
    (260/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.947610676 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.394416906 seconds)
    (262/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.087462622 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.798586108 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.768020292 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.377210848 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.240843988 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.923451888 seconds)
    (268/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.038076105 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.240111625 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.149543451 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.457674408 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.576823475 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.928715868 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.360186988 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.347566619 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.495191544 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.372328491 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.237652788 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.360175083 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.341293322 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.523368698 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.076562973 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.085310424 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.452756833 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.459106626 seconds)
    (286/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.439440924 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.438062747 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.727839722 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.497031722 seconds)
    (290/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.381752098 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.02291247 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.341267858 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.362390257 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.968212063 seconds)
    (295/309) benchmarking ("sort", Float64, false)...
    done (took 5.80351143 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.12658927 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.64259019 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.334969297 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.914673659 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.403339814 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.829245848 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.080834057 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.41243252 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.343828901 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.414117255 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.386213719 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.351973395 seconds)
    (308/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.930585527 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.343098954 seconds)
  done (took 1059.983703007 seconds)
done (took 1061.233404932 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.388422228 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383599396 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.364996902 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38804599 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.477090759 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.388386155 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.376334278 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.367624929 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.413374973 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.415161758 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.364885412 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.387607068 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.367792357 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.366369508 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.364800453 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382101655 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.561669445 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.374746115 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.38499365 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377935999 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38391992 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.364924935 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.415558058 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.38856397 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.370410614 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.373588683 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.369699851 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.38602528 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.478183497 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.371620135 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.369797704 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.380416702 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.558729439 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.366158062 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.362991005 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.387542427 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.378115653 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.378704004 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.369828285 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.399401828 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.96731393 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.385402903 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.370058355 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.368435318 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369391825 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.371784153 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.370078514 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376191784 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381865391 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381732638 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.955899192 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.401688328 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.370879998 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.368628914 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380387419 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.368623241 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.371900254 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384365021 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.388510643 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384707681 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.568595976 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.382553675 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.37082216 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.384998986 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.375594 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.993332624 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383302902 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375481947 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.039578356 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.401508805 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.997480142 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397729015 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.371947797 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.384728481 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.402646387 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.580460674 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.374485814 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.370733571 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.377039655 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.368216137 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381675373 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382322603 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377076429 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.374539556 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386230995 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.393503503 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.384793027 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.371691205 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380045193 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.389775895 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.377251427 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.382294722 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374561056 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367751445 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.380973317 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.375030654 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.373203305 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.373517385 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377857531 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384147752 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.027468944 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415006753 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.367349584 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.369806837 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.371109243 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.384891985 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.96966757 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.392424263 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394256119 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.419146619 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.372614408 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.573898428 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.383872806 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388820704 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.381290052 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37564706 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.367471241 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.57991802 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.974209247 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.407894938 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.374646923 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.370780323 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387897111 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.373478267 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.370091862 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.5889959 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.383447223 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387022655 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.495104569 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.384370447 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.40656899 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.371597096 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.376558641 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.397144634 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389978156 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.407446173 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.37740609 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389284001 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.390022868 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.370091873 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.385817233 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.385688872 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.375987126 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.3818675 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.369049835 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402818798 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385985104 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386823255 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.395869603 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.49591861 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.372742078 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.576948982 seconds)
done (took 234.092220432 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436727219 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.372716435 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.46008323 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.371515872 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.474705824 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.475675466 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.369438822 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.369017426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.369285104 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.773355798 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.369478841 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.36898512 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.371239094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.369747159 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456546764 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.371688271 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.371024074 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.711136741 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372856382 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.443471265 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.372829859 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.371475369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.372052824 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.752523953 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.368241892 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.369753211 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.444653174 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37493034 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717047261 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.369856761 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.371418718 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717491264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461614437 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.389666185 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.38411235 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.380130983 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.477585332 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.395197601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.455712252 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.453428752 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464579298 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.411448952 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.369764871 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.368378887 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.375820633 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.372669572 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.372296153 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403328152 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.370949655 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.372232177 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712914565 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.384132967 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.372647331 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.372393983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.372928193 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.404265289 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.372233251 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.374109752 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.464686308 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.375159064 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439261811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.753842079 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.776096378 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.374873868 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.376606578 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.372247909 seconds)
  done (took 151.138850182 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438796491 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.446379202 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.495216023 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.395973015 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.425483081 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.499589616 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.395379215 seconds)
  done (took 11.379188754 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.381686152 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.37799177 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426769433 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428628421 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.376214125 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.522526231 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380443625 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.387664193 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.373583975 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.427951325 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376927334 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376872851 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.383547911 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.37496907 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.424796827 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.387399194 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.489527013 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.378545603 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.376798817 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.527997239 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378399721 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.385609871 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.428993364 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.391031954 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.378967276 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.383006298 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947571841 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377197525 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374170371 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.377808446 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374606294 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.414185359 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377037671 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.379334266 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377999529 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.492183949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.381882898 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374716274 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3787057 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.381378079 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.379414392 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.380937701 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.379065673 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.376048485 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377866269 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.400465169 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.381509921 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.379258724 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.380450383 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379071038 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.427990884 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376872347 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.376756475 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.37738054 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.434042769 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386890247 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.379068415 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.376664425 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.381409328 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378393095 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533226549 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42733822 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.380469365 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42778594 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380219195 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380812854 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.384116552 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.384242796 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434105284 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.385125354 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.429350474 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381678554 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.534048844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.40202456 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381696712 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.383859989 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.382495523 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380340838 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.375795612 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.387408827 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.379360606 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.384662939 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.389634336 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382549294 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379824108 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.487406003 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492427198 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380251053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396134144 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.389996119 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.380331476 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438122519 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383001127 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.380021886 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433895344 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.496112305 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.435229978 seconds)
  done (took 157.696185065 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.389769212 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.39089557 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3836579 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400661756 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.386145464 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.384553407 seconds)
  done (took 9.623647573 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.389815881 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387770051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.38593832 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38558913 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.382271638 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383777441 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.386468136 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387762075 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.390779679 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.38617351 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388110653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.385582935 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.388283107 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.387802214 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.386291123 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.383358183 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.385020702 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382150661 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386583766 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387397067 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.492051108 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.387502758 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387332171 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.388660898 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.392003149 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.385789989 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.390677422 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.384068099 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.385859341 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.39260613 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.410285946 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.38536461 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.385605867 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.393882791 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390485178 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.389287744 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39071631 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386753497 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.383498512 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.389861261 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.390392554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385168777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.385650927 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.38623864 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.386848046 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.390013801 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.393315424 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39235227 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.385466263 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.38765565 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.386576523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.385805584 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385678146 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386946612 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.387751541 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413046445 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.39293453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.387951075 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386353088 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.388370692 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39202881 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.389925637 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390334828 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.392308452 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.385356648 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.390010193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.387709972 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394645798 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386743659 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387778888 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.388491957 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385133434 seconds)
  done (took 102.367688295 seconds)
done (took 433.485392946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.672785954 seconds)
  done (took 7.96698234 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.803033513 seconds)
  done (took 8.098933145 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.699622047 seconds)
  done (took 26.002532147 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.455923536 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.500319082 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.401632205 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.391122695 seconds)
  done (took 27.045342368 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.531564608 seconds)
  done (took 7.825791725 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.384949863 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.37977638 seconds)
  done (took 14.061541742 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.772613898 seconds)
  done (took 8.068065908 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.046979275 seconds)
  done (took 8.348202491 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.38474223 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.408139987 seconds)
  done (took 14.359078492 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.362062989 seconds)
  done (took 7.657199135 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.638421861 seconds)
  done (took 8.936656225 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.390602866 seconds)
  done (took 7.688396151 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.920807887 seconds)
  done (took 8.216432585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.62327847 seconds)
  done (took 10.91918135 seconds)
done (took 166.489430331 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.381926256 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.383759603 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.383833715 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.382885988 seconds)
  done (took 26.828961796 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.423704637 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.423873828 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.425350909 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.434894946 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.426864016 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423954773 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.416431611 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.416072876 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.434758049 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.426001336 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.425244732 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.425237142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.425210282 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417333198 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.425986819 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.426730491 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.435862148 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.42498889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41714664 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.427542435 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392869847 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.435613848 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.427373498 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.391495377 seconds)
  done (took 35.447400925 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.913662254 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.461678167 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.544399802 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.443205144 seconds)
  done (took 7.659981209 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.442749623 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.445905843 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458685408 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497015537 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.523393976 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.453952705 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.41947044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.414527783 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400528536 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.44603674 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.521940484 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.460952868 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.529831922 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.391877882 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.577872409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.392731226 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.392654959 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445280409 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.497913101 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.530314222 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.393655522 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.445330895 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.447942413 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.46375497 seconds)
  done (took 36.293439266 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.393553008 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.412037387 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.390377321 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.392365985 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.400035128 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.391426536 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.392625255 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.394433562 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.392851254 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.398753042 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.391192215 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.405729996 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.391946998 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.391836955 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401229306 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.394579391 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.399246573 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.393563701 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.392931326 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.399980376 seconds)
  done (took 29.220390847 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.387275202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.240364267 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.737622444 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.642550554 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.385093447 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.387268358 seconds)
  done (took 28.08100435 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.47534653 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.662014107 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403778592 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.809751008 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.900450814 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.413895966 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.397411888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.67865059 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.066198707 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.060376245 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.471181247 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.479727089 seconds)
  done (took 21.121066211 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.39632051 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.397727692 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.398235367 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414628241 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.457762232 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.426546165 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.400752233 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.388637221 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.467269279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.492440708 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.428755359 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.457969912 seconds)
  done (took 38.430288378 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477304581 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442907859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.539152432 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293297597 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123189101 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602316119 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.309202442 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847964765 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397178657 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663986298 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390895838 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489241389 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65110725 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402955946 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402130285 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.529555239 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64736198 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940235819 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393256062 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.82595601 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425522225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390980053 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.959413942 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.436375274 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603399735 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37685451 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.651030634 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167093807 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724176628 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412622207 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403671561 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392175296 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666853679 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102180597 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509485192 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4022529 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.291173414 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.949297446 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.374301061 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.844649146 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415425698 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404890731 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402399312 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393470633 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327003839 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404921083 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856028453 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400985298 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.10512004 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393376182 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404121507 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487358097 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.39830111 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.965815506 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496449456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.40002628 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.390728698 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39952461 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961498951 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415585534 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408928044 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.337205824 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.888644135 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920464228 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103195877 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.517764145 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397500944 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398170074 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329542411 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.843702325 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421843199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533072873 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.420280873 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057548741 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177253864 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416933158 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.335462684 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006315953 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404485814 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.339301604 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624017726 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174184209 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334697124 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.342261357 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328964645 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224773013 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414194411 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.906296469 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402856564 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842881231 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414481679 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412241495 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420680549 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62082743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.275417717 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396511981 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.39580742 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523481532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418352396 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843853941 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331804757 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400029672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655050731 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.607881581 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407535682 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.550759601 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655694962 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422057777 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.421177344 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406023824 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.41862346 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.040096698 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42979752 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428249466 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425347375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174445747 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272761533 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409171876 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.507894421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400137341 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679611018 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.294938385 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.570133378 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466578582 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402993264 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398066635 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946197028 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260384841 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.2935408 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.395646873 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413449388 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.419566205 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.399043887 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361382252 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.402012857 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410188679 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.189109713 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62339448 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403404418 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684513925 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332199402 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538335135 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414686874 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.623794639 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.798128749 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.427484007 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660261431 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407984131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409690948 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422767394 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418939045 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495973977 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423219062 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.413511034 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669245378 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.404636207 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.403601626 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.993266449 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.186723619 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400376381 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.407167685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313166017 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049721447 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392923294 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405560677 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296451437 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.41666189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468652859 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408033495 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41250486 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.540671756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.414777297 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41600398 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.397808801 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635612968 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413054137 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.959193612 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492357895 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.62620415 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083773664 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44631265 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.337577787 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.110987891 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.095166414 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402173425 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594949346 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401919448 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411042275 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412524835 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.084798511 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0793924 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435158412 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.883443102 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419611148 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414910725 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.408093015 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403361944 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.529525418 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484249877 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428167764 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424226515 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547482154 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.416743256 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337375472 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.91911104 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409452546 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404876829 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.178873852 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439204693 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875513315 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915966481 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666032741 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.25385564 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426262186 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.079539855 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.451760355 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.400776315 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404539108 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418201584 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.421375261 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443768945 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.416328507 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.894004935 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.862133471 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970583694 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253966251 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066811409 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534660014 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.416302116 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.318666231 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866527526 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347481406 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.065079837 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619673078 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886882425 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372937263 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630278718 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.822864637 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330266868 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426499285 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634540427 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497709545 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.424057585 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428971403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617837896 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440389409 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40607401 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345835603 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.687055922 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657961098 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420141507 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495046097 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864148092 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426807362 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.195450906 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.405499976 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.888223158 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627008843 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.049148748 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.801643428 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422538229 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425426437 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915597096 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411736107 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935073478 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132079286 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438841448 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.6648388 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358971923 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.419708289 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418953793 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.40391761 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.046448459 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.427232476 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.676006081 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419169028 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34383983 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407739458 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03185351 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.291911382 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413534121 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41006409 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298389483 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425674119 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755240972 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.426607262 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.53295356 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443147768 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.343661846 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344281075 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.102756012 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418473723 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378599261 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00259394 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.866168109 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507458128 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449137388 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266511637 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668876571 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.423379536 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083701607 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666624898 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.37245282 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441757336 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.511805012 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411169054 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.422544857 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.293437165 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647864028 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317232132 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636997181 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.574398627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.312184542 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409684257 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634277738 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293277145 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416314663 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699810911 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.151096253 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.421875402 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267893316 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46485867 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416209235 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439156853 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.907243472 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429646546 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48332682 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422918602 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.422707426 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.423825902 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608584471 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43217701 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424113116 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.426230756 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506916641 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491206488 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.546160084 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.19658724 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093935085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305192938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118731508 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455490269 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414669407 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412884913 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34745309 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561763602 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.941558817 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688146544 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533856175 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.994005983 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445306663 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421636771 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441095091 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634962442 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687682463 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28938154 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413687157 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.111090723 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.573165851 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426873107 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.626505969 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012347383 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083899687 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544351716 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43046808 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881388469 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698804296 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.506054862 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41532299 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013106337 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435152511 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.966289132 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.451170837 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434219826 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573544666 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426044714 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196223406 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.451650521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.574641128 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.189578869 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009905831 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685198129 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.033112696 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.438907764 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099128931 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264399278 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692664097 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48606296 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427281582 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.531011422 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562591897 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.415623473 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.327412758 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417438565 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265644467 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.127089255 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425701878 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07519407 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703299482 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.415215804 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.41608732 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450030043 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.427324339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640866106 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225325121 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644955826 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428124301 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427542381 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.410708229 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075969388 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45063954 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35419201 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.421210098 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686951294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679361231 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444378693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.870965164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.130281304 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040328646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.394690164 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440371248 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433628411 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.214822993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076362955 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.574590478 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003698008 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080415739 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428116221 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70260433 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.425088342 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419637617 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705815588 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.424423015 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421758273 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441879361 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.077624689 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347740211 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.442822309 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.962950595 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.367532626 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64803833 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.144055704 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367006929 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420790094 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.623736962 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432047595 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53912745 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432365425 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.434139558 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434683693 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.162947121 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700098175 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426901751 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.40220482 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.449102031 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433491351 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437427169 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677936831 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427716661 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095884503 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.771232883 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677713627 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422050631 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.41169343 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.426790389 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422647225 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145601467 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399565261 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093599671 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069617632 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.424829547 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.444005246 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42510777 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.638572734 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634703028 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434845526 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445292787 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424970224 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44681907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.322028956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194874935 seconds)
  done (took 1642.285446537 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445573637 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.471694463 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.471935038 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.504292422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490849351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457633415 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.506095916 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.467135903 seconds)
  done (took 53.148732494 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.422156589 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.597562962 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.455744877 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.421853474 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.443727194 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.432160465 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.96996722 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.453229538 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.441955454 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.434751007 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.442854021 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.434126126 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.186785224 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.44247586 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.434544103 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.430003797 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.442767939 seconds)
  done (took 67.22881582 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.431157012 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.5462027 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.458822741 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.427348622 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.430711859 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.452468042 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.312798555 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.444802874 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.454694369 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.820669346 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.089828421 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.475425019 seconds)
  done (took 82.680828689 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.432176872 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.432358513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432157739 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.432532839 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433274859 seconds)
  done (took 8.496821632 seconds)
done (took 2078.222116327 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.678954477 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.269112761 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.183138765 seconds)
  done (took 5.78819529 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.573709768 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.6232193 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.785013937 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.763585051 seconds)
  done (took 8.083778241 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.715736108 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.81175589 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.612482783 seconds)
  done (took 6.476501748 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.089749027 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.44356961 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.568453259 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.428393504 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.435920452 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.438303475 seconds)
  done (took 20.641884616 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432581728 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.43586839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433883751 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.435804383 seconds)
  done (took 7.076757473 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.408057455 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.166210487 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.420787672 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.438020098 seconds)
  done (took 18.770310259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.178240058 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.188266719 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.174658573 seconds)
  done (took 7.878442175 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.4381318 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.286243692 seconds)
  done (took 10.062049592 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.738653249 seconds)
  done (took 3.075904493 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.562392471 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.762653165 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.633071838 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.536717434 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.643927656 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.086477065 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.438222422 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.927159583 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.51080947 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.084911487 seconds)
  done (took 31.527040719 seconds)
done (took 133.499001195 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.766061627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.454426832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.6340688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.736301292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.655470373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.634441977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.692568454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.698895934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.531892533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.245145061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.739118097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.657165618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.872925929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.455144994 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.872441242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.4533481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.659080094 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.173090983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.446226513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.453416781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.697260174 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.376032389 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.916926561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.713554291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670292463 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.586980152 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.957430248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.453956734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.43007179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.005969072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.588724597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.43004508 seconds)
  done (took 201.999971239 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.432728817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433075436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.430961893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449790645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.453323431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.451726551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.453383466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.453150928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.430600846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.450809863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44958515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432880424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431229117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432579134 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.431914192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.431683675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.450410064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.450132542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431639147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.444993362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435247116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.454371766 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.432908935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.432906167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.465397787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43300282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432987568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.459342953 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433088583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.432029867 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.430818935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432932419 seconds)
  done (took 207.443514689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433374331 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432811117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.431613759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.450822657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.445340415 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432875836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.455521511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.468022451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449746992 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.443843718 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.434324026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.437190033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.446468805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.446010241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.437042541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.452817315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.459427107 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.433030723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437031904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433567773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435784021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433120083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.47071672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.434064332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434634011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436424243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.433357806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.453399472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433674772 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.454533715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.446492149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.480271201 seconds)
  done (took 207.552568812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.632642009 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.442498472 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.444170061 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.377602391 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.442416218 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.442556684 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.437386309 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.639918568 seconds)
  done (took 15.204483004 seconds)
done (took 633.54213623 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.987029484 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.6887874 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.669365602 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.474939991 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.369422815 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.496138568 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.463545159 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.658328692 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.442462362 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.679273822 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.915528834 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.490919264 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.063631371 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.473107614 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.75243024 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.580178314 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.392801336 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.548744622 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.835859684 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.136871451 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.764763171 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.094192376 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.691932697 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.444148437 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.074248894 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.110214842 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.33576046 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.369542557 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.485223014 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.823027739 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.284952916 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.526890092 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538125205 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.544335656 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59890036 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581758024 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.526436814 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.53346572 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.689339631 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.787163832 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.062301304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.222106016 seconds)
  done (took 99.555392581 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.428491155 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.428256589 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.42729475 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.428715874 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.429985262 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.429008413 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.427926087 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.427807645 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.428904306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428589097 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.427575069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.429576482 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.427747448 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.430494668 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.427445743 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.429197604 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.429395249 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.430089753 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.428520396 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.428756328 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.430111241 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.427214739 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.429280168 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.429271611 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.430915816 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.429752017 seconds)
  done (took 38.501529845 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.447859048 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.714200733 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.916952629 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.465198359 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.447181217 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.454192213 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.541580123 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.460952135 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.452258713 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.45187693 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.632938448 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.459770705 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.488294783 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.956937023 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.462089481 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.450634142 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.450367729 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.449688656 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.725914033 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.469478581 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.566049425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.46032368 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.540684419 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.4692313 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.476874746 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450060159 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.454125633 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.985261487 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.48108187 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.631353816 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.400266649 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.548781612 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.944842414 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.954394492 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.41070593 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.463395241 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.451730545 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.63633203 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45204963 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.450833157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.542409836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.461777159 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.927256306 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.12479653 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.484712501 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.451544755 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.011315127 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.666478761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.750387844 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470639228 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.959803589 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.466342099 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.455269914 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.453849717 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.741890239 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.471104094 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.452865006 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.036899794 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.489103364 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.544299981 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.463208511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.452302991 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.739687514 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.464165703 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.729479091 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.465275092 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.461891635 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.476878172 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.930591899 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.467457541 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.137226545 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.486614292 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.453608681 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.6339336 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.738890879 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.065052044 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.490070448 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.746823127 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961831361 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.575981578 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.468873978 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.977176126 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.579453258 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.467463523 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.457936652 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.455488798 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.455097594 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.505107174 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.544886859 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.080059168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.157838624 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.070166632 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.581812986 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.478618433 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.45489623 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.042057176 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.490019085 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.45576335 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.929714435 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.144466315 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.489357751 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.462811051 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.147800106 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.490188224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.545105357 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.468844989 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.941033473 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.467056719 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.5101396 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.456964401 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.463163174 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.482190224 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.547860178 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.470741074 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.456565083 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.109867153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.677143115 seconds)
  done (took 192.369644763 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.463130134 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.449006549 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.454423626 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.458219261 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.448575076 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.455849724 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.45031358 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.450510509 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.455283904 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.448920816 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.449825092 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.448981932 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.454566306 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.480820913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460452706 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.455957396 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.061843044 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.451968529 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.451706365 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.450163452 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.287360123 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.463555241 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.45257673 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.47119567 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.453067875 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.452256813 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.458498676 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.47703427 seconds)
  done (took 155.577374141 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.459589037 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.111085821 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.478136944 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.613492791 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.492533151 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.457439704 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.611682918 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.535841818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.479676379 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.456550302 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455826727 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.809174806 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.461469189 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.099018192 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.701706088 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.646024535 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.104503793 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.490735994 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.457687598 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.457542999 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.61369814 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.466939138 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.829067007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.171043849 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.491269263 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.16035912 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.454903768 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460680371 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.460680228 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.162909049 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.489293213 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.837612106 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.561521971 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.541449949 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.18225287 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.130949393 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.13216939 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.652369471 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.470835887 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.458078408 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.460336979 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.444833413 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.161941243 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.49394712 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.46086948 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.138948276 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.494531855 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.4626551 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465815916 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.458220324 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.529676737 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.551393746 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.848063495 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.163634421 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.581505009 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.484743574 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.619903439 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.884764463 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.473924186 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.098034547 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.455369316 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.148772176 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492594069 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.445782057 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461164189 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.465159144 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.642861945 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.632740123 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.114391501 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.492903614 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.101144747 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.674085984 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.470770123 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.461305373 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.465485143 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.122821247 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.122865664 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.676546459 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.635157262 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.707517918 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.458646036 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.461530977 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.446164553 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.553951213 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.472836662 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.168526428 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.13492193 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.494598147 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.464141 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.464454984 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.464485969 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.677647493 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.197163478 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.586242426 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.106965407 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.874169345 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.850237795 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.474534692 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.531341745 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.483419389 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.844499963 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.475751601 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.530417763 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.944674001 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.855166283 seconds)
  done (took 177.557142017 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.75001906 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.850919962 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.572883615 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616796027 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.15240463 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.082867181 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.826704677 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.631987525 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.598335025 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.764215904 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.840951655 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.564036859 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.677398142 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.559043108 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.278616484 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.572186143 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.589288277 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.624997102 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.596234413 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.581680307 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.184850216 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.805149637 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.677061665 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.635471536 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575839042 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.366579849 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.095563235 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.028886921 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.679809061 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.984546657 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.082680463 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.70836649 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.582880043 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.26816798 seconds)
  done (took 71.775960158 seconds)
done (took 736.684941006 seconds)
SAVING RESULT...
DONE!
